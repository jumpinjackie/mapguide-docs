{
  "api/OSGeo.MapGuide.GetByteReaderMethod.html": {
    "href": "api/OSGeo.MapGuide.GetByteReaderMethod.html",
    "title": "Delegate GetByteReaderMethod | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Delegate GetByteReaderMethod Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Represents a method that returns a MgByteReader instance public delegate MgByteReader GetByteReaderMethod() Returns MgByteReader"
  },
  "api/OSGeo.MapGuide.ManagedException.html": {
    "href": "api/OSGeo.MapGuide.ManagedException.html",
    "title": "Class ManagedException | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class ManagedException Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll ManagedException is the exception class from which the root of unmanaged exception derive This class, deriving from .NET Exception, allows to use the most common properties of the Exception class on exceptions wrapping unmanaged MgException classes. The implementation of these properties relies on the equivalent MgException methods. Although this class does not wrap any unmanaged class, it still holds a C++ pointer to the MgException that derives from it. public class ManagedException : Exception, ISerializable Inheritance object Exception ManagedException Implements ISerializable Derived MgException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ManagedException() Constructs a new instance of this exception protected ManagedException() Properties Message public override string Message { get; } Property Value string StackTrace public override string StackTrace { get; } Property Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/OSGeo.MapGuide.MapGuideApi.html": {
    "href": "api/OSGeo.MapGuide.MapGuideApi.html",
    "title": "Class MapGuideApi | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MapGuideApi Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll This is the entry point of the MapGuide API public class MapGuideApi Inheritance object MapGuideApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MgInitializeWebTier(string) Initializes the MapGuide Web Tier APIs. You must call this method before using any other class or method in the MapGuide API public static void MgInitializeWebTier(string configFile) Parameters configFile string The path to the web tier configuration file Remarks Subsequent calls do nothing and return immediately"
  },
  "api/OSGeo.MapGuide.MgAgfReaderWriter.html": {
    "href": "api/OSGeo.MapGuide.MgAgfReaderWriter.html",
    "title": "Class MgAgfReaderWriter | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgAgfReaderWriter Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll The MgAgfReaderWriter class is used to translate an MgGeometry object into into an MgByteReader object and to do the reverse translation. public class MgAgfReaderWriter : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgAgfReaderWriter Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgAgfReaderWriter() Creates an MgAgfReaderWriter object public MgAgfReaderWriter() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(MgByteReader) Translates an MgByteReader object into an MgGeometry object. The contents of the MgByteReader is in Autodesk Geometry Format (AGF). public MgGeometry Read(MgByteReader agf) Parameters agf MgByteReader (MgByteReader) An MgByteReader that supplies the AGF byte stream. Returns MgGeometry An instance of MgGeometry that corresponds to the specified AGF. Read(MgByteReader, MgTransform) Reads a geometry object from a stream of bytes in AGF format applying the specified transform during the read. public MgGeometry Read(MgByteReader agf, MgTransform transform) Parameters agf MgByteReader (MgByteReader) An MgByteReader that supplies the AGF byte stream. transform MgTransform (MgTransform) An MgTransform that is used to transform each coordinate read from the AGF representation. Returns MgGeometry An instance of MgGeometry that corresponds to the specified AGF with the specified transform applied. Write(MgGeometry) Translates an MgGeometry object into a stream of bytes in AGF (Autodesk Geometry Format). public MgByteReader Write(MgGeometry geometry) Parameters geometry MgGeometry (MgGeometry) An MgGeometry object to write to AGF. Returns MgByteReader An MgByteReader which contains the AGF representation of the MgGeometry object. Write(MgGeometry, MgTransform) Writes a geometry object to a stream of bytes in AGF format applying the specified transform during the write. public MgByteReader Write(MgGeometry geometry, MgTransform transform) Parameters geometry MgGeometry (MgGeometry) An MgGeometry object to write to AGF. transform MgTransform (MgTransform) An MgTransform that is used to transform each coordinate written to the AGF representation. Returns MgByteReader An MgByteReader that contains the transformed AGF representation."
  },
  "api/OSGeo.MapGuide.MgAggregateGeometry.html": {
    "href": "api/OSGeo.MapGuide.MgAggregateGeometry.html",
    "title": "Class MgAggregateGeometry | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgAggregateGeometry Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgAggregateGeometry is an abstract base class for all of the geometry types that are composed of a set of aggregated geometry objects. public class MgAggregateGeometry : MgGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgAggregateGeometry Implements IDisposable Derived MgMultiCurvePolygon MgMultiCurveString MgMultiGeometry MgMultiLineString MgMultiPoint MgMultiPolygon Inherited Members MgGeometry.GeometryType MgGeometry.GetGeometryType() MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Dimension MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.GetDimension() MgGeometricEntity.IsEmpty() MgGeometricEntity.IsSimple() MgGeometricEntity.IsClosed() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.Copy() MgGeometricEntity.Transform(MgTransform) MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the number of geometries in this aggregate. public int GetCount() Returns int The number of geometries."
  },
  "api/OSGeo.MapGuide.MgArcSegment.html": {
    "href": "api/OSGeo.MapGuide.MgArcSegment.html",
    "title": "Class MgArcSegment | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgArcSegment Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgArcSegment is a curve segment defined in terms of a start point, end point, and a control point. public class MgArcSegment : MgCurveSegment, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometryComponent MgCurveSegment MgArcSegment Implements IDisposable Inherited Members MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ComponentType public int ComponentType { get; } Property Value int ControlCoordinate public MgCoordinate ControlCoordinate { get; } Property Value MgCoordinate Dimension public int Dimension { get; } Property Value int EndCoordinate public MgCoordinate EndCoordinate { get; } Property Value MgCoordinate StartCoordinate public MgCoordinate StartCoordinate { get; } Property Value MgCoordinate Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetComponentType() Gets the component type of this arc segment public int GetComponentType() Returns int GetControlCoordinate() Gets the control coordinate of the arc. public MgCoordinate GetControlCoordinate() Returns MgCoordinate An MgCoordinate defining the control coordinate. GetDimension() Gets the dimension of this arc segment public int GetDimension() Returns int GetEndCoordinate() Gets the end coordinate of this arc segment public MgCoordinate GetEndCoordinate() Returns MgCoordinate GetStartCoordinate() Gets the start coordinate of this arc segment public MgCoordinate GetStartCoordinate() Returns MgCoordinate IsClosed() Gets whether this arc segment is closed public bool IsClosed() Returns bool IsEmpty() Gets whether this arc segment is empty public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgArcSegment that is a copy of this one with each coordinate transformed according to the MgTransform argument."
  },
  "api/OSGeo.MapGuide.MgBatchPropertyCollection.html": {
    "href": "api/OSGeo.MapGuide.MgBatchPropertyCollection.html",
    "title": "Class MgBatchPropertyCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgBatchPropertyCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll MgBatchPropertyCollection represents a collection of properties. Properties are name/value pairs used for specifying the values of properties. public class MgBatchPropertyCollection : MgCollection, IDisposable, IList<MgPropertyCollection>, ICollection<MgPropertyCollection>, IEnumerable<MgPropertyCollection>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgBatchPropertyCollection Implements IDisposable IList<MgPropertyCollection> ICollection<MgPropertyCollection> IEnumerable<MgPropertyCollection> IEnumerable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgBatchPropertyCollection() Constructs a PropertyDefinitionCollection. The collection is initially empty. public MgBatchPropertyCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgPropertyCollection this[int index] { get; set; } Parameters index int Property Value MgPropertyCollection Methods Add(MgPropertyCollection) Adds the specified item to the end of the collection. public void Add(MgPropertyCollection value) Parameters value MgPropertyCollection (MgPropertyCollection) Input value Exceptions MgException with code (MgDuplicateObjectException) if it is duplicate. Clear() Removes all items from the collection. public void Clear() Contains(MgPropertyDefinition) Returns true if the collection contains the specified item, false otherwise. public bool Contains(MgPropertyDefinition value) Parameters value MgPropertyDefinition (MgPropertyDefinition) Input value Returns bool Returns true if the collection contains the specified item, false otherwise. CopyTo(MgPropertyCollection[], int) public void CopyTo(MgPropertyCollection[] array, int arrayIndex) Parameters array MgPropertyCollection[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetEnumerator() public IEnumerator<MgPropertyCollection> GetEnumerator() Returns IEnumerator<MgPropertyCollection> GetItem(int) public virtual MgPropertyCollection GetItem(int index) Parameters index int Returns MgPropertyCollection IndexOf(MgPropertyDefinition) public virtual int IndexOf(MgPropertyDefinition value) Parameters value MgPropertyDefinition Returns int Insert(int, MgPropertyCollection) Inserts the specified item at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, MgPropertyCollection value) Parameters index int (int) Input index value MgPropertyCollection (MgPropertyCollection) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range. MgException with code (MgDuplicateObjectException) if it is duplicate. Remove(MgPropertyCollection) Removes the specified item from the collection. public bool Remove(MgPropertyCollection value) Parameters value MgPropertyCollection (MgPropertyCollection) Input value Returns bool Returns true if removal was successful. RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgPropertyCollection) Sets the item in the collection at the specified index to the specified value. public void SetItem(int index, MgPropertyCollection value) Parameters index int (int) Input index value MgPropertyCollection (MgPropertyCollection) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range. MgException with code (MgDuplicateObjectException) if it is duplicate. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. The order of properties in the XML would be same as the order of the properties in the collection. It starts with item zero to length of collection. TODO: Add a snippet of XML here? public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgBlobProperty.html": {
    "href": "api/OSGeo.MapGuide.MgBlobProperty.html",
    "title": "Class MgBlobProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgBlobProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores BLOB (Binary Large Object) data with an associated key name. public class MgBlobProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgBlobProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgBlobProperty(string, MgByteReader) Constructs an MgBlobProperty object. public MgBlobProperty(string name, MgByteReader value) Parameters name string (String/string) The name of the property. value MgByteReader (MgByteReader) the value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public MgByteReader Value { get; set; } Property Value MgByteReader Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Blob. GetValue() Gets the property value. public MgByteReader GetValue() Returns MgByteReader Returns the property value. SetValue(MgByteReader) Sets the property value. public void SetValue(MgByteReader value) Parameters value MgByteReader (MgByteReader) The value of the property"
  },
  "api/OSGeo.MapGuide.MgBooleanProperty.html": {
    "href": "api/OSGeo.MapGuide.MgBooleanProperty.html",
    "title": "Class MgBooleanProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgBooleanProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores boolean data with an associated key name. public class MgBooleanProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgBooleanProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgBooleanProperty(string, bool) Constructs an MgBooleanProperty object. public MgBooleanProperty(string name, bool value) Parameters name string (String/string) The name of the property value bool (boolean/bool) The value of the property Properties PropertyType public short PropertyType { get; } Property Value short Value public bool Value { get; set; } Property Value bool Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Boolean. GetValue() Gets the property value. public bool GetValue() Returns bool Returns the property value. SetValue(bool) Sets the property value. public void SetValue(bool value) Parameters value bool (boolean/bool) The value of the property"
  },
  "api/OSGeo.MapGuide.MgByteProperty.html": {
    "href": "api/OSGeo.MapGuide.MgByteProperty.html",
    "title": "Class MgByteProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgByteProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores a single BYTE of data with an associated key name. public class MgByteProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgByteProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgByteProperty(string, byte) Constructs an MgByteProperty object. public MgByteProperty(string name, byte value) Parameters name string (String/string) The name of the property. value byte (signed char/unsigned char/string) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public byte Value { get; set; } Property Value byte Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Byte. GetValue() Gets the property value. public byte GetValue() Returns byte Returns the property value. SetValue(byte) Sets the property value. public void SetValue(byte value) Parameters value byte (signed char/unsigned char/string) The value of the property."
  },
  "api/OSGeo.MapGuide.MgByteReader.html": {
    "href": "api/OSGeo.MapGuide.MgByteReader.html",
    "title": "Class MgByteReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgByteReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Reads data from a byte source. Once read, the data in the reader cannot be reread. public class MgByteReader : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgByteReader Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MgByteReader(byte[], int, string) Creates a byte reader from an array of bytes public MgByteReader(byte[] contents, int length, string mimeType) Parameters contents byte[] (Byte[]/byte[]/string) Binary contents for byte reader. length int (int/int/int) Length of contents. mimeType string (string/String/string) Mime type for content. MgByteReader(string, string) Creates a byte reader from a string public MgByteReader(string contents, string mimeType) Parameters contents string (string/String/string) String contents for byte reader. mimeType string (string/String/string) Mime type for content. MgByteReader(string, string, bool) Creates a byte reader from a file public MgByteReader(string fileName, string mimeType, bool removeFile) Parameters fileName string (string/String/string) Name of file on disk. mimeType string (string/String/string) Mime type for content removeFile bool (bool) Remove file when byte reader is deleted Properties MimeType public string MimeType { get; } Property Value string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetLength() Returns the remaining length of the underlying byte source. This length is adjusted for previous reads. If the returned length is zero then the underlying source may be a streaming format and the length is not known. public long GetLength() Returns long Remaining length of underlying byte source GetMimeType() Gets the mime type of the data in this reader. See MgMimeType for list of possible mime types. public string GetMimeType() Returns string string representing the type, for example text/xml IsRewindable() Determines if the reader is rewindable. public bool IsRewindable() Returns bool true if the source is rewindable, false otherwise. Read(byte[], int) Reads a buffer public int Read(byte[] buffer, int length) Parameters buffer byte[] (byte[]/Byte[]/string) A buffer receiving the data. length int (int) Maximum number of bytes to read Returns int Actual number of bytes put in the buffer. 0 means end of bytes Rewind() Rewinds to the start of the reader. Depending on the source of the reader, Rewind may not be supported. Readers sourced from true streams cannot be rewound. public void Rewind() Exceptions MgException with code (MgIoException) if reader cannot be rewound ToFile(string) Writes the the contents of the reader to a file. public void ToFile(string fileName) Parameters fileName string Exceptions MgException with code (MgFileIoException) is thrown if file cannot be written ToString() Returns the contents of the reader as a string. The mime type must be a text type, for example text/xml. public string ToString() Returns string Text string of reader contents Exceptions MgException with code (MgInvalidArgumentException) is thrown if the reader does not contain text getCPtr(MgByteReader) public static HandleRef getCPtr(MgByteReader obj) Parameters obj MgByteReader Returns HandleRef swigRelease(MgByteReader) public static HandleRef swigRelease(MgByteReader obj) Parameters obj MgByteReader Returns HandleRef"
  },
  "api/OSGeo.MapGuide.MgByteSink.html": {
    "href": "api/OSGeo.MapGuide.MgByteSink.html",
    "title": "Class MgByteSink | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgByteSink Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll MgByteSink is a used to write the content of a MgByteReader object to a file. MgByteSink is, like MgByteReader, inherently read-only. public class MgByteSink : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgByteSink Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgByteSink(MgByteReader) Construct a MgByteSink object from a source byte reader public MgByteSink(MgByteReader reader) Parameters reader MgByteReader (MgByteReader) MgByteReader object Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool ToFile(string) Writes the content of the byte reader to a file. If the full contents of the reader cannot be written to the file then the file is deleted and an MgException is raised. public void ToFile(string filename) Parameters filename string (String/string) Destination file name"
  },
  "api/OSGeo.MapGuide.MgByteSource.html": {
    "href": "api/OSGeo.MapGuide.MgByteSource.html",
    "title": "Class MgByteSource | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgByteSource Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Represents a source of byte data with a specific content type. public class MgByteSource : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgByteSource Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgByteSource(byte[], int) Construct a MgByteSource object from an array of bytes public MgByteSource(byte[] buffer, int length) Parameters buffer byte[] (byte[]/Byte[]/string) Buffer containing the data length int (int) Length of the buffer MgByteSource(string) Construct a MgByteSource object from the specific file public MgByteSource(string file) Parameters file string (String/string) Full path name of the file. Properties MimeType public string MimeType { get; set; } Property Value string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetMimeType() Gets the mime type of the data in this reader. See MgMimeType for list of supported mime types. public string GetMimeType() Returns string string representing the type, for example text/xml GetReader() Gets a reader for this byte source public MgByteReader GetReader() Returns MgByteReader A MgByteReader object SetMimeType(string) Sets the mime type of the data. See MgMimeType for list of supported mime types. public void SetMimeType(string mimeType) Parameters mimeType string (String/string) Mime type for byte source"
  },
  "api/OSGeo.MapGuide.MgClassDefinition.html": {
    "href": "api/OSGeo.MapGuide.MgClassDefinition.html",
    "title": "Class MgClassDefinition | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgClassDefinition Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines a feature class belonging to a schema. public class MgClassDefinition : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgClassDefinition Implements IDisposable Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgClassDefinition() Constructs an MgClassDefinition object. public MgClassDefinition() Properties BaseClassDefinition public MgClassDefinition BaseClassDefinition { get; } Property Value MgClassDefinition DefaultGeometryPropertyName public string DefaultGeometryPropertyName { get; set; } Property Value string Description public string Description { get; set; } Property Value string Name public string Name { get; set; } Property Value string Methods Delete() Marks the class definition for deletion. public void Delete() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBaseClassDefinition() Gets the base class definition. public MgClassDefinition GetBaseClassDefinition() Returns MgClassDefinition Returns the feature class definition or NULL if no base class is defined. GetDefaultGeometryPropertyName() Gets the name of the default geometry property in this class. public string GetDefaultGeometryPropertyName() Returns string Returns the name of the default geometry property. GetDescription() Gets the feature class description public string GetDescription() Returns string Returns the feature class description. GetIdentityProperties() Gets a collection containing the set of data property definitions that can be used to uniquely identify instances of this class. public MgPropertyDefinitionCollection GetIdentityProperties() Returns MgPropertyDefinitionCollection Returns a collection of data property definitions that can be used to uniquely identify instances of this class. GetName() Gets the name of the feature class. public string GetName() Returns string Returns the feature class name. GetProperties() Gets a collection containing all the property definitions for this class including identity property definitions. public MgPropertyDefinitionCollection GetProperties() Returns MgPropertyDefinitionCollection Returns a collection of the property definitions for this class. IsAbstract() Tests whether a class definition is abstract or not. public bool IsAbstract() Returns bool Returns true if the class definition is abstract; otherwise returns false. IsComputed() Tests whether a class definition is computed. public bool IsComputed() Returns bool Returns true if the class definition is computed; otherwise returns false. SetDefaultGeometryPropertyName(string) Sets the name of the default geometry property in this class. public void SetDefaultGeometryPropertyName(string name) Parameters name string (String/string) The name of the default geometry property. SetDescription(string) Sets the feature class description. public void SetDescription(string description) Parameters description string (String/string) The feature class description. SetName(string) Sets the name of the feature class. public void SetName(string name) Parameters name string (String/string) The feature class name."
  },
  "api/OSGeo.MapGuide.MgClassDefinitionCollection.html": {
    "href": "api/OSGeo.MapGuide.MgClassDefinitionCollection.html",
    "title": "Class MgClassDefinitionCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgClassDefinitionCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll ClassDefinitionCollection represents a collection of class definitions in a feature schema. public class MgClassDefinitionCollection : MgCollection, IDisposable, IList<MgClassDefinition>, ICollection<MgClassDefinition>, IEnumerable<MgClassDefinition>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgClassDefinitionCollection Implements IDisposable IList<MgClassDefinition> ICollection<MgClassDefinition> IEnumerable<MgClassDefinition> IEnumerable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgClassDefinitionCollection() Constructs a MgClassDefinitionCollection. The collection is initially empty. public MgClassDefinitionCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgClassDefinition this[int index] { get; set; } Parameters index int Property Value MgClassDefinition Methods Add(MgClassDefinition) Adds the specified item to the end of the collection. public void Add(MgClassDefinition value) Parameters value MgClassDefinition (MgClassDefinition) Input value Exceptions MgException with code (MgDuplicateObjectException) if the index is a duplicate. Clear() Removes all items from the collection. public void Clear() Contains(MgClassDefinition) public bool Contains(MgClassDefinition value) Parameters value MgClassDefinition Returns bool CopyTo(MgClassDefinition[], int) public void CopyTo(MgClassDefinition[] array, int arrayIndex) Parameters array MgClassDefinition[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetEnumerator() public IEnumerator<MgClassDefinition> GetEnumerator() Returns IEnumerator<MgClassDefinition> GetItem(int) public MgClassDefinition GetItem(int index) Parameters index int Returns MgClassDefinition IndexOf(MgClassDefinition) public int IndexOf(MgClassDefinition value) Parameters value MgClassDefinition Returns int Insert(int, MgClassDefinition) Inserts the specified item at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, MgClassDefinition value) Parameters index int (int) Input index value MgClassDefinition (MgClassDefinition) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. MgException with code (MgDuplicateObjectException) if it is a duplicate. Remove(MgClassDefinition) Removes the specified item from the collection. public bool Remove(MgClassDefinition value) Parameters value MgClassDefinition (MgClassDefinition) Input value Returns bool Returns true if removal was successful RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgClassDefinition) Sets the item in the collection at the specified index to the specified value. public void SetItem(int index, MgClassDefinition value) Parameters index int (int) Input index value MgClassDefinition (MgClassDefinition) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. MgException with code (MgDuplicateObjectException) if it is a duplicate. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgClobProperty.html": {
    "href": "api/OSGeo.MapGuide.MgClobProperty.html",
    "title": "Class MgClobProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgClobProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores CLOB (Character Large Object) data with an associated key name. public class MgClobProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgClobProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgClobProperty(string, MgByteReader) Constructs an MgClobProperty object. public MgClobProperty(string name, MgByteReader value) Parameters name string (String/string) The name of the property. value MgByteReader (MgByteReader) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public MgByteReader Value { get; set; } Property Value MgByteReader Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Clob GetValue() Gets the property value. public MgByteReader GetValue() Returns MgByteReader Returns the property value. SetValue(MgByteReader) Sets the property value. public void SetValue(MgByteReader value) Parameters value MgByteReader (MgByteReader) The value of the property."
  },
  "api/OSGeo.MapGuide.MgCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCollection.html",
    "title": "Class MgCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll MgCollection is an abstract class for defining standard collection access for all collection classes. public class MgCollection : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection Implements IDisposable Derived MgBatchPropertyCollection MgClassDefinitionCollection MgDisposableCollection MgFeatureSchemaCollection MgIntCollection MgParameterCollection MgPropertyCollection MgPropertyDefinitionCollection MgStringCollection MgStringPropertyCollection Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgCollection(IntPtr, bool) protected MgCollection(IntPtr cPtr, bool cMemoryOwn) Parameters cPtr IntPtr cMemoryOwn bool Methods Clear() Removes all items from the collection. public void Clear() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException MgIndexOutOfRangeException\"> ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object. getCPtr(MgCollection) public static HandleRef getCPtr(MgCollection obj) Parameters obj MgCollection Returns HandleRef swigRelease(MgCollection) public static HandleRef swigRelease(MgCollection obj) Parameters obj MgCollection Returns HandleRef"
  },
  "api/OSGeo.MapGuide.MgColor.html": {
    "href": "api/OSGeo.MapGuide.MgColor.html",
    "title": "Class MgColor | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgColor Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll This class stores Alpha, Red, Green and Blue component of a Color. public class MgColor : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgColor Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgColor(short, short, short) Constructor. public MgColor(short red, short green, short blue) Parameters red short (short/int) Red value. This value must be in the range of 0 to 255 inclusive. green short (short/int) Green value. This value must be in the range of 0 to 255 inclusive. blue short (short/int) Blue value. This value must be in the range of 0 to 255 inclusive. MgColor(short, short, short, short) Constructor. public MgColor(short red, short green, short blue, short alpha) Parameters red short (short/int) Red value. This value must be in the range of 0 to 255 inclusive. green short (short/int) Green value. This value must be in the range of 0 to 255 inclusive. blue short (short/int) Blue value. This value must be in the range of 0 to 255 inclusive. alpha short (short/int) Alpha value MgColor(string) Constructor. public MgColor(string color) Parameters color string (String/string) Color specified as 0xRRGGBBAA RR - Red component GG - Green component BB - Blue Component AA - Alpha component (optional) Properties Alpha public short Alpha { get; } Property Value short Blue public short Blue { get; } Property Value short Color public string Color { get; } Property Value string Green public short Green { get; } Property Value short Red public short Red { get; } Property Value short Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAlpha() return the color alpha value public short GetAlpha() Returns short return the alpha value GetBlue() return the color blue value public short GetBlue() Returns short return the blue value GetColor() Returns Color specified as 0xRRGGBBAA RR - Red component GG - Green component BB - Blue Component AA - Alpha component (optional) public string GetColor() Returns string return the color value GetGreen() return the color green value public short GetGreen() Returns short return the green value GetRed() return the color red value public short GetRed() Returns short return the red value"
  },
  "api/OSGeo.MapGuide.MgConfigProperties.html": {
    "href": "api/OSGeo.MapGuide.MgConfigProperties.html",
    "title": "Class MgConfigProperties | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgConfigProperties Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Properties stored in an OSGeo.MapGuide.MgConfiguration object. Note that the properties are organized into Property Sections. These sections may be used in the API to set/get groups of configuration properties. INTERNAL_ONLY: public class MgConfigProperties Inheritance object MgConfigProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AccessLogPropertiesSection public const string AccessLogPropertiesSection = \"AccessLogProperties\" Field Value string AccessLogPropertyEnabled public const string AccessLogPropertyEnabled = \"Enabled\" Field Value string AccessLogPropertyFilename public const string AccessLogPropertyFilename = \"Filename\" Field Value string AccessLogPropertyParameters public const string AccessLogPropertyParameters = \"Parameters\" Field Value string AdminLogPropertiesSection public const string AdminLogPropertiesSection = \"AdminLogProperties\" Field Value string AdminLogPropertyEnabled public const string AdminLogPropertyEnabled = \"Enabled\" Field Value string AdminLogPropertyFilename public const string AdminLogPropertyFilename = \"Filename\" Field Value string AdminLogPropertyParameters public const string AdminLogPropertyParameters = \"Parameters\" Field Value string AdministrativeConnectionPropertiesSection public const string AdministrativeConnectionPropertiesSection = \"AdministrativeConnectionProperties\" Field Value string AdministrativeConnectionPropertyEmail public const string AdministrativeConnectionPropertyEmail = \"Email\" Field Value string AdministrativeConnectionPropertyMaxConnections public const string AdministrativeConnectionPropertyMaxConnections = \"MaxConnections\" Field Value string AdministrativeConnectionPropertyPort public const string AdministrativeConnectionPropertyPort = \"Port\" Field Value string AdministrativeConnectionPropertyQueueSize public const string AdministrativeConnectionPropertyQueueSize = \"QueueSize\" Field Value string AdministrativeConnectionPropertyThreadPoolSize public const string AdministrativeConnectionPropertyThreadPoolSize = \"ThreadPoolSize\" Field Value string AgentAnonymousDenyGetResourceContent public const string AgentAnonymousDenyGetResourceContent = \"AnonymousDenyGetResourceContent\" Field Value string AgentAnonymousDenyGetResourceData public const string AgentAnonymousDenyGetResourceData = \"AnonymousDenyGetResourceData\" Field Value string AgentAnonymousDenyGetResourceHeader public const string AgentAnonymousDenyGetResourceHeader = \"AnonymousDenyGetResourceHeader\" Field Value string AgentDebugPause public const string AgentDebugPause = \"DebugPause\" Field Value string AgentDisableAuthoring public const string AgentDisableAuthoring = \"DisableAuthoring\" Field Value string AgentDisableWfs public const string AgentDisableWfs = \"DisableWfs\" Field Value string AgentDisableWms public const string AgentDisableWms = \"DisableWms\" Field Value string AgentErrorLogEnabled public const string AgentErrorLogEnabled = \"ErrorLogEnabled\" Field Value string AgentErrorLogFilename public const string AgentErrorLogFilename = \"ErrorLogFilename\" Field Value string AgentGlobalGetWfsFeaturesLimit public const string AgentGlobalGetWfsFeaturesLimit = \"GlobalGetWfsFeaturesLimit\" Field Value string AgentGlobalGetWmsFeatureInfoLimit public const string AgentGlobalGetWmsFeatureInfoLimit = \"GlobalGetWmsFeatureInfoLimit\" Field Value string AgentGlobalMaxFeatureQueryLimit public const string AgentGlobalMaxFeatureQueryLimit = \"GlobalMaxFeatureQueryLimit\" Field Value string AgentGlobalMaxMapFeatureQueryLimit public const string AgentGlobalMaxMapFeatureQueryLimit = \"GlobalMaxMapFeatureQueryLimit\" Field Value string AgentPropertiesSection public const string AgentPropertiesSection = \"AgentProperties\" Field Value string AgentRequestLogEnabled public const string AgentRequestLogEnabled = \"RequestLogEnabled\" Field Value string AgentRequestLogFilename public const string AgentRequestLogFilename = \"RequestLogFilename\" Field Value string AuthenticationLogPropertiesSection public const string AuthenticationLogPropertiesSection = \"AuthenticationLogProperties\" Field Value string AuthenticationLogPropertyEnabled public const string AuthenticationLogPropertyEnabled = \"Enabled\" Field Value string AuthenticationLogPropertyFilename public const string AuthenticationLogPropertyFilename = \"Filename\" Field Value string AuthenticationLogPropertyParameters public const string AuthenticationLogPropertyParameters = \"Parameters\" Field Value string CITEWfsEnabled public const string CITEWfsEnabled = \"CITEWfsEnabled\" Field Value string CITEWmsEnabled public const string CITEWmsEnabled = \"CITEWmsEnabled\" Field Value string ClientConnectionPropertiesSection public const string ClientConnectionPropertiesSection = \"ClientConnectionProperties\" Field Value string ClientConnectionPropertyMaxConnections public const string ClientConnectionPropertyMaxConnections = \"MaxConnections\" Field Value string ClientConnectionPropertyPort public const string ClientConnectionPropertyPort = \"Port\" Field Value string ClientConnectionPropertyQueueSize public const string ClientConnectionPropertyQueueSize = \"QueueSize\" Field Value string ClientConnectionPropertyThreadPoolSize public const string ClientConnectionPropertyThreadPoolSize = \"ThreadPoolSize\" Field Value string ContainerInfoFolder public const string ContainerInfoFolder = \"ContainerInfoFolder\" Field Value string DBEnvironmentPropertiesSection public const string DBEnvironmentPropertiesSection = \"DBEnvironmentProperties\" Field Value string DBMaxLockersParameters public const string DBMaxLockersParameters = \"DBMaxLockers\" Field Value string DBMaxTransactionsParamters public const string DBMaxTransactionsParamters = \"DBMaxTransactions\" Field Value string DBPageSizeParameters public const string DBPageSizeParameters = \"DBPageSize\" Field Value string DBTimeoutParameters public const string DBTimeoutParameters = \"DBTimeout\" Field Value string DBXMLPageSizeParameters public const string DBXMLPageSizeParameters = \"DBXMLPageSize\" Field Value string DefaultAccessLogPropertyEnabled public const bool DefaultAccessLogPropertyEnabled = true Field Value bool DefaultAccessLogPropertyFilename public const string DefaultAccessLogPropertyFilename = \"Access.log\" Field Value string DefaultAccessLogPropertyParameters public const string DefaultAccessLogPropertyParameters = \"\" Field Value string DefaultAdminLogPropertyEnabled public const bool DefaultAdminLogPropertyEnabled = true Field Value bool DefaultAdminLogPropertyFilename public const string DefaultAdminLogPropertyFilename = \"Admin.log\" Field Value string DefaultAdminLogPropertyParameters public const string DefaultAdminLogPropertyParameters = \"\" Field Value string DefaultAdministrativeConnectionPropertyEmail public const string DefaultAdministrativeConnectionPropertyEmail = \"\" Field Value string DefaultAdministrativeConnectionPropertyMaxConnections public const int DefaultAdministrativeConnectionPropertyMaxConnections = 20 Field Value int DefaultAdministrativeConnectionPropertyPort public const int DefaultAdministrativeConnectionPropertyPort = 5555 Field Value int DefaultAdministrativeConnectionPropertyQueueSize public const int DefaultAdministrativeConnectionPropertyQueueSize = 10 Field Value int DefaultAdministrativeConnectionPropertyThreadPoolSize public const int DefaultAdministrativeConnectionPropertyThreadPoolSize = 5 Field Value int DefaultAgentAnonymousDenyGetResourceContent public const string DefaultAgentAnonymousDenyGetResourceContent = \"\" Field Value string DefaultAgentAnonymousDenyGetResourceData public const string DefaultAgentAnonymousDenyGetResourceData = \"\" Field Value string DefaultAgentAnonymousDenyGetResourceHeader public const string DefaultAgentAnonymousDenyGetResourceHeader = \"\" Field Value string DefaultAgentDebugPause public const int DefaultAgentDebugPause = 0 Field Value int DefaultAgentErrorLogEnabled public const bool DefaultAgentErrorLogEnabled = false Field Value bool DefaultAgentErrorLogFilename public const string DefaultAgentErrorLogFilename = \"Error.log\" Field Value string DefaultAgentGlobalGetWfsFeaturesLimit public const int DefaultAgentGlobalGetWfsFeaturesLimit = 0 Field Value int DefaultAgentGlobalGetWmsFeatureInfoLimit public const int DefaultAgentGlobalGetWmsFeatureInfoLimit = 0 Field Value int DefaultAgentGlobalMaxFeatureQueryLimit public const int DefaultAgentGlobalMaxFeatureQueryLimit = 0 Field Value int DefaultAgentGlobalMaxMapFeatureQueryLimit public const int DefaultAgentGlobalMaxMapFeatureQueryLimit = 0 Field Value int DefaultAgentRequestLogEnabled public const bool DefaultAgentRequestLogEnabled = false Field Value bool DefaultAgentRequestLogFilename public const string DefaultAgentRequestLogFilename = \"Request.log\" Field Value string DefaultAuthenticationLogPropertyEnabled public const bool DefaultAuthenticationLogPropertyEnabled = true Field Value bool DefaultAuthenticationLogPropertyFilename public const string DefaultAuthenticationLogPropertyFilename = \"Authentication.log\" Field Value string DefaultAuthenticationLogPropertyParameters public const string DefaultAuthenticationLogPropertyParameters = \"\" Field Value string DefaultCITEWfsEnabled public const bool DefaultCITEWfsEnabled = false Field Value bool DefaultCITEWmsEnabled public const bool DefaultCITEWmsEnabled = false Field Value bool DefaultClientConnectionPropertyMaxConnections public const int DefaultClientConnectionPropertyMaxConnections = 100 Field Value int DefaultClientConnectionPropertyPort public const int DefaultClientConnectionPropertyPort = 4444 Field Value int DefaultClientConnectionPropertyQueueSize public const int DefaultClientConnectionPropertyQueueSize = 10 Field Value int DefaultClientConnectionPropertyThreadPoolSize public const int DefaultClientConnectionPropertyThreadPoolSize = 10 Field Value int DefaultConfigurationFilename public const string DefaultConfigurationFilename = \"webconfig.ini\" Field Value string DefaultDBMaxLockersParameters public const int DefaultDBMaxLockersParameters = 1000 Field Value int DefaultDBMaxTransactionsParamters public const int DefaultDBMaxTransactionsParamters = 1000 Field Value int DefaultDBPageSizeParameters public const int DefaultDBPageSizeParameters = 32 Field Value int DefaultDBTimeoutParameters public const double DefaultDBTimeoutParameters = 0.2 Field Value double DefaultDBXMLPageSizeParameters public const int DefaultDBXMLPageSizeParameters = 32 Field Value int DefaultErrorLogPropertyEnabled public const bool DefaultErrorLogPropertyEnabled = true Field Value bool DefaultErrorLogPropertyFilename public const string DefaultErrorLogPropertyFilename = \"Error.log\" Field Value string DefaultErrorLogPropertyParameters public const string DefaultErrorLogPropertyParameters = \"\" Field Value string DefaultFeatureServicePropertyCacheSize public const int DefaultFeatureServicePropertyCacheSize = 100 Field Value int DefaultFeatureServicePropertyCacheTimeLimit public const int DefaultFeatureServicePropertyCacheTimeLimit = 86400 Field Value int DefaultFeatureServicePropertyCacheTimerInterval public const int DefaultFeatureServicePropertyCacheTimerInterval = 3600 Field Value int DefaultFeatureServicePropertyDataCacheSize public const int DefaultFeatureServicePropertyDataCacheSize = 100 Field Value int DefaultFeatureServicePropertyDataConnectionPoolEnabled public const bool DefaultFeatureServicePropertyDataConnectionPoolEnabled = false Field Value bool DefaultFeatureServicePropertyDataConnectionPoolExcludedProviders public const string DefaultFeatureServicePropertyDataConnectionPoolExcludedProviders = \"OSGeo.SDF,OSGeo.SHP\" Field Value string DefaultFeatureServicePropertyDataConnectionPoolSize public const int DefaultFeatureServicePropertyDataConnectionPoolSize = 50 Field Value int DefaultFeatureServicePropertyDataConnectionPoolSizeCustom public const string DefaultFeatureServicePropertyDataConnectionPoolSizeCustom = \"\" Field Value string DefaultFeatureServicePropertyDataConnectionTimeout public const int DefaultFeatureServicePropertyDataConnectionTimeout = 600 Field Value int DefaultFeatureServicePropertyDataConnectionTimerInterval public const int DefaultFeatureServicePropertyDataConnectionTimerInterval = 60 Field Value int DefaultFeatureServicePropertyDataConnectionUseLimit public const string DefaultFeatureServicePropertyDataConnectionUseLimit = \"\" Field Value string DefaultFeatureServicePropertyDataTransactionTimeout public const int DefaultFeatureServicePropertyDataTransactionTimeout = 360 Field Value int DefaultFeatureServicePropertyDataTransactionTimerInterval public const int DefaultFeatureServicePropertyDataTransactionTimerInterval = 60 Field Value int DefaultFeatureServicePropertyFDOConnectionTimeoutCustom public const string DefaultFeatureServicePropertyFDOConnectionTimeoutCustom = \"OSGeo.WMS:120\" Field Value string DefaultFeatureServicePropertyJoinQueryBatchSize public const int DefaultFeatureServicePropertyJoinQueryBatchSize = 100 Field Value int DefaultFeatureServicePropertyUseFdoJoinOptimization public const bool DefaultFeatureServicePropertyUseFdoJoinOptimization = true Field Value bool DefaultGeneralPropertyConnectionTimeout public const int DefaultGeneralPropertyConnectionTimeout = 120 Field Value int DefaultGeneralPropertyConnectionTimerInterval public const int DefaultGeneralPropertyConnectionTimerInterval = 60 Field Value int DefaultGeneralPropertyDefaultMessageLocale public const string DefaultGeneralPropertyDefaultMessageLocale = \"en\" Field Value string DefaultGeneralPropertyDisplayName public const string DefaultGeneralPropertyDisplayName = \"\" Field Value string DefaultGeneralPropertyFdoPath public const string DefaultGeneralPropertyFdoPath = \"\" Field Value string DefaultGeneralPropertyLicenseServerPath public const string DefaultGeneralPropertyLicenseServerPath = \"\" Field Value string DefaultGeneralPropertyLinuxFontDirectories public const string DefaultGeneralPropertyLinuxFontDirectories = \"\" Field Value string DefaultGeneralPropertyLinuxMemDebug public const bool DefaultGeneralPropertyLinuxMemDebug = false Field Value bool DefaultGeneralPropertyLocale public const string DefaultGeneralPropertyLocale = \"\" Field Value string DefaultGeneralPropertyLogsDelimiter public const string DefaultGeneralPropertyLogsDelimiter = \"\\t\" Field Value string DefaultGeneralPropertyLogsDetail public const string DefaultGeneralPropertyLogsDetail = \"\" Field Value string DefaultGeneralPropertyLogsPath public const string DefaultGeneralPropertyLogsPath = \"Logs/\" Field Value string DefaultGeneralPropertyMachineIp public const string DefaultGeneralPropertyMachineIp = \"127.0.0.1\" Field Value string DefaultGeneralPropertyMaxLogFileSize public const int DefaultGeneralPropertyMaxLogFileSize = 64 Field Value int DefaultGeneralPropertyMaxLogFileSizeEnabled public const bool DefaultGeneralPropertyMaxLogFileSizeEnabled = false Field Value bool DefaultGeneralPropertyMentorDictionaryPath public const string DefaultGeneralPropertyMentorDictionaryPath = \"\" Field Value string DefaultGeneralPropertyMentorUserDictionaryPath public const string DefaultGeneralPropertyMentorUserDictionaryPath = \"\" Field Value string DefaultGeneralPropertyPreCacheMaps public const string DefaultGeneralPropertyPreCacheMaps = \"\" Field Value string DefaultGeneralPropertyResourcesPath public const string DefaultGeneralPropertyResourcesPath = \"Resources/\" Field Value string DefaultGeneralPropertySerialNumber public const string DefaultGeneralPropertySerialNumber = \"\" Field Value string DefaultGeneralPropertyServiceRegistrationTimerInterval public const int DefaultGeneralPropertyServiceRegistrationTimerInterval = 60 Field Value int DefaultGeneralPropertyTcpIpMtu public const int DefaultGeneralPropertyTcpIpMtu = 1460 Field Value int DefaultGeneralPropertyTempPath public const string DefaultGeneralPropertyTempPath = \"Temp/\" Field Value string DefaultGeneralPropertyWfsDocumentPath public const string DefaultGeneralPropertyWfsDocumentPath = \"Wfs/\" Field Value string DefaultGeneralPropertyWmsDocumentPath public const string DefaultGeneralPropertyWmsDocumentPath = \"Wms/\" Field Value string DefaultHostPropertyDrawingService public const bool DefaultHostPropertyDrawingService = false Field Value bool DefaultHostPropertyFeatureService public const bool DefaultHostPropertyFeatureService = false Field Value bool DefaultHostPropertyKmlService public const bool DefaultHostPropertyKmlService = false Field Value bool DefaultHostPropertyMappingService public const bool DefaultHostPropertyMappingService = false Field Value bool DefaultHostPropertyProfilingService public const bool DefaultHostPropertyProfilingService = false Field Value bool DefaultHostPropertyRenderingService public const bool DefaultHostPropertyRenderingService = false Field Value bool DefaultHostPropertyResourceService public const bool DefaultHostPropertyResourceService = false Field Value bool DefaultHostPropertySiteService public const bool DefaultHostPropertySiteService = false Field Value bool DefaultHostPropertyTileService public const bool DefaultHostPropertyTileService = false Field Value bool DefaultLibraryCacheSizeParameters public const int DefaultLibraryCacheSizeParameters = 32 Field Value int DefaultLibraryLogBufferSizeParameters public const int DefaultLibraryLogBufferSizeParameters = 12 Field Value int DefaultMappingServicePropertyLegendFont public const string DefaultMappingServicePropertyLegendFont = \"Arial\" Field Value string DefaultPerformanceLogPropertyEnabled public const bool DefaultPerformanceLogPropertyEnabled = false Field Value bool DefaultPerformanceLogPropertyFilename public const string DefaultPerformanceLogPropertyFilename = \"Performance.log\" Field Value string DefaultPerformanceLogPropertyInterval public const int DefaultPerformanceLogPropertyInterval = 300 Field Value int DefaultPerformanceLogPropertyParameters public const string DefaultPerformanceLogPropertyParameters = \"\" Field Value string DefaultRenderingServicePropertiesGlobalRasterStylizationLockEnabled public const bool DefaultRenderingServicePropertiesGlobalRasterStylizationLockEnabled = true Field Value bool DefaultRenderingServicePropertyClampPoints public const bool DefaultRenderingServicePropertyClampPoints = false Field Value bool DefaultRenderingServicePropertyGeneralizeData public const bool DefaultRenderingServicePropertyGeneralizeData = false Field Value bool DefaultRenderingServicePropertyMaxRasterImageHeight public const int DefaultRenderingServicePropertyMaxRasterImageHeight = 2048 Field Value int DefaultRenderingServicePropertyMaxRasterImageWidth public const int DefaultRenderingServicePropertyMaxRasterImageWidth = 2048 Field Value int DefaultRenderingServicePropertyMaxRenderImageHeight public const int DefaultRenderingServicePropertyMaxRenderImageHeight = 16384 Field Value int DefaultRenderingServicePropertyMaxRenderImageWidth public const int DefaultRenderingServicePropertyMaxRenderImageWidth = 16384 Field Value int DefaultRenderingServicePropertyMinRasterGridSize public const int DefaultRenderingServicePropertyMinRasterGridSize = 10 Field Value int DefaultRenderingServicePropertyMinRasterGridSizeForPlot public const int DefaultRenderingServicePropertyMinRasterGridSizeForPlot = 5 Field Value int DefaultRenderingServicePropertyRasterGridSize public const int DefaultRenderingServicePropertyRasterGridSize = 100 Field Value int DefaultRenderingServicePropertyRasterGridSizeForPlot public const int DefaultRenderingServicePropertyRasterGridSizeForPlot = 50 Field Value int DefaultRenderingServicePropertyRasterGridSizeOverrideRatio public const double DefaultRenderingServicePropertyRasterGridSizeOverrideRatio = 0.25 Field Value double DefaultRenderingServicePropertyRasterGridSizeOverrideRatioForPlot public const double DefaultRenderingServicePropertyRasterGridSizeOverrideRatioForPlot = 0.1 Field Value double DefaultRenderingServicePropertyRenderSelectionBatchSize public const int DefaultRenderingServicePropertyRenderSelectionBatchSize = 10000 Field Value int DefaultRenderingServicePropertyTileExtentOffset public const double DefaultRenderingServicePropertyTileExtentOffset = 0.35 Field Value double DefaultResourceServicePropertyLibraryRepositoryPath public const string DefaultResourceServicePropertyLibraryRepositoryPath = \"Repositories/Library/\" Field Value string DefaultResourceServicePropertyLibraryResourceDataFilePath public const string DefaultResourceServicePropertyLibraryResourceDataFilePath = \"Repositories/Library/DataFiles/\" Field Value string DefaultResourceServicePropertyPackagesPath public const string DefaultResourceServicePropertyPackagesPath = \"Packages/\" Field Value string DefaultResourceServicePropertyRepositoryCheckpointsTimerInterval public const int DefaultResourceServicePropertyRepositoryCheckpointsTimerInterval = 600 Field Value int DefaultResourceServicePropertyResourceChangeTimerInterval public const int DefaultResourceServicePropertyResourceChangeTimerInterval = 5 Field Value int DefaultResourceServicePropertyResourceDataFileTrashFolderName public const string DefaultResourceServicePropertyResourceDataFileTrashFolderName = \"Trash\" Field Value string DefaultResourceServicePropertyResourcePermissionCacheSize public const int DefaultResourceServicePropertyResourcePermissionCacheSize = 1000 Field Value int DefaultResourceServicePropertyResourceSchemaFilePath public const string DefaultResourceServicePropertyResourceSchemaFilePath = \"Schema/\" Field Value string DefaultResourceServicePropertySessionRepositoryPath public const string DefaultResourceServicePropertySessionRepositoryPath = \"Repositories/Session/\" Field Value string DefaultResourceServicePropertySessionResourceDataFilePath public const string DefaultResourceServicePropertySessionResourceDataFilePath = \"Repositories/Session/DataFiles/\" Field Value string DefaultResourceServicePropertySiteRepositoryPath public const string DefaultResourceServicePropertySiteRepositoryPath = \"Repositories/Site/\" Field Value string DefaultSessionCacheSizeParamters public const int DefaultSessionCacheSizeParamters = 2 Field Value int DefaultSessionDBPageSizeParameters public const int DefaultSessionDBPageSizeParameters = 2 Field Value int DefaultSessionDBXMLPageSizeParameters public const double DefaultSessionDBXMLPageSizeParameters = 0.5 Field Value double DefaultSessionLogBufferSizeParameters public const int DefaultSessionLogBufferSizeParameters = 1 Field Value int DefaultSessionLogPropertyEnabled public const bool DefaultSessionLogPropertyEnabled = true Field Value bool DefaultSessionLogPropertyFilename public const string DefaultSessionLogPropertyFilename = \"Session.log\" Field Value string DefaultSessionLogPropertyParameters public const string DefaultSessionLogPropertyParameters = \"\" Field Value string DefaultSiteConnectionPropertyIpAddress public const string DefaultSiteConnectionPropertyIpAddress = \"127.0.0.1\" Field Value string DefaultSiteConnectionPropertyMaxConnections public const int DefaultSiteConnectionPropertyMaxConnections = 20 Field Value int DefaultSiteConnectionPropertyPort public const int DefaultSiteConnectionPropertyPort = 3333 Field Value int DefaultSiteConnectionPropertyQueueSize public const int DefaultSiteConnectionPropertyQueueSize = 10 Field Value int DefaultSiteConnectionPropertyThreadPoolSize public const int DefaultSiteConnectionPropertyThreadPoolSize = 5 Field Value int DefaultSiteServicePropertySessionTimeout public const int DefaultSiteServicePropertySessionTimeout = 1200 Field Value int DefaultSiteServicePropertySessionTimerInterval public const int DefaultSiteServicePropertySessionTimerInterval = 400 Field Value int DefaultTileServicePropertyImageFormat public const string DefaultTileServicePropertyImageFormat = \"PNG\" Field Value string DefaultTileServicePropertyRenderOnly public const bool DefaultTileServicePropertyRenderOnly = false Field Value bool DefaultTileServicePropertyTileCachePath public const string DefaultTileServicePropertyTileCachePath = \"Repositories/TileCache/\" Field Value string DefaultTileServicePropertyTileColumnsPerFolder public const int DefaultTileServicePropertyTileColumnsPerFolder = 30 Field Value int DefaultTileServicePropertyTileRowsPerFolder public const int DefaultTileServicePropertyTileRowsPerFolder = 30 Field Value int DefaultTileServicePropertyTileSizeX public const int DefaultTileServicePropertyTileSizeX = 300 Field Value int DefaultTileServicePropertyTileSizeY public const int DefaultTileServicePropertyTileSizeY = 300 Field Value int DefaultTraceLogPropertyEnabled public const bool DefaultTraceLogPropertyEnabled = true Field Value bool DefaultTraceLogPropertyFilename public const string DefaultTraceLogPropertyFilename = \"Trace.log\" Field Value string DefaultTraceLogPropertyParameters public const string DefaultTraceLogPropertyParameters = \"\" Field Value string DrawingServicePropertiesSection public const string DrawingServicePropertiesSection = \"DrawingServiceProperties\" Field Value string ErrorLogPropertiesSection public const string ErrorLogPropertiesSection = \"ErrorLogProperties\" Field Value string ErrorLogPropertyEnabled public const string ErrorLogPropertyEnabled = \"Enabled\" Field Value string ErrorLogPropertyFilename public const string ErrorLogPropertyFilename = \"Filename\" Field Value string ErrorLogPropertyParameters public const string ErrorLogPropertyParameters = \"Parameters\" Field Value string FeatureServicePropertiesSection public const string FeatureServicePropertiesSection = \"FeatureServiceProperties\" Field Value string FeatureServicePropertyCacheSize public const string FeatureServicePropertyCacheSize = \"CacheSize\" Field Value string FeatureServicePropertyCacheTimeLimit public const string FeatureServicePropertyCacheTimeLimit = \"CacheTimeLimit\" Field Value string FeatureServicePropertyCacheTimerInterval public const string FeatureServicePropertyCacheTimerInterval = \"CacheTimerInterval\" Field Value string FeatureServicePropertyDataCacheSize public const string FeatureServicePropertyDataCacheSize = \"DataCacheSize\" Field Value string FeatureServicePropertyDataConnectionPoolEnabled public const string FeatureServicePropertyDataConnectionPoolEnabled = \"DataConnectionPoolEnabled\" Field Value string FeatureServicePropertyDataConnectionPoolExcludedProviders public const string FeatureServicePropertyDataConnectionPoolExcludedProviders = \"DataConnectionPoolExcludedProviders\" Field Value string FeatureServicePropertyDataConnectionPoolSize public const string FeatureServicePropertyDataConnectionPoolSize = \"DataConnectionPoolSize\" Field Value string FeatureServicePropertyDataConnectionPoolSizeCustom public const string FeatureServicePropertyDataConnectionPoolSizeCustom = \"DataConnectionPoolSizeCustom\" Field Value string FeatureServicePropertyDataConnectionTimeout public const string FeatureServicePropertyDataConnectionTimeout = \"DataConnectionTimeout\" Field Value string FeatureServicePropertyDataConnectionTimerInterval public const string FeatureServicePropertyDataConnectionTimerInterval = \"DataConnectionTimerInterval\" Field Value string FeatureServicePropertyDataConnectionUseLimit public const string FeatureServicePropertyDataConnectionUseLimit = \"DataConnectionUseLimit\" Field Value string FeatureServicePropertyDataTransactionTimeout public const string FeatureServicePropertyDataTransactionTimeout = \"DataTransactionTimeout\" Field Value string FeatureServicePropertyDataTransactionTimerInterval public const string FeatureServicePropertyDataTransactionTimerInterval = \"DataTransactionTimerInterval\" Field Value string FeatureServicePropertyFDOConnectionTimeoutCustom public const string FeatureServicePropertyFDOConnectionTimeoutCustom = \"FDOConnectionTimeoutCustom\" Field Value string FeatureServicePropertyJoinQueryBatchSize public const string FeatureServicePropertyJoinQueryBatchSize = \"JoinQueryBatchSize\" Field Value string FeatureServicePropertyUseFdoJoinOptimization public const string FeatureServicePropertyUseFdoJoinOptimization = \"UseFdoJoinOptimization\" Field Value string FontAliasMappingSection public const string FontAliasMappingSection = \"FontAliases\" Field Value string GeneralPropertiesSection public const string GeneralPropertiesSection = \"GeneralProperties\" Field Value string GeneralPropertyConnectionTimeout public const string GeneralPropertyConnectionTimeout = \"ConnectionTimeout\" Field Value string GeneralPropertyConnectionTimerInterval public const string GeneralPropertyConnectionTimerInterval = \"ConnectionTimerInterval\" Field Value string GeneralPropertyDefaultMessageLocale public const string GeneralPropertyDefaultMessageLocale = \"DefaultMessageLocale\" Field Value string GeneralPropertyDisplayName public const string GeneralPropertyDisplayName = \"DisplayName\" Field Value string GeneralPropertyFdoPath public const string GeneralPropertyFdoPath = \"FdoPath\" Field Value string GeneralPropertyLicenseServerPath public const string GeneralPropertyLicenseServerPath = \"LicenseServerPath\" Field Value string GeneralPropertyLinuxFontDirectories public const string GeneralPropertyLinuxFontDirectories = \"LinuxFontDirectories\" Field Value string GeneralPropertyLinuxMemDebug public const string GeneralPropertyLinuxMemDebug = \"LinuxMemDebug\" Field Value string GeneralPropertyLocale public const string GeneralPropertyLocale = \"Locale\" Field Value string GeneralPropertyLogsDelimiter public const string GeneralPropertyLogsDelimiter = \"LogsDelimiter\" Field Value string GeneralPropertyLogsDetail public const string GeneralPropertyLogsDetail = \"LogsDetail\" Field Value string GeneralPropertyLogsPath public const string GeneralPropertyLogsPath = \"LogsPath\" Field Value string GeneralPropertyMachineIp public const string GeneralPropertyMachineIp = \"MachineIp\" Field Value string GeneralPropertyMaxLogFileSize public const string GeneralPropertyMaxLogFileSize = \"MaxLogFileSize\" Field Value string GeneralPropertyMaxLogFileSizeEnabled public const string GeneralPropertyMaxLogFileSizeEnabled = \"MaxLogFileSizeEnabled\" Field Value string GeneralPropertyMentorDictionaryPath public const string GeneralPropertyMentorDictionaryPath = \"MentorDictionaryPath\" Field Value string GeneralPropertyMentorUserDictionaryPath public const string GeneralPropertyMentorUserDictionaryPath = \"MentorUserDictionaryPath\" Field Value string GeneralPropertyPreCacheMaps public const string GeneralPropertyPreCacheMaps = \"PreCacheMaps\" Field Value string GeneralPropertyResourcesPath public const string GeneralPropertyResourcesPath = \"ResourcesPath\" Field Value string GeneralPropertySerialNumber public const string GeneralPropertySerialNumber = \"SerialNumber\" Field Value string GeneralPropertyServiceRegistrationTimerInterval public const string GeneralPropertyServiceRegistrationTimerInterval = \"ServiceRegistrationTimerInterval\" Field Value string GeneralPropertyTcpIpMtu public const string GeneralPropertyTcpIpMtu = \"TcpIpMtu\" Field Value string GeneralPropertyTempPath public const string GeneralPropertyTempPath = \"TempPath\" Field Value string GeneralPropertyWfsDocumentPath public const string GeneralPropertyWfsDocumentPath = \"WfsDocumentPath\" Field Value string GeneralPropertyWmsDocumentPath public const string GeneralPropertyWmsDocumentPath = \"WmsDocumentPath\" Field Value string HostPropertiesSection public const string HostPropertiesSection = \"HostProperties\" Field Value string HostPropertyDrawingService public const string HostPropertyDrawingService = \"DrawingService\" Field Value string HostPropertyFeatureService public const string HostPropertyFeatureService = \"FeatureService\" Field Value string HostPropertyKmlService public const string HostPropertyKmlService = \"KmlService\" Field Value string HostPropertyMappingService public const string HostPropertyMappingService = \"MappingService\" Field Value string HostPropertyProfilingService public const string HostPropertyProfilingService = \"ProfilingService\" Field Value string HostPropertyRenderingService public const string HostPropertyRenderingService = \"RenderingService\" Field Value string HostPropertyResourceService public const string HostPropertyResourceService = \"ResourceService\" Field Value string HostPropertySiteService public const string HostPropertySiteService = \"SiteService\" Field Value string HostPropertyTileService public const string HostPropertyTileService = \"TileService\" Field Value string LibraryCacheSizeParameters public const string LibraryCacheSizeParameters = \"LibraryCacheSize\" Field Value string LibraryLogBufferSizeParameters public const string LibraryLogBufferSizeParameters = \"LibraryLogBufferSize\" Field Value string MappingServicePropertiesSection public const string MappingServicePropertiesSection = \"MappingServiceProperties\" Field Value string MappingServicePropertyLegendFont public const string MappingServicePropertyLegendFont = \"LegendFont\" Field Value string OgcPropertiesSection public const string OgcPropertiesSection = \"OgcProperties\" Field Value string PerformanceLogPropertiesSection public const string PerformanceLogPropertiesSection = \"PerformanceLogProperties\" Field Value string PerformanceLogPropertyEnabled public const string PerformanceLogPropertyEnabled = \"Enabled\" Field Value string PerformanceLogPropertyFilename public const string PerformanceLogPropertyFilename = \"Filename\" Field Value string PerformanceLogPropertyInterval public const string PerformanceLogPropertyInterval = \"Interval\" Field Value string PerformanceLogPropertyParameters public const string PerformanceLogPropertyParameters = \"Parameters\" Field Value string RenderingServicePropertiesGlobalRasterStylizationLockEnabled public const string RenderingServicePropertiesGlobalRasterStylizationLockEnabled = \"GlobalRasterStylizationLockEnabled\" Field Value string RenderingServicePropertiesSection public const string RenderingServicePropertiesSection = \"RenderingServiceProperties\" Field Value string RenderingServicePropertyClampPoints public const string RenderingServicePropertyClampPoints = \"ClampPoints\" Field Value string RenderingServicePropertyGeneralizeData public const string RenderingServicePropertyGeneralizeData = \"GeneralizeData\" Field Value string RenderingServicePropertyMaxRasterImageHeight public const string RenderingServicePropertyMaxRasterImageHeight = \"MaxRasterImageHeight\" Field Value string RenderingServicePropertyMaxRasterImageWidth public const string RenderingServicePropertyMaxRasterImageWidth = \"MaxRasterImageWidth\" Field Value string RenderingServicePropertyMaxRenderImageHeight public const string RenderingServicePropertyMaxRenderImageHeight = \"MaxRenderImageHeight\" Field Value string RenderingServicePropertyMaxRenderImageWidth public const string RenderingServicePropertyMaxRenderImageWidth = \"MaxRenderImageWidth\" Field Value string RenderingServicePropertyMinRasterGridSize public const string RenderingServicePropertyMinRasterGridSize = \"MinRasterGridSize\" Field Value string RenderingServicePropertyMinRasterGridSizeForPlot public const string RenderingServicePropertyMinRasterGridSizeForPlot = \"MinRasterGridSizeForPlot\" Field Value string RenderingServicePropertyRasterGridSize public const string RenderingServicePropertyRasterGridSize = \"RasterGridSize\" Field Value string RenderingServicePropertyRasterGridSizeForPlot public const string RenderingServicePropertyRasterGridSizeForPlot = \"RasterGridSizeForPlot\" Field Value string RenderingServicePropertyRasterGridSizeOverrideRatio public const string RenderingServicePropertyRasterGridSizeOverrideRatio = \"RasterGridSizeOverrideRatio\" Field Value string RenderingServicePropertyRasterGridSizeOverrideRatioForPlot public const string RenderingServicePropertyRasterGridSizeOverrideRatioForPlot = \"RasterGridSizeOverrideRatioForPlot\" Field Value string RenderingServicePropertyRenderSelectionBatchSize public const string RenderingServicePropertyRenderSelectionBatchSize = \"RenderSelectionBatchSize\" Field Value string RenderingServicePropertyTileExtentOffset public const string RenderingServicePropertyTileExtentOffset = \"TileExtentOffset\" Field Value string ResourceServicePropertiesSection public const string ResourceServicePropertiesSection = \"ResourceServiceProperties\" Field Value string ResourceServicePropertyLibraryRepositoryPath public const string ResourceServicePropertyLibraryRepositoryPath = \"LibraryRepositoryPath\" Field Value string ResourceServicePropertyLibraryResourceDataFilePath public const string ResourceServicePropertyLibraryResourceDataFilePath = \"LibraryResourceDataFilePath\" Field Value string ResourceServicePropertyPackagesPath public const string ResourceServicePropertyPackagesPath = \"PackagesPath\" Field Value string ResourceServicePropertyRepositoryCheckpointsTimerInterval public const string ResourceServicePropertyRepositoryCheckpointsTimerInterval = \"RepositoryCheckpointsTimerInterval\" Field Value string ResourceServicePropertyResourceChangeTimerInterval public const string ResourceServicePropertyResourceChangeTimerInterval = \"ResourceChangeTimerInterval\" Field Value string ResourceServicePropertyResourceDataFileTrashFolderName public const string ResourceServicePropertyResourceDataFileTrashFolderName = \"ResourceDataFileTrashFolderName\" Field Value string ResourceServicePropertyResourcePermissionCacheSize public const string ResourceServicePropertyResourcePermissionCacheSize = \"ResourcePermissionCacheSize\" Field Value string ResourceServicePropertyResourceSchemaFilePath public const string ResourceServicePropertyResourceSchemaFilePath = \"ResourceSchemaFilePath\" Field Value string ResourceServicePropertySessionRepositoryPath public const string ResourceServicePropertySessionRepositoryPath = \"SessionRepositoryPath\" Field Value string ResourceServicePropertySessionResourceDataFilePath public const string ResourceServicePropertySessionResourceDataFilePath = \"SessionResourceDataFilePath\" Field Value string ResourceServicePropertySiteRepositoryPath public const string ResourceServicePropertySiteRepositoryPath = \"SiteRepositoryPath\" Field Value string ServerConfigurationFilename public const string ServerConfigurationFilename = \"serverconfig.ini\" Field Value string SessionCacheSizeParamters public const string SessionCacheSizeParamters = \"SessionCacheSize\" Field Value string SessionDBPageSizeParameters public const string SessionDBPageSizeParameters = \"SessionDBPageSize\" Field Value string SessionDBXMLPageSizeParameters public const string SessionDBXMLPageSizeParameters = \"SessionDBXMLPageSize\" Field Value string SessionLogBufferSizeParameters public const string SessionLogBufferSizeParameters = \"SessionLogBufferSize\" Field Value string SessionLogPropertiesSection public const string SessionLogPropertiesSection = \"SessionLogProperties\" Field Value string SessionLogPropertyEnabled public const string SessionLogPropertyEnabled = \"Enabled\" Field Value string SessionLogPropertyFilename public const string SessionLogPropertyFilename = \"Filename\" Field Value string SessionLogPropertyParameters public const string SessionLogPropertyParameters = \"Parameters\" Field Value string SiteConnectionPropertiesSection public const string SiteConnectionPropertiesSection = \"SiteConnectionProperties\" Field Value string SiteConnectionPropertyIpAddress public const string SiteConnectionPropertyIpAddress = \"IpAddress\" Field Value string SiteConnectionPropertyMaxConnections public const string SiteConnectionPropertyMaxConnections = \"MaxConnections\" Field Value string SiteConnectionPropertyPort public const string SiteConnectionPropertyPort = \"Port\" Field Value string SiteConnectionPropertyQueueSize public const string SiteConnectionPropertyQueueSize = \"QueueSize\" Field Value string SiteConnectionPropertyThreadPoolSize public const string SiteConnectionPropertyThreadPoolSize = \"ThreadPoolSize\" Field Value string SiteServicePropertiesSection public const string SiteServicePropertiesSection = \"SiteServiceProperties\" Field Value string SiteServicePropertySessionTimeout public const string SiteServicePropertySessionTimeout = \"SessionTimeout\" Field Value string SiteServicePropertySessionTimerInterval public const string SiteServicePropertySessionTimerInterval = \"SessionTimerInterval\" Field Value string TemplateRootFolder public const string TemplateRootFolder = \"TemplateRootFolder\" Field Value string TileServicePropertiesSection public const string TileServicePropertiesSection = \"TileServiceProperties\" Field Value string TileServicePropertyImageFormat public const string TileServicePropertyImageFormat = \"ImageFormat\" Field Value string TileServicePropertyRenderOnly public const string TileServicePropertyRenderOnly = \"RenderOnly\" Field Value string TileServicePropertyTileCachePath public const string TileServicePropertyTileCachePath = \"TileCachePath\" Field Value string TileServicePropertyTileColumnsPerFolder public const string TileServicePropertyTileColumnsPerFolder = \"TileColumnsPerFolder\" Field Value string TileServicePropertyTileRowsPerFolder public const string TileServicePropertyTileRowsPerFolder = \"TileRowsPerFolder\" Field Value string TileServicePropertyTileSizeX public const string TileServicePropertyTileSizeX = \"DefaultTileSizeX\" Field Value string TileServicePropertyTileSizeY public const string TileServicePropertyTileSizeY = \"DefaultTileSizeY\" Field Value string TraceLogPropertiesSection public const string TraceLogPropertiesSection = \"TraceLogProperties\" Field Value string TraceLogPropertyEnabled public const string TraceLogPropertyEnabled = \"Enabled\" Field Value string TraceLogPropertyFilename public const string TraceLogPropertyFilename = \"Filename\" Field Value string TraceLogPropertyParameters public const string TraceLogPropertyParameters = \"Parameters\" Field Value string UnmanagedDataMappingsSection public const string UnmanagedDataMappingsSection = \"UnmanagedDataMappings\" Field Value string WebApplicationPropertiesSection public const string WebApplicationPropertiesSection = \"WebApplicationProperties\" Field Value string WfsPassword public const string WfsPassword = \"WfsPassword\" Field Value string WidgetInfoFolder public const string WidgetInfoFolder = \"WidgetInfoFolder\" Field Value string WmsPassword public const string WmsPassword = \"WmsPassword\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgCoordinate.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinate.html",
    "title": "Class MgCoordinate | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinate Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinate is an abstract base class used to represent the Cartesian coordinates of a geometry. public class MgCoordinate : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCoordinate Implements IDisposable Derived MgCoordinateXY MgCoordinateXYM MgCoordinateXYZ MgCoordinateXYZM Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dimension public int Dimension { get; } Property Value int M public double M { get; } Property Value double NoM public static double NoM { get; } Property Value double NoZ public static double NoZ { get; } Property Value double X public double X { get; } Property Value double Y public double Y { get; } Property Value double Z public double Z { get; } Property Value double Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDimension() Gets the dimensions supported by this coordinate as a bit mask. See MgCoordinateDimension for a specification of the values which can be found in the bit mask. public int GetDimension() Returns int Returns a bit mask of OR'd MgCoordinateDimension values that defines the dimensions supported by this coordinate. GetM() Gets the M value of this coordinate. public double GetM() Returns double Returns the M value or the value of MgCoordinate::NoM if not set. GetX() Gets the X value of this coordinate. public double GetX() Returns double Returns the X value. GetY() Gets the Y value of this coordinate. public double GetY() Returns double Returns the Y value. GetZ() Gets the Z value of this coordinate. public double GetZ() Returns double Returns the Z value or the value of MgCoordinate::NoZ if not set."
  },
  "api/OSGeo.MapGuide.MgCoordinateCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateCollection.html",
    "title": "Class MgCoordinateCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateCollection provides support for defining an ordered set of coordinates. public class MgCoordinateCollection : MgGuardDisposable, IDisposable, IList<MgCoordinate>, ICollection<MgCoordinate>, IEnumerable<MgCoordinate>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateCollection Implements IDisposable IList<MgCoordinate> ICollection<MgCoordinate> IEnumerable<MgCoordinate> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgCoordinateCollection() Construct a MgCoordinateCollection object public MgCoordinateCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgCoordinate this[int index] { get; set; } Parameters index int Property Value MgCoordinate Methods Add(MgCoordinate) Adds the specified coordinate to the end of the collection. public void Add(MgCoordinate value) Parameters value MgCoordinate (MgCoordinate) Coordinate to add to the collection. Clear() Removes all coordinates from the collection. public void Clear() Contains(MgCoordinate) public virtual bool Contains(MgCoordinate value) Parameters value MgCoordinate Returns bool CopyTo(MgCoordinate[], int) public void CopyTo(MgCoordinate[] array, int arrayIndex) Parameters array MgCoordinate[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgCoordinate> GetEnumerator() Returns IEnumerator<MgCoordinate> GetItem(int) public virtual MgCoordinate GetItem(int index) Parameters index int Returns MgCoordinate IndexOf(MgCoordinate) public virtual int IndexOf(MgCoordinate value) Parameters value MgCoordinate Returns int Insert(int, MgCoordinate) Inserts the specified coordinate at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgCoordinate value) Parameters index int (int) Index at which to insert the coordinate. value MgCoordinate (MgCoordinate) Coordinate to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgCoordinate) Removes the specified coordinate from the collection. Returns false if the coordinate could not be removed. public bool Remove(MgCoordinate value) Parameters value MgCoordinate (MgCoordinate) Coordinate reference to remove. Returns bool Returns true if removal was successful. RemoveAt(int) Removes the coordinate at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the coordinate to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgCoordinate) Sets the coordinate in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgCoordinate value) Parameters index int (int) Index of the coordinate to set. value MgCoordinate (MgCoordinate) Coordinate to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgCoordinateDimension.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateDimension.html",
    "title": "Class MgCoordinateDimension | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateDimension Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateDimension defines a set of integer constants which can be OR'd together to specify the dimensionality of an MgCoordinate instance. public class MgCoordinateDimension Inheritance object MgCoordinateDimension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields M (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Specifies that the coordinate has an M ordinate. public const int M = 2 Field Value int XY (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Specifies that the coordinate has X and Y ordinates. public const int XY = 0 Field Value int XYZ (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Specifies that the coordinate has X, Y, and Z ordinates. public const int XYZ = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateIterator.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateIterator.html",
    "title": "Class MgCoordinateIterator | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateIterator Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll The class MgCoordinateIterator supports iteration over the coordinates of a geometry or path instruction. public class MgCoordinateIterator : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateIterator Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCurrent() Gets the current coordinate. After an iterator is created or after a Reset, MoveNext must be called to advance the iterator to the first coordinate before calling GetCurrent; otherwise, the current position is undefined and an exception is thrown. public MgCoordinate GetCurrent() Returns MgCoordinate The coordinate at the current position. Exceptions MgException MgIndexOutOfRangeException\"> MoveNext() Advances the iterator to the next coordinate. After an iterator is created or after a call to Reset, an iterator is positioned before the first coordinate, and the first call to MoveNext moves the iterator over the first coordinate. After the last coordinate is passed, subsequent calls to MoveNext return false until Reset is called. public bool MoveNext() Returns bool True if the iterator was successfully advanced to the next coordinate; false if the iterator has passed the last coordinate. Reset() Sets the iterator to its initial position prior to the first coordinate. public void Reset()"
  },
  "api/OSGeo.MapGuide.MgCoordinateSpace.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSpace.html",
    "title": "Class MgCoordinateSpace | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSpace Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Specifies the coordinate space for feature geometry returned from QueryFeatures. Can also specify that only non-geometric data should be returned by QueryFeature. public class MgCoordinateSpace Inheritance object MgCoordinateSpace Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Display Specifies that geometry properties should be returned by QueryFeature in the coordinate system space of the display in the client. public const string Display = \"Display\" Field Value string Map Specifies that geometry properties should be returned by QueryFeature in the coordinate system space of the map they belong to. public const string Map = \"Map\" Field Value string None Specifies that geometry properties should not be returned by QueryFeature. public const string None = \"None\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystem.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystem.html",
    "title": "Class MgCoordinateSystem | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystem Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgCoordinateSystem : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystem Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CsCode public string CsCode { get; } Property Value string Datum public string Datum { get; } Property Value string DatumDescription public string DatumDescription { get; } Property Value string Description public string Description { get; } Property Value string Ellipsoid public string Ellipsoid { get; } Property Value string EllipsoidDescription public string EllipsoidDescription { get; } Property Value string EpsgCode public int EpsgCode { get; } Property Value int EpsgQuadrant public short EpsgQuadrant { get; } Property Value short MaxX public double MaxX { get; } Property Value double MaxY public double MaxY { get; } Property Value double MinX public double MinX { get; } Property Value double MinY public double MinY { get; } Property Value double Projection public string Projection { get; } Property Value string ProjectionDescription public string ProjectionDescription { get; } Property Value string SridCode public int SridCode { get; } Property Value int Type public int Type { get; } Property Value int UnitScale public double UnitScale { get; } Property Value double Units public string Units { get; } Property Value string Methods CancelLonLatBounds() Cancels only the range checking for coordinate transformations, if it has been enabled via SetLonLatBounds before. Specifically, calling this method does not reset the min/max values on the coordinate system definition itself. That is, when eventually writing this object to the dictionary, the min/max values will be written, too. public void CancelLonLatBounds() CancelXYBounds() Cancels only the range checking for coordinate transformations, if it has been enabled via SetXYBounds public void CancelXYBounds() ConvertCoordinateFromLonLat(MgCoordinate) Converts the specified MgCoordinate in lon/lat units to coordinate system units public void ConvertCoordinateFromLonLat(MgCoordinate lonLatToCoordinate) Parameters lonLatToCoordinate MgCoordinate (MgCoordinate) The MgCoordinate in lon/lat units that will be converted ConvertCoordinateSystemUnitsToMeters(double) Converts the given value in coordinate system units to meters public double ConvertCoordinateSystemUnitsToMeters(double units) Parameters units double (double) The value in coordinate system units Returns double The converted value in meters ConvertCoordinateToLonLat(MgCoordinate) Converts the specified MgCoordinate in coordinate system units to lon/lat units public void ConvertCoordinateToLonLat(MgCoordinate coordinateToLonLat) Parameters coordinateToLonLat MgCoordinate (MgCoordinate) The MgCoordinate in coordinate system units that will be converted ConvertFromLonLat(MgCoordinate) Converts the specified MgCoordinate in lon/lat units to coordinate system units public MgCoordinate ConvertFromLonLat(MgCoordinate lonLat) Parameters lonLat MgCoordinate (MgCoordinate) The MgCoordinate in lon/lat units Returns MgCoordinate The converted MgCoordinate in coordinate system units ConvertFromLonLat(double, double) Converts the specified coordinates in lon/lat units to coordinate system units public MgCoordinate ConvertFromLonLat(double dLongitude, double dLatitude) Parameters dLongitude double (double) The longitude coordinate dLatitude double (double) The latitude coordinate Returns MgCoordinate The MgCoordinate in coordinate system units ConvertFromLonLat(double, double, double) Converts the specified coordinates in lon/lat units to coordinate system units public MgCoordinate ConvertFromLonLat(double dLongitude, double dLatitude, double dZ) Parameters dLongitude double (double) The longitude coordinate dLatitude double (double) The latitude coordinate dZ double (double) The Z coordinate Returns MgCoordinate The MgCoordinate in coordinate system units ConvertMetersToCoordinateSystemUnits(double) Converts the given value in meters to coordinate system units public double ConvertMetersToCoordinateSystemUnits(double meters) Parameters meters double (double) The value in meters Returns double The converted value in coordinate system unit ConvertToLonLat(MgCoordinate) Converts the specified MgCoordinate in coordinate system units to lon/lat units public MgCoordinate ConvertToLonLat(MgCoordinate coordinate) Parameters coordinate MgCoordinate (MgCoordinate) The MgCoordinate in coordinate system units Returns MgCoordinate The converted MgCoordinate in lon/lat units ConvertToLonLat(double, double) Converts the specified coordinates in coordinate system units to lon/lat units public MgCoordinate ConvertToLonLat(double dX, double dY) Parameters dX double (double) The X coordinate dY double (double) The Y coordinate Returns MgCoordinate The MgCoordinate in lon/lat units ConvertToLonLat(double, double, double) Converts the specified coordinates in coordinate system units to lon/lat units public MgCoordinate ConvertToLonLat(double dX, double dY, double dZ) Parameters dX double (double) The X coordinate dY double (double) The Y coordinate dZ double (double) The Z coordinate Returns MgCoordinate The MgCoordinate in lon/lat units CreateClone() Gets a cloned copy of this coordinate system public MgCoordinateSystem CreateClone() Returns MgCoordinateSystem The cloned copy of this coordinate system Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAge() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public short GetAge() Returns short GetAzimuth(MgCoordinate, MgCoordinate) Gets the angle with respect to North of a vector formed by two coordinates public double GetAzimuth(MgCoordinate coord1, MgCoordinate coord2) Parameters coord1 MgCoordinate (MgCoordinate) The first coordinate coord2 MgCoordinate (MgCoordinate) The second coordinate Returns double The azimuth (Angle with respect to North) of the vector formed by coord1 and coord2 GetAzimuth(double, double, double, double) Gets the angle with respect to North of a vector formed by two coordinate public double GetAzimuth(double x1, double y1, double x2, double y2) Parameters x1 double The first X coordinate y1 double The first Y coordinate x2 double The second X coordinate y2 double The second Y coordinate Returns double The azimuth (Angle with respect to the North) of the vector formed by (x1, y1) and (x2, y2) GetCatalog() Gets the associated coordinate system catalog for this coordinate system public MgCoordinateSystemCatalog GetCatalog() Returns MgCoordinateSystemCatalog The associated MgCoordinateSystemCatalog object GetCategories() Gets the categories of this coordinate system public MgStringCollection GetCategories() Returns MgStringCollection The MgStringCollection containing the cateogories for this coordinate system GetConvergence(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetConvergence(double dLongitude, double dLatitude) Parameters dLongitude double dLatitude double Returns double GetCoordinate(MgCoordinate, double, double) Computes a coordinate a given distance along a vector that is defined by a starting coordinate and an azimuth (Angle with respect to North). public MgCoordinate GetCoordinate(MgCoordinate coord, double azimuth, double distance) Parameters coord MgCoordinate (MgCoordinate) An MgCoordinate object in coordinate system units that represents the start of the vector. azimuth double (double) An azimuth (Angle with respect to the North) that defines the direction of the vector. distance double (double) The distance along the vector to the desired coordinate in meters. Returns MgCoordinate An MgCoordinate that lies the given distance along the vector. GetCoordinate(double, double, double, double) Computes a coordinate a given distance along a vector that is defined by a starting (x, y) coordinate and an azimuth (Angle with respect to North). public MgCoordinate GetCoordinate(double xStart, double yStart, double azimuth, double distance) Parameters xStart double (double) The x value in coordinate system units of the starting coordinate. yStart double (double) The y value in coordinate system units of the starting coordinate. azimuth double (double) An azimuth (Angle with respect to the North) that defines the direction of the vector. distance double (double) The distance along the vector to the desired coordinate in meters. Returns MgCoordinate An MgCoordinate that lies the given distance along the vector. GetCountryOrState() Gets the country or state of this coordinate system public string GetCountryOrState() Returns string The country or state of this coordinate system GetCsCode() Returns the CS-Map coordinate system code public string GetCsCode() Returns string The CS-Map coordinate system code GetDatum() Returns the datum of this coordinate system public string GetDatum() Returns string The coordinate system datum string GetDatumDefinition() Gets the datum definition for this coordinate system public MgCoordinateSystemDatum GetDatumDefinition() Returns MgCoordinateSystemDatum The datum definition for this coordinate system GetDatumDescription() Returns the datum description of this coordinate system public string GetDatumDescription() Returns string The datum description string of this coordinate system GetDescription() Returns the description of this coordinate system public string GetDescription() Returns string The description of this coordinate system GetEllipsoid() Returns the ellipsoid of this coordinate system public string GetEllipsoid() Returns string The ellipsoid string of this coordinate system GetEllipsoidDefinition() Gets the ellipsoid for this coordinate system public MgCoordinateSystemEllipsoid GetEllipsoidDefinition() Returns MgCoordinateSystemEllipsoid The ellipsoid for this coordinate system GetEllipsoidDescription() Returns the ellipsoid description of this coordinate system public string GetEllipsoidDescription() Returns string The ellipsoid description string of this coordinate system GetEpsgCode() public virtual int GetEpsgCode() Returns int GetEpsgQuadrant() public virtual short GetEpsgQuadrant() Returns short GetErrors() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystemEnumInteger32 GetErrors() Returns MgCoordinateSystemEnumInteger32 GetGroup() Gets the group of this coordinate system public string GetGroup() Returns string The group of this coordinate system GetLatMax() Returns this system's maximum latitude value in degrees. If not set in the dictionary, the value returned here has been calculated by the underlying coordinate system transformation engine. public double GetLatMax() Returns double Returns this system's minimum longitude value in degrees. Only returns 0 (if it's not the actual value) if explicitely set via SetLonLatBounds or CancelLonLatBounds. GetLatMin() Returns this system's minimum latitude value in degrees. If not set in the dictionary, the value returned here has been calculated by the underlying coordinate system transformation engine. public double GetLatMin() Returns double Returns this system's minimum longitude value in degrees. Only returns 0 (if it's not the actual value) if explicitely set via SetLonLatBounds or CancelLonLatBounds. GetLocation() Gets the location of this coordinate system public string GetLocation() Returns string The location of this coordinate system GetLonMax() Returns this system's maximum longitude value in degrees. If not set in the dictionary, the value returned here has been calculated by the underlying coordinate system transformation engine. public double GetLonMax() Returns double Returns this system's minimum longitude value in degrees. Only returns 0 (if it's not the actual value) if explicitely set via SetLonLatBounds or CancelLonLatBounds. GetLonMin() Returns this system's minimum longitude value in degrees. If not set in the dictionary, the value returned here has been calculated by the underlying coordinate system transformation engine. public double GetLonMin() Returns double Returns this system's minimum longitude value in degrees. Only returns 0 (if it's not the actual value) if explicitely set via SetLonLatBounds or CancelLonLatBounds. GetMapScale() Gets the map scale for this coordinate system public double GetMapScale() Returns double The map scale for this coordinate system GetMaxX() Gets the maximum X value public double GetMaxX() Returns double The coordinate system maximum X value GetMaxY() Gets the maximum Y value public double GetMaxY() Returns double The coordinate system maximum Y value GetMeasure() Gets the measure object of this coordinate system public MgCoordinateSystemMeasure GetMeasure() Returns MgCoordinateSystemMeasure The MgCoordinateSystemMeasure object of this coordinate system GetMinX() Gets the minimum X value. public double GetMinX() Returns double The coordinate system minimum X value GetMinY() Gets the minimum Y value. public double GetMinY() Returns double The coordinate system minimum Y value GetOffsetX() Gets the X offset of this coordinate system public double GetOffsetX() Returns double The X offset of this coordinate system GetOffsetY() Gets the Y offset of this coordinate system public double GetOffsetY() Returns double The Y offset of this coordinate system GetOriginLatitude() Gets the origin latitude of this coordinate system public double GetOriginLatitude() Returns double The origin latitude of this coordinate system GetOriginLongitude() Gets the origin longitude of this coordinate system public double GetOriginLongitude() Returns double The origin longitude of this coordinate system GetProjection() Returns the projection of this coordinate system public string GetProjection() Returns string The projection of this coordinate system GetProjectionCode() Gets the projection code of this coordinate system (see MgCoordinateSystemProjectionCode) public int GetProjectionCode() Returns int The projection code of this coordinate system GetProjectionDescription() Returns the projection description of this coordinate system public string GetProjectionDescription() Returns string The projection description of this coordinate system GetProjectionParameter(int) Gets the projection parameter count of this coordinate system at the specified index public double GetProjectionParameter(int nIndex) Parameters nIndex int (int) The index at which to retrieve the projection parameter. NOTE: The index is 1-based, not 0-based (ie. The first index will start at 1, not 0) Returns double The projection parameter at the given index GetProjectionParameterCount() Gets the projection parameter count of this coordinate system public int GetProjectionParameterCount() Returns int The projection parameter count of this coordinate system GetQuadrant() Gets the quadrant for this coordinate system public short GetQuadrant() Returns short The quadrant for this coordinate system GetScale(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetScale(double dLongitude, double dLatitude) Parameters dLongitude double dLatitude double Returns double GetScaleH(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetScaleH(double dLongitude, double dLatitude) Parameters dLongitude double dLatitude double Returns double GetScaleK(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetScaleK(double dLongitude, double dLatitude) Parameters dLongitude double dLatitude double Returns double GetScaleReduction() Gets the scale reduction of this coordinate system public double GetScaleReduction() Returns double The scale reduction of this coordinate system GetSource() Gets the source of this coordinate system public string GetSource() Returns string The source of this coordinate system GetSridCode() public virtual int GetSridCode() Returns int GetType() Gets the type of the coordinate system: arbitrary, geographic, or projected. public int GetType() Returns int One of the values defined in MgCoordinateSystemType. GetUnitCode() Gets the unit code of this coordinate system public int GetUnitCode() Returns int The unit code of this coordinate system GetUnitScale() Gets the factor used to convert coordinate system units to meters public double GetUnitScale() Returns double The factor used to convert coordinate system units to meters GetUnits() Gets the coordinate system units public string GetUnits() Returns string The coordinate system units string GetZeroX() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetZeroX() Returns double GetZeroY() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetZeroY() Returns double IsEncrypted() Checks whether this coordinate system is encrypted public bool IsEncrypted() Returns bool true if this coordinate system is encrypted. false otherwise IsGeodetic() Gets whether this coordinate system is geodetic public bool IsGeodetic() Returns bool true if this coordinate system is geodetic. false otherwise IsLegalCountryOrState(string) Checks whether this country or state is legal for this coordinate system public bool IsLegalCountryOrState(string sCountryOrState) Parameters sCountryOrState string (String/string) The country or state to check Returns bool true if the given country or state is a legal one, false otherwise IsLegalCsCode(string) Checks whether the given CS-Map coordinate system code is a legal one public bool IsLegalCsCode(string sCode) Parameters sCode string Returns bool true if the given code is a legal one, false otherwise IsLegalDescription(string) Checks whether this description is legal for this coordinate system public bool IsLegalDescription(string sDesc) Parameters sDesc string (String/string) The description to check Returns bool true if the given description is a legal one, false otherwise IsLegalGroup(string) Checks whether this group is legal for this coordinate system public bool IsLegalGroup(string sGroup) Parameters sGroup string (String/string) The group to check Returns bool true if the given group is a legal one, false otherwise IsLegalLocation(string) Checks whether this location is legal for this coordinate system public bool IsLegalLocation(string sLoc) Parameters sLoc string (String/string) The location to check Returns bool true if the given location is a legal one, false otherwise IsLegalSource(string) Checks whether this source is legal for this coordinate system public bool IsLegalSource(string sSource) Parameters sSource string (String/string) The source to check Returns bool true if the given source is a legal one, false otherwise IsProtected() Checks whether this coordinate system is protected public bool IsProtected() Returns bool true if this coordinate system is protected. false otherwise IsSameAs(MgGuardDisposable) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsSameAs(MgGuardDisposable pDef) Parameters pDef MgGuardDisposable Returns bool IsUsable(MgCoordinateSystemCatalog) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsable(MgCoordinateSystemCatalog pCatalog) Parameters pCatalog MgCoordinateSystemCatalog Returns bool IsValid() Checks whether this coordinate system is a valid one public bool IsValid() Returns bool true if this coordinate system is a valid one. false otherwise IsValidLonLat(double, double) Gets the given longitude and latitude coordinates are valid within this coordinate system public bool IsValidLonLat(double dLongitude, double dLatitude) Parameters dLongitude double (double) The longitude coordinate dLatitude double (double) The latitude coordinate Returns bool true if the coordinates are valid. false otherwise IsValidXY(double, double) Gets the given X and Y coordinates are valid within this coordinate system public bool IsValidXY(double dX, double dY) Parameters dX double (double) The X coordinate dY double (double) The Y coordinate Returns bool true if the coordinates are valid. false otherwise MeasureEuclideanDistance(MgCoordinate, MgCoordinate) Measures the euclidean distance between two coordinates in coordinate system units. public double MeasureEuclideanDistance(MgCoordinate coord1, MgCoordinate coord2) Parameters coord1 MgCoordinate (MgCoordinate) The first coordinate coord2 MgCoordinate (MgCoordinate) The second coordinate Returns double The euclidean distance from coord1 to coord2 in coordinate system units. MeasureEuclideanDistance(double, double, double, double) Measures the euclidean distance between (x1, y1) and (x2, y2) in coordinate system units. public double MeasureEuclideanDistance(double x1, double y1, double x2, double y2) Parameters x1 double The first X coordinate y1 double The first Y coordinate x2 double The second X coordinate y2 double The second Y coordinate Returns double The euclidean distance from (x1, y1) to (x2, y2) in coordinate system units. MeasureGreatCircleDistance(MgCoordinate, MgCoordinate) Measures the great circle distance between two coordinates in coordinate system units public double MeasureGreatCircleDistance(MgCoordinate coord1, MgCoordinate coord2) Parameters coord1 MgCoordinate (MgCoordinate) The first coordinate coord2 MgCoordinate (MgCoordinate) The second coordinate Returns double The great circle distance from coord1 to coord2 in coordinate system units MeasureGreatCircleDistance(double, double, double, double) Measures the distance between two coordinates (x1, y1) and (x2, y2) in coordinate system units public double MeasureGreatCircleDistance(double x1, double y1, double x2, double y2) Parameters x1 double The first X coordinate y1 double The first Y coordinate x2 double The second X coordinate y2 double The second Y coordinate Returns double The great circle distance from (x1, y1) to (x2, y2) in coordinate system units SetCountryOrState(string) Sets the country or state of this coordinate system public void SetCountryOrState(string sCountryOrState) Parameters sCountryOrState string (String/string) The country or state SetCsCode(string) Sets the CS-Map coordinate system code for this coordinate system public void SetCsCode(string sCode) Parameters sCode string (String/string) The CS-Map coordinate system code SetDatumDefinition(MgCoordinateSystemDatum) Sets the datum for this coordinate system public void SetDatumDefinition(MgCoordinateSystemDatum pDatum) Parameters pDatum MgCoordinateSystemDatum (MgCoordinateSystemDatum) The datum definition SetDescription(string) Sets the description of this coordinate system public void SetDescription(string sDesc) Parameters sDesc string (String/string) The description of this coordinate system SetEllipsoidDefinition(MgCoordinateSystemEllipsoid) Sets the ellipsoid definition for this coordinate system public void SetEllipsoidDefinition(MgCoordinateSystemEllipsoid pEllipsoid) Parameters pEllipsoid MgCoordinateSystemEllipsoid (MgCoordinateSystemEllipsoid) The ellipsoid definition SetEncryptMode(bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetEncryptMode(bool bIsEncrypted) Parameters bIsEncrypted bool SetGroup(string) Sets the group of this coordinate system public void SetGroup(string sGroup) Parameters sGroup string (String/string) The group SetLocation(string) Sets the location of this coordinate system public void SetLocation(string sLoc) Parameters sLoc string (String/string) The location SetLonLatBounds(double, double, double, double) Allows to set the min/max longitude and latitude values in degrees this coordinate system is valid in. This method must only be called on systems that are not protected. When setting these values, the coordinate system API will perform the following actions: <ol> <li>(Re-)enable valid range checking: When converting coordinates, the values are checked to fall in the valid range as specified here</li> <li>Save the values for later storage: When eventually writing this coordinate system to the dictionary, the values will be written, too.</li> </ol> public void SetLonLatBounds(double dLonMin, double dLatMin, double dLonMax, double dLatMax) Parameters dLonMin double The minimum longitude value dLatMin double The minimum latitude value dLonMax double The maximum longitude value dLatMax double The maximum latitude value SetMapScale(double) Sets the map scale for this coordinate system public void SetMapScale(double dMapScale) Parameters dMapScale double (double) The map scale SetOffsets(double, double) Sets the X and Y offsets for this coordinate system public void SetOffsets(double dXOffset, double dYOffset) Parameters dXOffset double (double) The X offset dYOffset double (double) The Y offset SetOriginLatitude(double) Sets the origin latitude for this coordinate system public void SetOriginLatitude(double dOrgLat) Parameters dOrgLat double (double) The origin latitude SetOriginLongitude(double) Sets the origin longitude for this coordinate system public void SetOriginLongitude(double dOrgLng) Parameters dOrgLng double (double) The origin longitude SetProjectionCode(int) Sets the projection code for this coordinate system public void SetProjectionCode(int prjType) Parameters prjType int (int) The projection code (see MgCoordinateSystemProjectionCode) SetProjectionParameter(int, double) Sets the projection parameter of this coordinate system at the specified index public void SetProjectionParameter(int nIndex, double dValue) Parameters nIndex int (int) The index at which to set the projection parameter. NOTE: The index is 1-based, not 0-based (ie. The first index will start at 1, not 0) dValue double (double) The projection parameter value SetProtectMode(bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetProtectMode(bool bIsProtected) Parameters bIsProtected bool SetQuadrant(short) Sets the quadrant for this coordinate system public void SetQuadrant(short sQuad) Parameters sQuad short (short/int) The quadrant SetScaleReduction(double) Sets the scale reduction for this coordinate system public void SetScaleReduction(double dSclRed) Parameters dSclRed double (double) The scale reduction SetSource(string) Sets the source of this coordinate system public void SetSource(string sSource) Parameters sSource string (String/string) The source SetUnitCode(int) Sets the unit code for this coordinate system public void SetUnitCode(int unit) Parameters unit int (int) The unit code SetXYBounds(double, double, double, double) Allows to set the min/max X and Y values in the coordinate system's units that this coordinate system is valid in. This method must only be called on systems that are not protected. When setting these values, the coordinate system API will perform the following actions: <ol> <li>(Re-)enable valid range checking: When converting coordinates, the values are checked to fall in the valid range as specified here</li> <li>Save the values for later storage: When eventually writing this coordinate system to the dictionary, the values will be written, too.</li> </ol> public void SetXYBounds(double dXMin, double dYMin, double dXMax, double dYMax) Parameters dXMin double The minimum X value dYMin double The minimum Y value dXMax double The maximum X value dYMax double The maximum Y value SetZeroes(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetZeroes(double dXZero, double dYZero) Parameters dXZero double dYZero double ToString() Gets the OGC WKT string representation of the coordinate system. public string ToString() Returns string The OGC WKT string."
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemCatalog.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemCatalog.html",
    "title": "Class MgCoordinateSystemCatalog | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemCatalog Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines and manages the physical location of coordinate system data files public class MgCoordinateSystemCatalog : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemCatalog Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AreDictionaryFilesWritable() Checks whether any kind of definition supported by this catalog can be updated in the dictionary files currently in use. Depending on whether this catalog uses a specific directory to store user-provided definitions in, this method will perform the following checks: public bool AreDictionaryFilesWritable() Returns bool Otherwise false. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCategoryDictionary() Gets the coordinate system category dictionary public MgCoordinateSystemCategoryDictionary GetCategoryDictionary() Returns MgCoordinateSystemCategoryDictionary The coordinate system category dictionary GetCoordinateSystemDictionary() Gets the coordinate system dictionary public MgCoordinateSystemDictionary GetCoordinateSystemDictionary() Returns MgCoordinateSystemDictionary The coordinate system dictionary GetDatumDictionary() Gets the coordinate system datum dictionary public MgCoordinateSystemDatumDictionary GetDatumDictionary() Returns MgCoordinateSystemDatumDictionary The coordinate system datum dictionary GetDefaultDictionaryDir() Gets the default dictionary path public string GetDefaultDictionaryDir() Returns string The default dictionary path GetDefaultUserDictionaryDir() Returns the default directory path where user defined coordinate system definitions can be found or can be written into, respectively. If set, this method returns the value of the MENTOR_USER_DICTIONARY_PATH public string GetDefaultUserDictionaryDir() Returns string GetDictionaryDir() Gets the current dictionary path public string GetDictionaryDir() Returns string The current dictionary path GetDictionaryUtility() Gets the coordinate system dictionary utility public MgCoordinateSystemDictionaryUtility GetDictionaryUtility() Returns MgCoordinateSystemDictionaryUtility The coordinate system dictionary utility GetEllipsoidDictionary() Gets the coordinate system ellipsoid dictionary public MgCoordinateSystemEllipsoidDictionary GetEllipsoidDictionary() Returns MgCoordinateSystemEllipsoidDictionary The coordinate system ellipsoid dictionary GetFormatConverter() Gets the coordinate system format converter public MgCoordinateSystemFormatConverter GetFormatConverter() Returns MgCoordinateSystemFormatConverter The coordinate system format converter GetGeodeticPathDictionary() Gets the coordinate system geodetic path dictionary public MgCoordinateSystemGeodeticPathDictionary GetGeodeticPathDictionary() Returns MgCoordinateSystemGeodeticPathDictionary The coordinate system geodetic path dictionary GetGeodeticTransformDefDictionary() Gets the coordinate system geodetic transform definition dictionary public MgCoordinateSystemGeodeticTransformDefDictionary GetGeodeticTransformDefDictionary() Returns MgCoordinateSystemGeodeticTransformDefDictionary The coordinate system geodetic transform definition dictionary GetGeodeticTransformations(MgCoordinateSystemDatum, MgCoordinateSystemDatum) Gets the geodetic transformations for the source and target coordinate system datums public MgDisposableCollection GetGeodeticTransformations(MgCoordinateSystemDatum pSource, MgCoordinateSystemDatum pTarget) Parameters pSource MgCoordinateSystemDatum (MgCoordinateSystemDatum) The source coordinate system datum pTarget MgCoordinateSystemDatum (MgCoordinateSystemDatum) The target coordinate system datum Returns MgDisposableCollection The collection of MgCoordinateSystemGeodeticTransformation objects GetMathComparator() Gets the coordinate system math comparator public MgCoordinateSystemMathComparator GetMathComparator() Returns MgCoordinateSystemMathComparator The coordinate system math comparator GetProjectionInformation() Gets the coordinate system projection information public MgCoordinateSystemProjectionInformation GetProjectionInformation() Returns MgCoordinateSystemProjectionInformation The coordinate system projection information GetProtectionMode() Gets the protection mode of this catalog public short GetProtectionMode() Returns short The protection mode of this catalog GetUnitInformation() Gets the coordinate system unit information public MgCoordinateSystemUnitInformation GetUnitInformation() Returns MgCoordinateSystemUnitInformation The coordinate system unit information GetUserDictionaryDir() Returns the current directory where user defined coordinate system definitions is obtained from or is written into. Returns an empty string if no such directory is currently configured for this catalog. public string GetUserDictionaryDir() Returns string SetDefaultDictionaryDirAndFileNames() Sets the default dictionary path and file names public void SetDefaultDictionaryDirAndFileNames() SetDictionaryDir(string) Sets the path where the dictionary files are located public void SetDictionaryDir(string sDirPath) Parameters sDirPath string SetProtectionMode(short) Sets the protection mode public void SetProtectionMode(short nMode) Parameters nMode short (short/int) The protection mode SetUserDictionaryDir(string) Sets the actual directory where user defined coordinate system definitions can be found or can be written into. The directory set through this method must exist and writeable. If set to an empty string, the catalog's 'user defined coordinate system' directory will be unset and any updates will again happen only inside the directory as returned by GetDictionaryDir(). public void SetUserDictionaryDir(string sDirPath) Parameters sDirPath string"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemCategory.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemCategory.html",
    "title": "Class MgCoordinateSystemCategory | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemCategory Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines a category of coordinate systems public class MgCoordinateSystemCategory : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemCategory Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddCoordinateSystem(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void AddCoordinateSystem(string sName) Parameters sName string Clear() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Clear() CreateClone() Returns a cloned copy of this category public MgCoordinateSystemCategory CreateClone() Returns MgCoordinateSystemCategory A cloned copy of this category Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCatalog() Gets the associated coordinate system catalog public MgCoordinateSystemCatalog GetCatalog() Returns MgCoordinateSystemCatalog The associated coordinate system catalog GetCoordinateSystems() Gets the coordinate system in this category public MgStringCollection GetCoordinateSystems() Returns MgStringCollection A MgStringCollection containing the names of all coordinate systems in this category GetEnum() Gets the coordinate system enumerator for this category public MgCoordinateSystemEnum GetEnum() Returns MgCoordinateSystemEnum The coordinate system enumerator GetName() Gets the name of this coordinate system category public string GetName() Returns string The name of this coordinate system category GetSize() Gets the size of this category public int GetSize() Returns int The size of this category HasCoordinateSystem(string) Checks whether this category has the specified coordinate system name public bool HasCoordinateSystem(string sName) Parameters sName string (String/string) The coordinate system name Returns bool true if the specified name exists. false otherwise IsLegalName(string) Checks whether the given name is legal for this category public bool IsLegalName(string sName) Parameters sName string Returns bool true if the given name is legal. false otherwise IsSameAs(MgGuardDisposable) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsSameAs(MgGuardDisposable pDef) Parameters pDef MgGuardDisposable Returns bool IsUsable(MgCoordinateSystemCatalog) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsable(MgCoordinateSystemCatalog pCatalog) Parameters pCatalog MgCoordinateSystemCatalog Returns bool IsValid() Gets whether this category is valid public bool IsValid() Returns bool true if this category is valid RemoveCoordinateSystem(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void RemoveCoordinateSystem(string sName) Parameters sName string SetName(string) Sets the name of this coordinate system category public void SetName(string sName) Parameters sName string (String/string) The name of this coordinate system category"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemCategoryDictionary.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemCategoryDictionary.html",
    "title": "Class MgCoordinateSystemCategoryDictionary | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemCategoryDictionary Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Basic functionality for the coordinate system category dictionary public class MgCoordinateSystemCategoryDictionary : MgCoordinateSystemDictionaryBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDictionaryBase MgCoordinateSystemCategoryDictionary Implements IDisposable Inherited Members MgCoordinateSystemDictionaryBase.GetCatalog() MgCoordinateSystemDictionaryBase.GetDefaultFileName() MgCoordinateSystemDictionaryBase.GetFileName() MgCoordinateSystemDictionaryBase.SetFileName(string) MgCoordinateSystemDictionaryBase.GetPath() MgCoordinateSystemDictionaryBase.GetSize() MgCoordinateSystemDictionaryBase.Add(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Remove(string) MgCoordinateSystemDictionaryBase.Modify(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Get(string) MgCoordinateSystemDictionaryBase.Has(string) MgCoordinateSystemDictionaryBase.GetEnum() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCategory(string) Gets the category of the specified name public MgCoordinateSystemCategory GetCategory(string sName) Parameters sName string (String/string) The category Returns MgCoordinateSystemCategory The coordinate system category or NULL if not found NewCategory() Creates a new category public MgCoordinateSystemCategory NewCategory() Returns MgCoordinateSystemCategory The coordinate system category Rename(string, string) Renames the given category name to new specified category name public void Rename(string sOldName, string sNewName) Parameters sOldName string (String/string) The old category sNewName string (String/string) The new category"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemCodeFormat.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemCodeFormat.html",
    "title": "Class MgCoordinateSystemCodeFormat | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemCodeFormat Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines constants used to indicate the WKT flavor public class MgCoordinateSystemCodeFormat Inheritance object MgCoordinateSystemCodeFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Epsg EPSG flavor public const int Epsg = 1 Field Value int Mentor Mentor/CS-Map flavor public const int Mentor = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemDatum.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemDatum.html",
    "title": "Class MgCoordinateSystemDatum | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemDatum Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgCoordinateSystemDatum : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDatum Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateClone() Returns a cloned copy of this datum public MgCoordinateSystemDatum CreateClone() Returns MgCoordinateSystemDatum A cloned copy of this datum Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAge() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public short GetAge() Returns short GetCatalog() Gets the associated coordinate system catalog public MgCoordinateSystemCatalog GetCatalog() Returns MgCoordinateSystemCatalog The associated coordinate system catalog GetCountryOrState() Gets the country or state for this datum public string GetCountryOrState() Returns string The country or state for this datum GetDescription() Gets the description of this datum public string GetDescription() Returns string The description of this datum GetDtCode() Returns the CS-Map coordinate system datum code public string GetDtCode() Returns string The CS-Map coordinate system datum code GetEllipsoid() Gets the ellipsoid for this datum public string GetEllipsoid() Returns string The ellipsoid for this datum GetEllipsoidDefinition() Gets the ellipsoid definition for this datum public MgCoordinateSystemEllipsoid GetEllipsoidDefinition() Returns MgCoordinateSystemEllipsoid The MgCoordinateSystemEllipsoid object GetEpsgCode() Gets the EPSG code for this datum public short GetEpsgCode() Returns short The EPSG code for this datum GetGeodeticTransformations(MgCoordinateSystemDatum) Gets a collection of geodetic transformation between this datum and the specified target datum public MgDisposableCollection GetGeodeticTransformations(MgCoordinateSystemDatum pTarget) Parameters pTarget MgCoordinateSystemDatum Returns MgDisposableCollection A collection of MgCoordinateSystemGeodeticTransformation objects GetGroup() Gets the group for this datum public string GetGroup() Returns string The group for this datum GetLocation() Gets the location of this datum public string GetLocation() Returns string The location of this datum GetSource() Gets the source of this datum public string GetSource() Returns string The source of this datum IsEncrypted() Gets whether this datum is encrypted public bool IsEncrypted() Returns bool true if this datum is encrypted. false otherwise IsLegalCountryOrState(string) Gets whether the given country or state is legal for this datum public bool IsLegalCountryOrState(string sCountryOrState) Parameters sCountryOrState string Returns bool true if the given country or state is legal. false otherwise IsLegalDescription(string) Checks whether the given description is legal for this datum public bool IsLegalDescription(string sDesc) Parameters sDesc string Returns bool true if the given description is legal. false otherwise IsLegalDtCode(string) Checks whether the specified CS-Map coordinate system datum code is a legal one public bool IsLegalDtCode(string sCode) Parameters sCode string Returns bool true if the given code is a legal one, false otherwise IsLegalGroup(string) Gets whether the specified group is legal for this datum public bool IsLegalGroup(string sGroup) Parameters sGroup string Returns bool true if the specified group is legal. false otherwise IsLegalLocation(string) Gets whether the given location is valid for this datum public bool IsLegalLocation(string sLoc) Parameters sLoc string Returns bool true if the given location is valid. false otherwise IsLegalSource(string) Gets whether the given source is legal for this datum public bool IsLegalSource(string sSource) Parameters sSource string Returns bool true if the given source is legal. false otherwise IsProtected() Gets whether this datum is protected public bool IsProtected() Returns bool true if this datum is protected. false otherwise IsSameAs(MgGuardDisposable) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsSameAs(MgGuardDisposable pDef) Parameters pDef MgGuardDisposable Returns bool IsUsable(MgCoordinateSystemCatalog) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsable(MgCoordinateSystemCatalog pCatalog) Parameters pCatalog MgCoordinateSystemCatalog Returns bool IsValid() Gets whether this coordinate system datum is valid public bool IsValid() Returns bool true if this datum is valid. false otherwise SetCountryOrState(string) Sets the country or state for this datum public void SetCountryOrState(string sCountryOrState) Parameters sCountryOrState string (String/string) The country or state for this datum SetDescription(string) Sets the description of this datum public void SetDescription(string sDesc) Parameters sDesc string (String/string) The description of this datum SetDtCode(string) Sets the CS-Map coordinate system datum code for this datum public void SetDtCode(string sCode) Parameters sCode string (String/string) The CS-Map coordinate system datum code SetEllipsoid(string) Sets the ellipsoid for this datum public void SetEllipsoid(string sEllipsoid) Parameters sEllipsoid string (String/string) The ellipsoid SetEllipsoidDefinition(MgCoordinateSystemEllipsoid) Sets the ellipsoid definition for this datum public void SetEllipsoidDefinition(MgCoordinateSystemEllipsoid pDef) Parameters pDef MgCoordinateSystemEllipsoid (MgCoordinateSystemEllipsoid) The coordinate system ellipsoid SetEncryptMode(bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetEncryptMode(bool bIsEncrypted) Parameters bIsEncrypted bool SetEpsgCode(short) Sets the EPSG code for this datum public void SetEpsgCode(short epsgCode) Parameters epsgCode short (short/int) The EPSG code for this datum SetGroup(string) Sets the group for this datum public void SetGroup(string sGroup) Parameters sGroup string (String/string) The group for this datum SetLocation(string) Sets the location of this datum public void SetLocation(string sLoc) Parameters sLoc string (String/string) The location of this datum SetProtectMode(bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetProtectMode(bool bIsProtected) Parameters bIsProtected bool SetSource(string) Sets the source of this datum public void SetSource(string sSource) Parameters sSource string (String/string) The source of this datum"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemDatumDictionary.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemDatumDictionary.html",
    "title": "Class MgCoordinateSystemDatumDictionary | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemDatumDictionary Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Basic functionality for the datum dictionary public class MgCoordinateSystemDatumDictionary : MgCoordinateSystemDictionaryBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDictionaryBase MgCoordinateSystemDatumDictionary Implements IDisposable Inherited Members MgCoordinateSystemDictionaryBase.GetCatalog() MgCoordinateSystemDictionaryBase.GetDefaultFileName() MgCoordinateSystemDictionaryBase.GetFileName() MgCoordinateSystemDictionaryBase.SetFileName(string) MgCoordinateSystemDictionaryBase.GetPath() MgCoordinateSystemDictionaryBase.GetSize() MgCoordinateSystemDictionaryBase.Add(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Remove(string) MgCoordinateSystemDictionaryBase.Modify(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Get(string) MgCoordinateSystemDictionaryBase.Has(string) MgCoordinateSystemDictionaryBase.GetEnum() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDatum(string) Gets the coordinate system datum matching the specified name public MgCoordinateSystemDatum GetDatum(string sName) Parameters sName string Returns MgCoordinateSystemDatum The matching MgCoordinateSystemDatum object. NULL if not found NewDatum() Creates a new coordinate system datum public MgCoordinateSystemDatum NewDatum() Returns MgCoordinateSystemDatum The MgCoordinateSystemDatum object"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemDictionary.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemDictionary.html",
    "title": "Class MgCoordinateSystemDictionary | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemDictionary Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Basic functionality for the coordinate system dictionary public class MgCoordinateSystemDictionary : MgCoordinateSystemDictionaryBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDictionaryBase MgCoordinateSystemDictionary Implements IDisposable Inherited Members MgCoordinateSystemDictionaryBase.GetCatalog() MgCoordinateSystemDictionaryBase.GetDefaultFileName() MgCoordinateSystemDictionaryBase.GetFileName() MgCoordinateSystemDictionaryBase.SetFileName(string) MgCoordinateSystemDictionaryBase.GetPath() MgCoordinateSystemDictionaryBase.GetSize() MgCoordinateSystemDictionaryBase.Add(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Remove(string) MgCoordinateSystemDictionaryBase.Modify(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Get(string) MgCoordinateSystemDictionaryBase.Has(string) MgCoordinateSystemDictionaryBase.GetEnum() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinateSystem(string) Gets the coordinate system that matches the specified name public MgCoordinateSystem GetCoordinateSystem(string sName) Parameters sName string Returns MgCoordinateSystem The MgCoordinateSystem object. NULL if not found NewCoordinateSystem() Creates a new coordinate system public MgCoordinateSystem NewCoordinateSystem() Returns MgCoordinateSystem The MgCoordinateSystem object"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemDictionaryBase.html",
    "title": "Class MgCoordinateSystemDictionaryBase | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemDictionaryBase Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Basic functionality for all kinds of dictionaries public class MgCoordinateSystemDictionaryBase : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDictionaryBase Implements IDisposable Derived MgCoordinateSystemCategoryDictionary MgCoordinateSystemDatumDictionary MgCoordinateSystemDictionary MgCoordinateSystemEllipsoidDictionary MgCoordinateSystemGeodeticPathDictionary MgCoordinateSystemGeodeticTransformDefDictionary Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Add(MgGuardDisposable) Adds the specified definition public void Add(MgGuardDisposable pDefinition) Parameters pDefinition MgGuardDisposable (MgGuardDisposable) The definition to add. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Get(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGuardDisposable Get(string sName) Parameters sName string Returns MgGuardDisposable GetCatalog() Gets the associated coordinate system catalog public MgCoordinateSystemCatalog GetCatalog() Returns MgCoordinateSystemCatalog The associated coordinate system catalog GetDefaultFileName() Gets the default file name public string GetDefaultFileName() Returns string The default file name GetEnum() Gets the dictionary enumerator public MgCoordinateSystemEnum GetEnum() Returns MgCoordinateSystemEnum The dictionary enumerator GetFileName() Gets the file name of this dictionary public string GetFileName() Returns string The file name of this dictionary GetPath() Gets the path of this dictionary public string GetPath() Returns string The path of this dictionary GetSize() Gets the size of this dictionary public int GetSize() Returns int The size of this dictionary Has(string) Checks whether the definition of the specified name exists in this dictionary public bool Has(string sName) Parameters sName string Returns bool true if the definition exists. false otherwise Modify(MgGuardDisposable) Modifies the specified definition public void Modify(MgGuardDisposable pDefinition) Parameters pDefinition MgGuardDisposable (MgGuardDisposable) The definition to modify. Remove(string) Removes a definition by its specified name public void Remove(string sName) Parameters sName string (String/string) The name of the definition to remove SetFileName(string) Sets the file name of this dictionary public void SetFileName(string sFileName) Parameters sFileName string (String/string) The file name"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemDictionaryUtility.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemDictionaryUtility.html",
    "title": "Class MgCoordinateSystemDictionaryUtility | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemDictionaryUtility Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Basic functionality for all kinds of dictionaries public class MgCoordinateSystemDictionaryUtility : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDictionaryUtility Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateCategoryDictionary(string) Creates the category dictionary in the specified path public void CreateCategoryDictionary(string sDictPathName) Parameters sDictPathName string (String/string) The path to create the dictionary in CreateCoordsysDictionary(string) Creates the coordinate system dictionary in the specified path public void CreateCoordsysDictionary(string sDictPathName) Parameters sDictPathName string (String/string) The path to create the dictionary in CreateDatumDictionary(string) Creates the datum dictionary in the specified path public void CreateDatumDictionary(string sDictPathName) Parameters sDictPathName string (String/string) The path to create the dictionary in CreateEllipsoidDictionary(string) Creates the ellipsoid dictionary in the specified path public void CreateEllipsoidDictionary(string sDictPathName) Parameters sDictPathName string (String/string) The path to create the dictionary in Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCatalog() Gets the associated coordinate system catalog public MgCoordinateSystemCatalog GetCatalog() Returns MgCoordinateSystemCatalog The associated coordinate system catalog"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemEllipsoid.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemEllipsoid.html",
    "title": "Class MgCoordinateSystemEllipsoid | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemEllipsoid Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines a coordinate system ellipsoid public class MgCoordinateSystemEllipsoid : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemEllipsoid Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string Description { get; } Property Value string ElCode public string ElCode { get; } Property Value string Methods CreateClone() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystemEllipsoid CreateClone() Returns MgCoordinateSystemEllipsoid Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EccentricityToFlatteningRatio(double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double EccentricityToFlatteningRatio(double dEccent) Parameters dEccent double Returns double EquatorialRadiusFromPolarRadiusFlatteningRatio(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double EquatorialRadiusFromPolarRadiusFlatteningRatio(double dPolarRadius, double dFlatteningRatio) Parameters dPolarRadius double dFlatteningRatio double Returns double FlatteningRatioFromRadii(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double FlatteningRatioFromRadii(double dEquatorialRadius, double dPolarRadius) Parameters dEquatorialRadius double dPolarRadius double Returns double FlatteningRatioToEccentricity(double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double FlatteningRatioToEccentricity(double dFlat) Parameters dFlat double Returns double GetAge() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public short GetAge() Returns short GetCatalog() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystemCatalog GetCatalog() Returns MgCoordinateSystemCatalog GetDescription() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetDescription() Returns string GetEccentricity() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetEccentricity() Returns double GetElCode() Returns the CS-Map coordinate system ellipsoid code public string GetElCode() Returns string The CS-Map coordinate system ellipsoid code GetEpsgCode() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public short GetEpsgCode() Returns short GetEquatorialRadius() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetEquatorialRadius() Returns double GetFlatteningRatio() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetFlatteningRatio() Returns double GetFlatteningRatioMax() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetFlatteningRatioMax() Returns double GetFlatteningRatioMin() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetFlatteningRatioMin() Returns double GetGreatCircleAzimuth(double, double, double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetGreatCircleAzimuth(double dLongitude1, double dLatitude1, double dLongitude2, double dLatitude2) Parameters dLongitude1 double dLatitude1 double dLongitude2 double dLatitude2 double Returns double GetGreatCircleDistance(double, double, double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetGreatCircleDistance(double dLongitude1, double dLatitude1, double dLongitude2, double dLatitude2) Parameters dLongitude1 double dLatitude1 double dLongitude2 double dLatitude2 double Returns double GetGroup() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetGroup() Returns string GetPolarRadius() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetPolarRadius() Returns double GetRadiusMax() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetRadiusMax() Returns double GetRadiusMin() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetRadiusMin() Returns double GetSource() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetSource() Returns string IsEncrypted() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEncrypted() Returns bool IsLegalDescription(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsLegalDescription(string sDesc) Parameters sDesc string Returns bool IsLegalElCode(string) Checks whether the specified CS-Map coordinate system ellipsoid code is a legal one public bool IsLegalElCode(string sCode) Parameters sCode string Returns bool true if the given code is a legal one, false otherwise IsLegalFlatteningRatio(double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsLegalFlatteningRatio(double dFlat) Parameters dFlat double Returns bool IsLegalGroup(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsLegalGroup(string sGroup) Parameters sGroup string Returns bool IsLegalRadius(double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsLegalRadius(double dRadius) Parameters dRadius double Returns bool IsLegalSource(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsLegalSource(string sSource) Parameters sSource string Returns bool IsProtected() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsProtected() Returns bool IsSameAs(MgGuardDisposable) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsSameAs(MgGuardDisposable pDef) Parameters pDef MgGuardDisposable Returns bool IsUsable() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsable() Returns bool IsValid() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsValid() Returns bool PolarRadiusFromEquatorialRadiusFlatteningRatio(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double PolarRadiusFromEquatorialRadiusFlatteningRatio(double dEquatorialRadius, double dFlatteningRatio) Parameters dEquatorialRadius double dFlatteningRatio double Returns double SetDescription(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetDescription(string sDesc) Parameters sDesc string SetElCode(string) Sets the CS-Map coordinate system ellipsoid code for this ellipsoid public void SetElCode(string sCode) Parameters sCode string (String/string) The CS-Map coordinate system ellipsoid code SetEncryptMode(bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetEncryptMode(bool bIsEncrypted) Parameters bIsEncrypted bool SetEpsgCode(short) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetEpsgCode(short epsgCode) Parameters epsgCode short SetGroup(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetGroup(string sGroup) Parameters sGroup string SetProtectMode(bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetProtectMode(bool bIsProtected) Parameters bIsProtected bool SetRadii(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetRadii(double dEquatorialRadius, double dPolarRadius) Parameters dEquatorialRadius double dPolarRadius double SetSource(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetSource(string sSource) Parameters sSource string"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemEllipsoidDictionary.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemEllipsoidDictionary.html",
    "title": "Class MgCoordinateSystemEllipsoidDictionary | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemEllipsoidDictionary Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Basic functionality for the ellipsoid dictionary public class MgCoordinateSystemEllipsoidDictionary : MgCoordinateSystemDictionaryBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDictionaryBase MgCoordinateSystemEllipsoidDictionary Implements IDisposable Inherited Members MgCoordinateSystemDictionaryBase.GetCatalog() MgCoordinateSystemDictionaryBase.GetDefaultFileName() MgCoordinateSystemDictionaryBase.GetFileName() MgCoordinateSystemDictionaryBase.SetFileName(string) MgCoordinateSystemDictionaryBase.GetPath() MgCoordinateSystemDictionaryBase.GetSize() MgCoordinateSystemDictionaryBase.Add(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Remove(string) MgCoordinateSystemDictionaryBase.Modify(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Get(string) MgCoordinateSystemDictionaryBase.Has(string) MgCoordinateSystemDictionaryBase.GetEnum() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetEllipsoid(string) Gets the coordinate system ellipsoid matching the specified name public MgCoordinateSystemEllipsoid GetEllipsoid(string sName) Parameters sName string Returns MgCoordinateSystemEllipsoid A MgCoordinateSystemEllipsoid object. NULL if not found. NewEllipsoid() Creates a new coordinate system ellipsoid public MgCoordinateSystemEllipsoid NewEllipsoid() Returns MgCoordinateSystemEllipsoid A MgCoordinateSystemEllipsoid object"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemEnum.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemEnum.html",
    "title": "Class MgCoordinateSystemEnum | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemEnum Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgCoordinateSystemEnum : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemEnum Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddFilter(MgCoordinateSystemFilter) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void AddFilter(MgCoordinateSystemFilter pFilter) Parameters pFilter MgCoordinateSystemFilter CreateClone() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystemEnum CreateClone() Returns MgCoordinateSystemEnum Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Next(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgDisposableCollection Next(int ulCount) Parameters ulCount int Returns MgDisposableCollection NextDescription(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgStringCollection NextDescription(int ulCount) Parameters ulCount int Returns MgStringCollection NextName(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgStringCollection NextName(int ulCount) Parameters ulCount int Returns MgStringCollection Reset() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Reset() Skip(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Skip(int ulSkipCount) Parameters ulSkipCount int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemEnumInteger32.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemEnumInteger32.html",
    "title": "Class MgCoordinateSystemEnumInteger32 | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemEnumInteger32 Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgCoordinateSystemEnumInteger32 : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemEnumInteger32 Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddFilter(MgCoordinateSystemFilterInteger32) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void AddFilter(MgCoordinateSystemFilterInteger32 pFilter) Parameters pFilter MgCoordinateSystemFilterInteger32 CreateClone() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystemEnumInteger32 CreateClone() Returns MgCoordinateSystemEnumInteger32 Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Next(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgStringCollection Next(int ulCount) Parameters ulCount int Returns MgStringCollection Reset() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Reset() Skip(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Skip(int ulSkipCount) Parameters ulSkipCount int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemErrorCode.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemErrorCode.html",
    "title": "Class MgCoordinateSystemErrorCode | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemErrorCode Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines various error codes returned by the Coordinate System API public class MgCoordinateSystemErrorCode Inheritance object MgCoordinateSystemErrorCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AFFZERO Denominator of affine is zero. public const int AFFZERO = 251 Field Value int AZM Y axis azimuth specification is invalid. public const int AZM = 201 Field Value int AZMTH Great circle azimuth value is invalid. public const int AZMTH = 202 Field Value int CRTMM Invalid invalid cartesian useful range detected. public const int CRTMM = 242 Field Value int ConversionFailed A conversion operation failed public const int ConversionFailed = 1003 Field Value int DENRGN Invalid region code specified for Danish System 34/45 (1=J, 2=S, 3=B). public const int DENRGN = 253 Field Value int ELEVEL Value supplied for elevated ellipsoid is outside acceptable range public const int ELEVEL = 254 Field Value int GEOMM Invalid invalid geographic useful range detected. public const int GEOMM = 241 Field Value int HMISPHR Invalid hemisphere specification (+1 = north, -1 = south). public const int HMISPHR = 247 Field Value int INVDTM Invalid datum name specification detected. public const int INVDTM = 236 Field Value int INVELP Invalid ellipsoid name specification detected. public const int INVELP = 237 Field Value int INVPRJ Invalid projection key name detected. public const int INVPRJ = 235 Field Value int INVQUAD Invalid quadrant specification given. public const int INVQUAD = 240 Field Value int InitializationFailed An initialization operation failed public const int InitializationFailed = 1002 Field Value int InvalidArgument An argument supplied to an operation was invalid public const int InvalidArgument = 1005 Field Value int LAT Invalid latitude detected in definition. public const int LAT = 203 Field Value int LATEQU Latitudes of defining points are equal. public const int LATEQU = 204 Field Value int LLRNG Longitude range is too small. public const int LLRNG = 238 Field Value int LNG Invalid longitude detected in definition. public const int LNG = 205 Field Value int LNGEQU First defining point may not be on the equator. public const int LNGEQU = 206 Field Value int MAPSCL Invalid map scale value detected. public const int MAPSCL = 207 Field Value int MAX15 Eastern meridian is more than 15 degrees from the central meridian. public const int MAX15 = 249 Field Value int MEREQU Standard meridians are the same. public const int MEREQU = 208 Field Value int MRCAT Defining great circle is a parallel, try Mercator. public const int MRCAT = 209 Field Value int MSCOEF Invalid coefficient value specified. public const int MSCOEF = 210 Field Value int NOREF System must be referenced to a datum or an ellipsoid. public const int NOREF = 211 Field Value int NOTNRTH Standard paralells are not ordered correctly. public const int NOTNRTH = 212 Field Value int NRDATUM Non-earth system referenced to a datum. public const int NRDATUM = 252 Field Value int NRTHLAT Standard parallells are not ordered correctly. public const int NRTHLAT = 213 Field Value int NRTHPNT Point defining Y axis direction incorrectly specified. public const int NRTHPNT = 214 Field Value int NullArgument An argument supplied to an operation was null public const int NullArgument = 1004 Field Value int OBLQPOLE Invalid oblique pole specification. public const int OBLQPOLE = 250 Field Value int ORGLAT Invalid latitude value given for projection origin. public const int ORGLAT = 215 Field Value int ORGLNG Invalid longitude value given for projection origin. public const int ORGLNG = 216 Field Value int OSTN02 OSTN02.TXT grid shift file could not be located or opened with read access. public const int OSTN02 = 255 Field Value int OSTN97 OSTN97.TXT grid shift file could not be located or opened with read access. public const int OSTN97 = 253 Field Value int Ok The operation succeeded public const int Ok = 1000 Field Value int OutOfMemory The operation ran out of memory public const int OutOfMemory = 1001 Field Value int PLL90 Standard parallel location exceeds 90 degrees. public const int PLL90 = 217 Field Value int PLLED Standard parallels must be equidistant from poles. public const int PLLED = 243 Field Value int PLLEQU Standard parallel locations are the same. public const int PLLEQU = 218 Field Value int PLLLRG Standard parallel locations not inbetween poles. public const int PLLLRG = 219 Field Value int PLLREV Order of standard parallels incorrect. public const int PLLREV = 220 Field Value int PLLZERO Standard parallel location is zero. public const int PLLZERO = 221 Field Value int PLRLAT Origin latitude is not polar; use oblique form of projection. public const int PLRLAT = 244 Field Value int POLDD Poles are too far apart. public const int POLDD = 222 Field Value int POLDUP Poles are not sufficiently separated. public const int POLDUP = 223 Field Value int POLLAT Latitude of pole incorrectly specified. public const int POLLAT = 224 Field Value int POLLNG Longitude of pole incorrectly specified. public const int POLLNG = 225 Field Value int QUAD Invalid quad specification detected. public const int QUAD = 226 Field Value int RNGORD Longitude range values out of order. public const int RNGORD = 239 Field Value int SCLRED Invalid scale reduction value encountered. public const int SCLRED = 227 Field Value int SOTHLAT Standard parallels are not ordered correctly. public const int SOTHLAT = 228 Field Value int STDLAT Standard parallel is incorrectly specified. public const int STDLAT = 229 Field Value int STDLNG Standard meridian specification is invalid. public const int STDLNG = 230 Field Value int STDPLL Standard parallel specifications are invalid. public const int STDPLL = 231 Field Value int STDSOU Southern parallel is equal to or north of northern. public const int STDSOU = 232 Field Value int STDWEST Standard meridian must be east of the central meridian. public const int STDWEST = 233 Field Value int TMKRG0 Transverse Mercator Kruger formulation requested with non-zero origin latitude. public const int TMKRG0 = 256 Field Value int UNIT Invalid unit specification detected. public const int UNIT = 234 Field Value int USEPLR Origin latitude is polar; use polar form of projection. public const int USEPLR = 245 Field Value int USESW Central azimuth is 90, use the Swiss Oblique Mercator. public const int USESW = 248 Field Value int UTMZON Invalid value given for UTM zone number. public const int UTMZON = 246 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemFactory.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemFactory.html",
    "title": "Class MgCoordinateSystemFactory | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemFactory Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Supports the creation of MgCoordinateSystem objects based on a OpenGIS Well-Known Text (WKT) definition of the coordinate system. This class is the main entry point for accessing assorted classes and functionalities of the Coordinate System API public class MgCoordinateSystemFactory : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemFactory Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgCoordinateSystemFactory() Constructs an MgCoordinateSystemFactory object. public MgCoordinateSystemFactory() Methods ConvertCoordinateSystemCodeToWkt(string) Gets the matching coordinate system WKT based on the specified CS-Map coordinate system code public string ConvertCoordinateSystemCodeToWkt(string code) Parameters code string (String/string) The CS-Map coordinate system code Returns string The coordinate system WKT string that corresponds to the specified CS-Map ConvertEpsgCodeToWkt(int) Gets the matching coordinate system WKT based on the specified EPSG code public string ConvertEpsgCodeToWkt(int code) Parameters code int The EPSG code Returns string The coordinate system WKT string that corresponds to the specified EPSG code ConvertWktToCoordinateSystemCode(string) Gets the matching CS-Map coordinate system code based on the specified public string ConvertWktToCoordinateSystemCode(string wkt) Parameters wkt string (String/string) The coordinate system WKT string Returns string The CS-Map coordinate system code that corresponds to the specified WKT ConvertWktToEpsgCode(string) Gets the matching EPSG code based on the specified coordinate system WKT public int ConvertWktToEpsgCode(string wkt) Parameters wkt string (String/string) Returns int The EPSG code that corresponds to the specified coordinate system WKT string Create(string) Creates an MgCoordinateSystem instance given a definition of the coordinate system in OpenGIS Well-Known Text (WKT) public MgCoordinateSystem Create(string wkt) Parameters wkt string (String/string) A string defining the coordinate system in OpenGIS WKT format. Returns MgCoordinateSystem Returns an MgCoordinateSystem instance that corresponds to the specified WKT definition. CreateFromCode(string) Creates a MgCoordinateSystem object from the specified CS-Map coordinate system code public MgCoordinateSystem CreateFromCode(string code) Parameters code string (String/string) The CS-Map coordinate system code Returns MgCoordinateSystem The coordinate system Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnumerateCategories() Returns a list of the available coordinate system categories public MgStringCollection EnumerateCategories() Returns MgStringCollection A MgStringCollection containing the names of the available coordinate system categories EnumerateCoordinateSystems(string) Returns a MgBatchPropertyCollection containing the properties of each coordinate system under the specified category public MgBatchPropertyCollection EnumerateCoordinateSystems(string category) Parameters category string (String/string) The coordinate system category to enumerate Returns MgBatchPropertyCollection A MgBatchPropertyCollection containing the properties of each coordinate system under the specified category GenericGrid(MgCoordinateSystem, MgCoordinateSystem, bool) Manufactures generic grid object. A generic grid is one which simply draws isolines of one coordinate system (the Grid coordinate system) into the drawing space of another (the frame system). public MgCoordinateSystemGridBase GenericGrid(MgCoordinateSystem pGridCs, MgCoordinateSystem pFrameCs, bool bSetExceptionsOn) Parameters pGridCs MgCoordinateSystem The grid coordinate system. pFrameCs MgCoordinateSystem The frame coordinate system. bSetExceptionsOn bool true indicates that exceptions are to be thrown on all exceptional conditions. Returns MgCoordinateSystemGridBase Returns a disposable pointer to the abstract interface class from which the generic grid object (and all other grid objects) derive. object derive. Exceptions MgException MgOutOfMemoryException\"> GenericGrid(string, string, bool) Manufactures generic grid object. A generic grid is one which simply draws isolines of one coordinate system (the Grid coordinate system) into the drawing space of another (the frame system). public MgCoordinateSystemGridBase GenericGrid(string sGridCs, string sFrameCs, bool bSetExceptionsOn) Parameters sGridCs string The coordinate system code name of the grid coordinate system. sFrameCs string The coordinate system code name of the frame coordinate system. bSetExceptionsOn bool true indicates that exceptions are to be thrown on all exceptional conditions. Returns MgCoordinateSystemGridBase Returns a disposable pointer to the abstract interface class from which the generic grid object (and all other grid objects) derive. object derive. Exceptions MgException MgOutOfMemoryException\"> GetBaseLibrary() Gets name of the underlying coordinate system library public string GetBaseLibrary() Returns string Returns the name of the underlying coordinate system library GetCatalog() Gets the coordinate system catalog public MgCoordinateSystemCatalog GetCatalog() Returns MgCoordinateSystemCatalog Returns the MgCoordinateSystemCatalog GetMgrs(double, double, short, bool) Manufactures an MGRS grid object. The returned object is suitable only for use in simple coordinate <-> MGRS string calculations. public MgCoordinateSystemMgrs GetMgrs(double dEquatorialRadius, double dEccentricity, short nLetteringScheme, bool bSetExceptionsOn) Parameters dEquatorialRadius double Equatorial radius of the ellipsod upon which conversions to and from MGRS strings are to be based. dEccentricity double Eccentricity of the ellipsod upon which conversions to and from MGRS strings are to be based. nLetteringScheme short A value as defined in the MgCoordinateSystemMgrsLetteringScheme object which specifies the lettering scheme to be used on MGRS string conversions. bSetExceptionsOn bool true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason. Returns MgCoordinateSystemMgrs Returns a disposable pointer to an MgCoordinateSystemMgrs object which is suitable only for MGRS string conversions. Exceptions MgException MgOutOfMemoryException\"> GetMgrsDatum(string, short, bool) Manufactures an MGRS grid object. The returned object is suitable only for use in simple coordinate <-> MGRS string calculations. public MgCoordinateSystemMgrs GetMgrsDatum(string sDatumCode, short nLetteringScheme, bool bSetExceptionsOn) Parameters sDatumCode string Dictionary code name of the datum whose referenced ellipsoid is to be used for all conversions to and from MGRS strings. nLetteringScheme short A value as defined in the MgCoordinateSystemMgrsLetteringScheme object which specifies the lettering scheme to be used on MGRS string conversions. bSetExceptionsOn bool true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason. Returns MgCoordinateSystemMgrs Returns a disposable pointer to an MgCoordinateSystemMgrs object which is suitable only for MGRS string conversions. Exceptions MgException MgOutOfMemoryException\"> GetMgrsEllipsoid(string, short, bool) Manufactures an MGRS grid object. The returned object is suitable only for use in simple coordinate <-> MGRS string calculations. public MgCoordinateSystemMgrs GetMgrsEllipsoid(string sEllipsoidCode, short nLetteringScheme, bool bSetExceptionsOn) Parameters sEllipsoidCode string Dictionary code name of the ellipsoid upon which conversions to and from MGRS strings are to be based. nLetteringScheme short A value as defined in the MgCoordinateSystemMgrsLetteringScheme object which specifies the lettering scheme to be used on MGRS string conversions. bSetExceptionsOn bool true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason. Returns MgCoordinateSystemMgrs Returns a disposable pointer to an MgCoordinateSystemMgrs object which is suitable only for MGRS string conversions. Exceptions MgException MgOutOfMemoryException\"> GetTransform(MgCoordinateSystem, MgCoordinateSystem) Constructs a MgCoordinateSystemTransform that can be used to transform coordinates from the source coordinate system to the target coordinate system. public MgCoordinateSystemTransform GetTransform(MgCoordinateSystem pSource, MgCoordinateSystem pTarget) Parameters pSource MgCoordinateSystem (MgCoordinateSystem) The source coordinate system pTarget MgCoordinateSystem (MgCoordinateSystem) The target coordinate system Returns MgCoordinateSystemTransform The coordinate system transform that can be used to transform coordinates GridBoundary(MgCoordinate, MgCoordinate) Constructs a grid boundary object. public MgCoordinateSystemGridBoundary GridBoundary(MgCoordinate southwest, MgCoordinate northeast) Parameters southwest MgCoordinate The coordinates of the the southwest corner of a rectangular region which represents the grid region. This point MUST indeed be southwest of the coordinate provided by the northeast parameter. northeast MgCoordinate The coordinates of the the northeast corner of a rectangular region which represents the grid region. This point MUST indeed be northeast of the coordinate provided by the southwest parameter. Returns MgCoordinateSystemGridBoundary Returns the grid boundary in the form used by the grid/graticule sub-system. Exceptions MgException MgOutOfMemoryException\"> GridBoundary(MgPolygon) Constructs a grid boundary object. Externally, grid objects are in viewport coordinates and define the extents of the region within which a grid is to be drawn. Such objects are often simple rectangles, but his is not a requirement. public MgCoordinateSystemGridBoundary GridBoundary(MgPolygon boundary) Parameters boundary MgPolygon The grid boundary in the form of a MgPolygon with no interior rings. Returns MgCoordinateSystemGridBoundary Returns the boundary in the form used by the grid/graticule sub-system. Exceptions MgException MgOutOfMemoryException\"> GridSpecification() public virtual MgCoordinateSystemGridSpecification GridSpecification() Returns MgCoordinateSystemGridSpecification GridSpecification(double, double, int, double) Constructs a grid specification object with all specifications set to the values indicated by the supplied parameters. public MgCoordinateSystemGridSpecification GridSpecification(double increment, double tickIncrement, int unitCode, double curvePrecision) Parameters increment double The distance between grid lines of a grid or graticule. This value is used for both the easting and northing grid lines; and the value must be in the units specified by the unitCode parameter. tickIncrement double The distance between tick marks of a grid or graticule. This value is used for both the easting and northing tick marks; and the value must be in the units specified by the unitCode parameter. unitCode int One of the values defined by the MgCoordinateSystemUnitCode object which indicates the units in which the increment, &lt;c>tickIncrement, and curvePrecision parameters are specified. curvePrecision double In the units indicated by the unitCode parameter, the desired maximum distance between the true complex curve and the multi-segment approximation of the complex curve of any grid or graticule line generated using this specification. Returns MgCoordinateSystemGridSpecification A fully initialized grid specification object. GridSpecification(int, int) Constructs a grid specification object with all specifications set to the values indicated by the supplied parameters. public MgCoordinateSystemGridSpecification GridSpecification(int gridType, int gridLevel) Parameters gridType int A value defined by the MgCoordinateSystemGridSpecializationType object which indicates the Type of specialized grid desired. gridLevel int A value which indicates the density of the grid desired. The exact value of this parameter is dependent upon the value of the gridType argument. See Remarks below. Returns MgCoordinateSystemGridSpecification Returns a fully initialized grid specification structure. IsValid(string) Gets whether the specified coordinate system WKT string is a valid one public bool IsValid(string wkt) Parameters wkt string (String/string) Returns bool Returns true if the specified WKT is valid. Returns false otherwise MgrsGrid(MgCoordinateSystem, bool, short, bool) Manufactures an MGRS grid object which is suitable for generating an actual MGRS grid. public MgCoordinateSystemGridBase MgrsGrid(MgCoordinateSystem pFrameCs, bool bUseFrameDatum, short nLetteringScheme, bool bSetExceptionsOn) Parameters pFrameCs MgCoordinateSystem The frame coordinate system. bUseFrameDatum bool true causes the frame datum to be used for all geodetic calculations neccessary to generate the grid; otherwise WGS84 is assumed. nLetteringScheme short A value as defined in the MgCoordinateSystemMgrsLetteringScheme object which specifies the lettering scheme to be used on MGRS string conversions. bSetExceptionsOn bool true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason. This applies only to MGRS string conversions. Returns MgCoordinateSystemGridBase Returns a disposable pointer to the abstract interface class from which the MGRS grid object (and all other grid objects) derive. Exceptions MgException MgOutOfMemoryException\"> MgrsGrid(string, bool, short, bool) Manufactures an MGRS grid object which is suitable for generating an actual MGRS grid. public MgCoordinateSystemGridBase MgrsGrid(string sFrameCs, bool bUseFrameDatum, short nLetteringScheme, bool bSetExceptionsOn) Parameters sFrameCs string The dictionary code name of the frame coordinate system. bUseFrameDatum bool true causes the frame datum to be used for all geodetic calculations neccessary to generate the grid; otherwise WGS84 is assumed. nLetteringScheme short A value as defined in the MgCoordinateSystemMgrsLetteringScheme object which specifies the lettering scheme to be used on MGRS string conversions. bSetExceptionsOn bool true indicates that exceptions are to be thrown on coordinate conversions which fail for any reason. This applies only to MGRS string conversions. Returns MgCoordinateSystemGridBase Returns a disposable pointer to the abstract interface class from which the MGRS grid object (and all other grid objects) derive. Exceptions MgException MgOutOfMemoryException\">"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemFilter.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemFilter.html",
    "title": "Class MgCoordinateSystemFilter | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemFilter Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgCoordinateSystemFilter : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemFilter Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool IsFilteredOut(MgGuardDisposable) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsFilteredOut(MgGuardDisposable pDef) Parameters pDef MgGuardDisposable Returns bool"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemFilterInteger32.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemFilterInteger32.html",
    "title": "Class MgCoordinateSystemFilterInteger32 | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemFilterInteger32 Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgCoordinateSystemFilterInteger32 : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemFilterInteger32 Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool IsFilteredOut(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsFilteredOut(int nValue) Parameters nValue int Returns bool"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemFormatConverter.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemFormatConverter.html",
    "title": "Class MgCoordinateSystemFormatConverter | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemFormatConverter Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgCoordinateSystemFormatConverter : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemFormatConverter Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CodeToCode(int, string, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string CodeToCode(int nFormatSource, string sCodeSource, int nFormatDestination) Parameters nFormatSource int sCodeSource string nFormatDestination int Returns string CodeToDefinition(int, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystem CodeToDefinition(int nFormatSource, string sCodeSource) Parameters nFormatSource int sCodeSource string Returns MgCoordinateSystem CodeToWkt(int, string, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string CodeToWkt(int nFormatSource, string sCodeSource, int nWktFlavor) Parameters nFormatSource int sCodeSource string nWktFlavor int Returns string DefinitionToCode(MgCoordinateSystem, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string DefinitionToCode(MgCoordinateSystem pSource, int nFormatDestination) Parameters pSource MgCoordinateSystem nFormatDestination int Returns string DefinitionToWkt(MgCoordinateSystem, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string DefinitionToWkt(MgCoordinateSystem pSource, int nWktFlavor) Parameters pSource MgCoordinateSystem nWktFlavor int Returns string Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool IsCodeInDictionary(int, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsCodeInDictionary(int nFormat, string sCode) Parameters nFormat int sCode string Returns bool WktToCode(int, string, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string WktToCode(int nWktFlavor, string sWkt, int nFormatDestination) Parameters nWktFlavor int sWkt string nFormatDestination int Returns string WktToDefinition(int, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystem WktToDefinition(int nWktFlavor, string sWkt) Parameters nWktFlavor int sWkt string Returns MgCoordinateSystem"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformDefParams.html",
    "title": "Class MgCoordinateSystemGeodeticAnalyticalTransformDefParams | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticAnalyticalTransformDefParams Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class holds all parameters that are specific to analytical geodetic transformation methods, e.g. geocentric transformation, molodensky etc. public class MgCoordinateSystemGeodeticAnalyticalTransformDefParams : MgCoordinateSystemGeodeticTransformDefParams, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticTransformDefParams MgCoordinateSystemGeodeticAnalyticalTransformDefParams Implements IDisposable Inherited Members MgCoordinateSystemGeodeticTransformDefParams.IsValid() MgCoordinateSystemGeodeticTransformDefParams.IsProtected() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDeltaX() Gets the X delta of this instance public double GetDeltaX() Returns double The X delta of this instance GetDeltaY() Gets the Y delta of this instance public double GetDeltaY() Returns double The Y delta of this instance GetDeltaZ() Gets the Z delta of this instance public double GetDeltaZ() Returns double The Z delta of this instance GetRotateX() Gets the X rotation of this instance public double GetRotateX() Returns double The X rotation of this instance GetRotateY() Gets the Y rotation of this instance public double GetRotateY() Returns double The Y rotation of this instance GetRotateZ() Gets the Z rotation of this instance public double GetRotateZ() Returns double The Z rotation of this instance GetScale() Gets the scale of this instance public double GetScale() Returns double The scale of this instance GetTransformationMethod() Gets the transformation method of this instance public int GetTransformationMethod() Returns int The transformation method of this instance GetTranslateX() Gets the X translation of this instance public double GetTranslateX() Returns double The X translation of this instance GetTranslateY() Gets the Y translation of this instance public double GetTranslateY() Returns double The Y translation of this instance GetTranslateZ() Gets the Z translation of this instance public double GetTranslateZ() Returns double The Z translation of this instance SetDeltaX(double) Sets the X delta of this instance public void SetDeltaX(double deltaX) Parameters deltaX double (double) The X delta SetDeltaY(double) Sets the Y delta of this instance public void SetDeltaY(double deltaY) Parameters deltaY double (double) The Y delta SetDeltaZ(double) Sets the Z delta of this instance public void SetDeltaZ(double deltaZ) Parameters deltaZ double (double) The Z delta SetRotateX(double) Sets the X rotation of this instance public void SetRotateX(double rotateX) Parameters rotateX double (double) The X rotation SetRotateY(double) Sets the Y rotation of this instance public void SetRotateY(double rotateY) Parameters rotateY double (double) The Y rotation SetRotateZ(double) Sets the Z rotation of this instance public void SetRotateZ(double rotateZ) Parameters rotateZ double (double) The Z rotation SetScale(double) Sets the scale of this instance public void SetScale(double scale) Parameters scale double (double) The scale SetTransformationMethod(int) Sets the transformation method of this instance public void SetTransformationMethod(int analyticalMethodCode) Parameters analyticalMethodCode int (int) The transformation method SetTranslateX(double) Sets the X translation of this instance public void SetTranslateX(double translateX) Parameters translateX double (double) The X translation SetTranslateY(double) Sets the Y translation of this instance public void SetTranslateY(double translateY) Parameters translateY double (double) The Y translation SetTranslateZ(double) Sets the Z translation of this instance public void SetTranslateZ(double translateZ) Parameters translateZ double (double) The Z translation"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticAnalyticalTransformationMethod.html",
    "title": "Class MgCoordinateSystemGeodeticAnalyticalTransformationMethod | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticAnalyticalTransformationMethod Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class defines the currently supported transformation methods for analytical geodetic transformations as they can be read via the MgCoordinateSystemGeodeticTransformDefDictionary. That is, the constants defined below are only valid for MgCoordinateSystemGeodeticTransformDef instances of type MgCoordinateSystemGeodeticTransformDefType.Analytical. public class MgCoordinateSystemGeodeticAnalyticalTransformationMethod Inheritance object MgCoordinateSystemGeodeticAnalyticalTransformationMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AbridgedMolodensky Abridged Molodensky public const int AbridgedMolodensky = 8195 Field Value int Bursa Bursa public const int Bursa = 8199 Field Value int FourParameter Four Parameter public const int FourParameter = 8197 Field Value int Frame Frame public const int Frame = 8200 Field Value int Geocentric Geocentric public const int Geocentric = 8196 Field Value int Molodensky Molodensky public const int Molodensky = 8194 Field Value int MolodenskyBadekas Molodensky Badekas public const int MolodenskyBadekas = 8202 Field Value int None None public const int None = 0 Field Value int SevenParameter Seven Parameter public const int SevenParameter = 8201 Field Value int SixParameter Six Parameter public const int SixParameter = 8198 Field Value int ThreeParameter Three Parameter public const int ThreeParameter = 8193 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticDirection.html",
    "title": "Class MgCoordinateSystemGeodeticDirection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticDirection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class contains the constants for all current transformation definition types. public class MgCoordinateSystemGeodeticDirection Inheritance object MgCoordinateSystemGeodeticDirection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GeodeticDirectionError Use this value to indicate an error condition of some sort; especially useful when this type is the return value of a function. public const int GeodeticDirectionError = -1 Field Value int GeodeticDirectionForward Forward direction, the calculation the geodetic transformation definitions natural calculation. I.e. conversion from the definition's \"source\" datum to the \"target\" datum. public const int GeodeticDirectionForward = 1 Field Value int GeodeticDirectionInverse Inverse direction, i.e. conversion from the definition's \"target\" datum to the \"source\" datum. Often inmplies an iterative technique using the forward technique as the estimator. public const int GeodeticDirectionInverse = 2 Field Value int GeodeticDirectionNone Direction not been specified. This appears when the direction member has not bee set, or in the case where direction is not applicable, such as when the is the null transformation. public const int GeodeticDirectionNone = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticInterpolationTransformDefParams.html",
    "title": "Class MgCoordinateSystemGeodeticInterpolationTransformDefParams | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticInterpolationTransformDefParams Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class holds all parameters that are specific to grid-file based transformation. That is, where the actual datum shift value for a coordinate is determined by interpolating between grid point values as defined in the respective grid file(s). public class MgCoordinateSystemGeodeticInterpolationTransformDefParams : MgCoordinateSystemGeodeticTransformDefParams, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticTransformDefParams MgCoordinateSystemGeodeticInterpolationTransformDefParams Implements IDisposable Inherited Members MgCoordinateSystemGeodeticTransformDefParams.IsValid() MgCoordinateSystemGeodeticTransformDefParams.IsProtected() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetFallback() Returns the name of the transformation to fallback to in case the transformation using the defined grid files doesn't succeed. public string GetFallback() Returns string Returns the name of the fallback transformation. Can be empty if no such fallback transformation is defined. GetGridFiles() Returns an ordered, non-live collection MgCoordinateSystemGeodeticTransformGridFile elements currently used by this parameter object. Changing the collection does NOT have an affect on this parent parameter instance. Instead, any API client has to modify the collection and then set it back via SetGridFiles. The list returned can be an empty but will never be NULL. public MgDisposableCollection GetGridFiles() Returns MgDisposableCollection NewGridFile() Creates a new, empty MgCoordinateSystemGeodeticTransformGridFile object that can be added to the collection set via SetGridFiles. public MgCoordinateSystemGeodeticTransformGridFile NewGridFile() Returns MgCoordinateSystemGeodeticTransformGridFile Returns a new, unitialized MgCoordinateSystemGeodeticTransformGridFile instance The caller is resonsible for disposing the object if no longer needed. SetFallback(string) Sets the name of the transformation to fallback to, if the transformation could not be performed using the grid files defined. public void SetFallback(string fallbackTransformation) Parameters fallbackTransformation string Name of the transformation to fallback to. SetGridFiles(MgDisposableCollection) Sets the grid files to be used by this transformation. See the description for gridFiles parameter. public void SetGridFiles(MgDisposableCollection gridFiles) Parameters gridFiles MgDisposableCollection A (possibly empty) ordered(!) collection of MgCoordinateSystemGeodeticTransformGridFile objects. The order of the elements contained in the collection is important, because this instructs the underlying API in which order to use the grid files, e.g. in case of an overlap."
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams.html",
    "title": "Class MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class holds all parameters that are specific to the multiple regression transformation method. public class MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams : MgCoordinateSystemGeodeticTransformDefParams, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticTransformDefParams MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams Implements IDisposable Inherited Members MgCoordinateSystemGeodeticTransformDefParams.IsValid() MgCoordinateSystemGeodeticTransformDefParams.IsProtected() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoefficientHeight(int) Gets the coefficent height value of this instance at the specified index public double GetCoefficientHeight(int index) Parameters index int (int) The index which to retrieve the coefficient height value Returns double The coefficent height value of this instance at the specified index GetCoefficientLambda(int) Gets the coefficent lambda value of this instance at the specified index public double GetCoefficientLambda(int index) Parameters index int (int) The index which to retrieve the coefficient lambda value Returns double The coefficent lambda value of this instance at the specified index GetCoefficientPhi(int) Gets the coefficent phi value of this instance at the specified index public double GetCoefficientPhi(int index) Parameters index int (int) The index which to retrieve the coefficient phi value Returns double The coefficent phi value of this instance at the specified index GetDeltaHeight() Gets the delta height value of this instance public double GetDeltaHeight() Returns double The delta height value of this instance GetDeltaLambda() Gets the delta lambda value of this instance public double GetDeltaLambda() Returns double The delta lambda value of this instance GetDeltaPhi() Gets the delta phi value of this instance public double GetDeltaPhi() Returns double The delta phi value of this instance GetLambdaOffset() Gets the lambda offet value of this instance public double GetLambdaOffset() Returns double The lambda offet value of this instance GetNormalizationScale() Gets the normalization scale of this instance public double GetNormalizationScale() Returns double The normalization scale of this instance GetPhiOffset() Gets the phi offset value of this instance public double GetPhiOffset() Returns double The phi offset value of this instance GetTestLambda() Gets the test lambda value of this instance public double GetTestLambda() Returns double The test lambda value of this instance GetTestPhi() Gets the test phi value of this instance public double GetTestPhi() Returns double The test phi value of this instance GetTransformationMethod() Gets the transformation method of this instance public int GetTransformationMethod() Returns int The transformation method of this instance GetValidation() Gets the validation value of this instance public double GetValidation() Returns double The validation value of this instance SetCoefficientHeight(int, double) Sets the coefficent height value of this instance at the specified index public void SetCoefficientHeight(int index, double value) Parameters index int (int) The index which to set the coefficient height value value double (double) The coefficient height value SetCoefficientLambda(int, double) Sets the coefficent lambda value of this instance at the specified index public void SetCoefficientLambda(int index, double value) Parameters index int (int) The index which to set the coefficient lambda value value double (double) The coefficient lambda value SetCoefficientPhi(int, double) Sets the coefficent phi value of this instance at the specified index public void SetCoefficientPhi(int index, double value) Parameters index int (int) The index which to set the coefficient phi value value double (double) The coefficient phi value SetDeltaHeight(double) Sets the delta height value of this instance public void SetDeltaHeight(double deltaHeight) Parameters deltaHeight double (double) The delta height value SetDeltaLambda(double) Sets the delta lambda value of this instance public void SetDeltaLambda(double deltaLambda) Parameters deltaLambda double (double) The delta lambda value SetDeltaPhi(double) Sets the delta phi value of this instance public void SetDeltaPhi(double deltaPhi) Parameters deltaPhi double (double) The delta phi value SetLambdaOffset(double) Sets the lambda offet value of this instance public void SetLambdaOffset(double lambdaOffset) Parameters lambdaOffset double (double) The lambda offet value SetNormalizationScale(double) Sets the normalization scale of this instance public void SetNormalizationScale(double NormalizationScale) Parameters NormalizationScale double (double) The normalization scale SetPhiOffset(double) Sets the phi offset value of this instance public void SetPhiOffset(double phiOffset) Parameters phiOffset double (double) The phi offset value SetTestLambda(double) Sets the test lambda value of this instance public void SetTestLambda(double testLambda) Parameters testLambda double (double) The test lambda value SetTestPhi(double) Sets the test phi value of this instance public void SetTestPhi(double testPhi) Parameters testPhi double (double) The test phi value SetTransformationMethod(int) Sets the transformation method of this instance public void SetTransformationMethod(int mulRegTransformationMethod) Parameters mulRegTransformationMethod int (int) The transformation method SetValidation(double) Sets the validation value of this instance public void SetValidation(double validation) Parameters validation double (double) The validation value"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod.html",
    "title": "Class MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class defines the currently supported transformation methods for multiple regression geodetic transformations as they can be read via the MgCoordinateSystemGeodeticTransformDefDictionary. That is, the constants defined below are only valid for MgCoordinateSystemGeodeticTransformDef instances of type MgCoordinateSystemGeodeticTransformDefType.MultipleRegression. public class MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod Inheritance object MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GeneralPolynomialEpsg General Polynomial EPSG public const int GeneralPolynomialEpsg = 20482 Field Value int MultipleRegression Multiple Regression public const int MultipleRegression = 20481 Field Value int None None public const int None = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticPath.html",
    "title": "Class MgCoordinateSystemGeodeticPath | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticPath Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll A geodetic (transformation) path allows to concatenate multiple geodetic transformations. For example, converting between 2 datums cannot be achieved by doing 1 datum shift only but requires to do 1 or more datums shifts in between. public class MgCoordinateSystemGeodeticPath : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticPath Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Accuracy public double Accuracy { get; } Property Value double Description public string Description { get; } Property Value string Group public string Group { get; } Property Value string Source public string Source { get; } Property Value string SourceDatum public string SourceDatum { get; } Property Value string TargetDatum public string TargetDatum { get; } Property Value string Methods CreateClone() Creates a deep clone of this geodetic path. That is, the cloned object will also have its geodetic path element information cloned. public MgCoordinateSystemGeodeticPath CreateClone() Returns MgCoordinateSystemGeodeticPath Returns a new MgCoordinateSystemGeodeticPath object that is an exact clone of this MgCoordinateSystemGeodeticPath instance. The caller is responsible for disposing the object being returned. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAccuracy() Gets the accuracy of this geodetic path public double GetAccuracy() Returns double The accuracy of this geodetic path GetDescription() Gets the description of this geodetic path public string GetDescription() Returns string The description of this geodetic path GetEpsgCode() Gets the EPSG code of of this geodetic path public int GetEpsgCode() Returns int The EPSG code of this geodetic path GetEpsgVariant() Gets the EPSG variant of this geodetic path public int GetEpsgVariant() Returns int The EPSG variant of this geodetic path GetGroup() Gets the group of this geodetic path public string GetGroup() Returns string The group of this geodetic path GetIsReversible() Gets whether this geodetic path is reversible public bool GetIsReversible() Returns bool true if this geodetic path is reversible GetPathElements() Returns an ordered collection of MgCoordinateSystemGeodeticPathElement objects that form this geodetic transformation path. See remarks. public MgDisposableCollection GetPathElements() Returns MgDisposableCollection Returns a (possibly empty) collection of MgCoordinateSystemGeodeticPathElement instances. The caller is responsible for disposing the collection being returned. GetPathName() Gets the path name of this geodetic path public string GetPathName() Returns string The path name of this geodetic path GetSource() Gets the source of this geodetic path public string GetSource() Returns string The source of this geodetic path GetSourceDatum() Gets the source datum of this geodetic path public string GetSourceDatum() Returns string The source datum of this geodetic path GetTargetDatum() Gets the target datum of this geodetic path public string GetTargetDatum() Returns string The target datum of this geodetic path IsProtected() Gets whether this geodetic path is protected public bool IsProtected() Returns bool true if this geodetic path is protected. false otherwise IsValid() Gets whether this geodetic path is valid public bool IsValid() Returns bool true if this geodetic path is valid. false otherwise NewPathElement() Creates a new, unitialized MgCoordinateSystemGeodeticPathElement instance. Calling this method does not affect the underlying dictionary file. Typically, an API client will retrieve new objects through this method so they can be added to the collection of path elements that can be set via SetPathElements. public MgCoordinateSystemGeodeticPathElement NewPathElement() Returns MgCoordinateSystemGeodeticPathElement Returns a new MgCoordinateSystemGeodeticPathElement instance. The caller is responsible for disposing the object being returned. SetAccuracy(double) Sets the accuracy of this geodetic path public void SetAccuracy(double accuracy) Parameters accuracy double (String/string) The accuracy SetDescription(string) Sets the description of this geodetic path public void SetDescription(string sDescription) Parameters sDescription string (String/string) The description SetEpsgCode(int) Sets the EPSG code of of this geodetic path public void SetEpsgCode(int epsgCode) Parameters epsgCode int (int) the EPSG code SetEpsgVariant(int) Sets the EPSG variant of of this geodetic path public void SetEpsgVariant(int epsgVariant) Parameters epsgVariant int (int) the EPSG variant SetGroup(string) Sets the group of this geodetic path public void SetGroup(string sGroup) Parameters sGroup string (String/string) The group SetIsReversible(bool) Sets whether this geodetic path is reversible public void SetIsReversible(bool isReversible) Parameters isReversible bool (boolean/bool) true if reversible. false otherwise SetPathElements(MgDisposableCollection) Sets the individual transformation steps that form this geodetic transformation path. public void SetPathElements(MgDisposableCollection pathElements) Parameters pathElements MgDisposableCollection SetPathName(string) Sets the path name of this geodetic path public void SetPathName(string sName) Parameters sName string (String/string) The path name SetSource(string) Sets the source of this geodetic path public void SetSource(string sSource) Parameters sSource string (String/string) The source SetSourceDatum(string) Sets the source datum of this geodetic path public void SetSourceDatum(string sSourceDatum) Parameters sSourceDatum string (String/string) The source datum SetTargetDatum(string) Sets the target datum of this geodetic path public void SetTargetDatum(string sTargetDatum) Parameters sTargetDatum string (String/string) The target datum"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticPathDictionary.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticPathDictionary.html",
    "title": "Class MgCoordinateSystemGeodeticPathDictionary | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticPathDictionary Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll The MgCoordinateSystemGeodeticPathDictionary provides access to all geodetic transformation path definitions as defined in the dictionary file this instance reads from / writes to. public class MgCoordinateSystemGeodeticPathDictionary : MgCoordinateSystemDictionaryBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDictionaryBase MgCoordinateSystemGeodeticPathDictionary Implements IDisposable Inherited Members MgCoordinateSystemDictionaryBase.GetCatalog() MgCoordinateSystemDictionaryBase.GetDefaultFileName() MgCoordinateSystemDictionaryBase.GetFileName() MgCoordinateSystemDictionaryBase.SetFileName(string) MgCoordinateSystemDictionaryBase.GetPath() MgCoordinateSystemDictionaryBase.GetSize() MgCoordinateSystemDictionaryBase.Add(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Remove(string) MgCoordinateSystemDictionaryBase.Modify(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Get(string) MgCoordinateSystemDictionaryBase.Has(string) MgCoordinateSystemDictionaryBase.GetEnum() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetGeodeticPath(string) Returns the geodetic path object where the name is equal to the parameter pathName. The caller is responsible for disposing the object. public MgCoordinateSystemGeodeticPath GetGeodeticPath(string pathName) Parameters pathName string The name of the geodetic path to look up in the dictionary. Must not be an empty string. Returns MgCoordinateSystemGeodeticPath Return the geodetic path if found. Otherwise NULL. NewGeodeticPath() Creates a new, empty geodetic path object that has to be filled by an API client. This method does not create a new entry in the dictionary. The caller is responsible for disposing the object being returned. public MgCoordinateSystemGeodeticPath NewGeodeticPath() Returns MgCoordinateSystemGeodeticPath Return a new, in-memory geodetic path object. No content is written to disk when this method executes."
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticPathElement.html",
    "title": "Class MgCoordinateSystemGeodeticPathElement | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticPathElement Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll A geodetic transformation path element describes a single transformation step within a series of concatenated steps that eventually form a geodetic (transformation) path. public class MgCoordinateSystemGeodeticPathElement : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticPathElement Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetIsInversed() Checks whether this path element is inversed public bool GetIsInversed() Returns bool true if this element is inversed. false otherwise GetTransformName() Gets the name of the transform in this element public string GetTransformName() Returns string The name of the transform in this element IsProtected() Checks whether this path element is protected public bool IsProtected() Returns bool true if this element is protected. false otherwise IsValid() Checks whether this path element is valid public bool IsValid() Returns bool true if this element is valid. false otherwise SetIsInversed(bool) Sets whether this path element is inversed public void SetIsInversed(bool bInversed) Parameters bInversed bool (boolean/bool) true if inversed, false if not inversed SetTransformName(string) Sets the name of the transform in this element public void SetTransformName(string name) Parameters name string (String/string) The name of the transform"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformDefParams.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformDefParams.html",
    "title": "Class MgCoordinateSystemGeodeticStandaloneTransformDefParams | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticStandaloneTransformDefParams Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class (indirectly) describes the parameters of a geodetic transformation method that's built into the transformation engine. Hence, it does not allow for setting any parameters. Only the well known code can be set/get via (Set/Get)TransformationMethod. public class MgCoordinateSystemGeodeticStandaloneTransformDefParams : MgCoordinateSystemGeodeticTransformDefParams, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticTransformDefParams MgCoordinateSystemGeodeticStandaloneTransformDefParams Implements IDisposable Inherited Members MgCoordinateSystemGeodeticTransformDefParams.IsValid() MgCoordinateSystemGeodeticTransformDefParams.IsProtected() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TransformationMethod public int TransformationMethod { get; set; } Property Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetTransformationMethod() Returns the code of the well known geodetic transformation method. Can only be one of the constants defined in MgCoordinateSystemGeodeticStandaloneTransformationMethod (except for None). public int GetTransformationMethod() Returns int Returns the code of the well known geodetic transformation method. SetTransformationMethod(int) Sets the code of the well-known geodetic transformation method. Can only be one of the constants defined in MgCoordinateSystemGeodeticStandaloneTransformationMethod (except for None). public void SetTransformationMethod(int builtInTransformationMethod) Parameters builtInTransformationMethod int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformationMethod.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticStandaloneTransformationMethod.html",
    "title": "Class MgCoordinateSystemGeodeticStandaloneTransformationMethod | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticStandaloneTransformationMethod Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class defines all transformation methods that are built into the transformation engine. That is, when creating such a geodetic transformation the API client cannot specify any parameters because they are well known and are available to the engine already. The constants defined below are only valid for MgCoordinateSystemGeodeticTransformDef instances of type MgCoordinateSystemGeodeticTransformDefType.Standalone. public class MgCoordinateSystemGeodeticStandaloneTransformationMethod Inheritance object MgCoordinateSystemGeodeticStandaloneTransformationMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields None Default constant available for programming convenience only. No specific geodetic transformation can be created from this constant. public const int None = 0 Field Value int NullX Describes a geodetic transformation that is actually a NOOP, i.e. the 2 datums to be transformed between are considered equal. public const int NullX = 4097 Field Value int Wgs72 Describes the WGS72 to WGS84 geodetic transformation as published by the DMA (DMA TR 8350.2-B). All required parameters are known and built-in. public const int Wgs72 = 4098 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDef.html",
    "title": "Class MgCoordinateSystemGeodeticTransformDef | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticTransformDef Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An instance of this class describes a geodetic transformation with all its parameters as it is defined in the dictionary file. The actual transformation operation is performed by the MgCoordinateSystemGeodeticTransformation objects that's being returned by the CreateTransformation method. public class MgCoordinateSystemGeodeticTransformDef : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticTransformDef Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateClone() Creates a deep clone of this geodetic transformation. That is, the cloned object will also have its extended parameters cloned. public MgCoordinateSystemGeodeticTransformDef CreateClone() Returns MgCoordinateSystemGeodeticTransformDef Returns a new MgCoordinateSystemGeodeticTransformDef object that is an exact clone of this MgCoordinateSystemGeodeticTransformDef instance. The caller is responsible for disposing the object being returned. CreateTransformation(bool) Creates a new MgCoordinateSystemGeodeticTransformation object that can be used to perform the actual transformation this transformation definition describes. This method will fail with an exception, if this is the NONE transformation. public MgCoordinateSystemGeodeticTransformation CreateTransformation(bool createInverse) Parameters createInverse bool If true, the MgCoordinateSystemGeodeticTransformation being returned will perform the inverse of the transformation as defined in the dictionary file. That is, it will convert from the actual target datum to the source datum. Note, that not all transformations are invertible. This method will fail with an exception then. If false, this method will return a MgCoordinateSystemGeodeticTransformation instance that performs the default forward datum transformation. Returns MgCoordinateSystemGeodeticTransformation Returns the MgCoordinateSystemGeodeticTransformation that performs the actual datum transformation as described by this definition instance. The caller is reponsible for disposing the object being returned. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAccuracy() Gets the accuracy value of this instance public double GetAccuracy() Returns double The accuracy value of this instance GetConvergenceValue() Gets the convergence value of this instance public double GetConvergenceValue() Returns double The convergence value of this instance GetDescription() Gets the description of this instance public string GetDescription() Returns string The description of this instance GetEpsgCode() Gets the EPSG code of this instance public int GetEpsgCode() Returns int The EPSG code of this instance GetEpsgVariation() Gets the EPSG variation of this instance public int GetEpsgVariation() Returns int The EPSG variation of this instance GetErrorValue() Gets the error value of this instance public double GetErrorValue() Returns double The error value of this instance GetGroup() Gets the group of this instance public string GetGroup() Returns string The group of this instance GetInverseSupported() Gets whether the inverse is supported public bool GetInverseSupported() Returns bool true if this inverse is supported. false otherwise GetMaxIterations() Gets the maximum iterations of this instance public int GetMaxIterations() Returns int The maximum iterations of this instance GetParameters() Returns the extended parameters object valid for this transformation definition. See remarks. Depending on the type returned by GetTransformDefType(), this method returns one of the following: public MgCoordinateSystemGeodeticTransformDefParams GetParameters() Returns MgCoordinateSystemGeodeticTransformDefParams Returns the extended parameters (or NULL) object for this transformation object. The caller is responsible for disposing the object being returned. See remarks. GetRangeMaxLatitude() Gets the maximum range latitude of this instance public double GetRangeMaxLatitude() Returns double The maximum range latitude of this instance GetRangeMaxLongitude() Gets the maximum range longitude of this instance public double GetRangeMaxLongitude() Returns double The maximum range longitude of this instance GetRangeMinLatitude() Gets the minimum range latitude of this instance public double GetRangeMinLatitude() Returns double The minimum range latitude of this instance GetRangeMinLongitude() Gets the minimum range longitude of this instance public double GetRangeMinLongitude() Returns double The minimum range longitude of this instance GetSource() Gets the source of this instance public string GetSource() Returns string The source of this instance GetSourceDatum() Gets the source datum of this instance public string GetSourceDatum() Returns string The source datum of this instance GetTargetDatum() Gets the target datum of this instance public string GetTargetDatum() Returns string The target datum of this instance GetTransformDefType() Returns the type of this geodetic transformation (as defined by MgCoordinateSystemGeodeticTransformDefType). The type defines the parameters that are being returned by the GetParameters method. public int GetTransformDefType() Returns int GetTransformName() Gets the transform name of this instance public string GetTransformName() Returns string The transform name of this instance IsProtected() Gets whether this instance is protected public bool IsProtected() Returns bool true if this instance is protected. false otherwise IsValid() Gets whether this instance is valid public bool IsValid() Returns bool true if this instance is valid. false otherwise SetAccuracy(double) Sets the accuracy value of this instance public void SetAccuracy(double accuracy) Parameters accuracy double (double) The accuracy value SetConvergenceValue(double) Sets the convergence value of this instance public void SetConvergenceValue(double convergenceValue) Parameters convergenceValue double (double) The convergence value SetDescription(string) Sets the description of this instance public void SetDescription(string description) Parameters description string (String/string) The description SetEpsgCode(int) Sets the EPSG code of this instance public void SetEpsgCode(int epsgCode) Parameters epsgCode int (int) The EPSG code SetEpsgVariation(int) Sets the EPSG variation of this instance public void SetEpsgVariation(int epsgVariation) Parameters epsgVariation int (int) The EPSG variation SetErrorValue(double) Sets the error value of this instance public void SetErrorValue(double errorValue) Parameters errorValue double (double) The error value SetGroup(string) Sets the group of this instance public void SetGroup(string group) Parameters group string (String/string) The group SetInverseSupported(bool) Sets whether the inverse is supported public void SetInverseSupported(bool inverseSupported) Parameters inverseSupported bool (boolean/bool) true if the inverse is supported. false otherwise SetMaxIterations(int) Sets the maximum iterations of this instance public void SetMaxIterations(int maxIterations) Parameters maxIterations int (int) The maximum iterations SetParameters(MgCoordinateSystemGeodeticTransformDefParams) Sets the extended parameters for this transformation. public void SetParameters(MgCoordinateSystemGeodeticTransformDefParams parameters) Parameters parameters MgCoordinateSystemGeodeticTransformDefParams The parameters to set for this transformation. The object passed in, has to be of the same type as it has been returned by GetParameters. Otherwise, an exception will be thrown. This parameter must not be NULL. Creating a transformation that is supposed to do nothing except for allowing to switch from one datum to another (that is considered to be equal), requires to create standalone transformation of type NullX. SetRangeMaxLatitude(double) Sets the maximum range latitude of this instance public void SetRangeMaxLatitude(double maxLat) Parameters maxLat double (double) The maximum range latitude SetRangeMaxLongitude(double) Sets the maximum range longitude of this instance public void SetRangeMaxLongitude(double maxLong) Parameters maxLong double (double) The maximum range longitude SetRangeMinLatitude(double) Sets the minimum range latitude of this instance public void SetRangeMinLatitude(double minLat) Parameters minLat double (double) The minimum range latitude SetRangeMinLongitude(double) Sets the minimum range longitude of this instance public void SetRangeMinLongitude(double minLong) Parameters minLong double (double) The minimum range longitude SetSource(string) Sets the source of this instance public void SetSource(string source) Parameters source string (String/string) The source SetSourceDatum(string) Sets the source datum of this instance public void SetSourceDatum(string datumKey) Parameters datumKey string (String/string) The source datum SetTargetDatum(string) Sets the target datum of this instance public void SetTargetDatum(string datumKey) Parameters datumKey string (String/string) The target datum SetTransformName(string) Sets the transform name of this instance public void SetTransformName(string name) Parameters name string (String/string) The transform name"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefDictionary.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefDictionary.html",
    "title": "Class MgCoordinateSystemGeodeticTransformDefDictionary | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticTransformDefDictionary Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll The MgCoordinateSystemGeodeticTransformDefDictionary provides access to all geodetic transformation definitions as defined in the dictionary file this instance reads from / writes to. public class MgCoordinateSystemGeodeticTransformDefDictionary : MgCoordinateSystemDictionaryBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemDictionaryBase MgCoordinateSystemGeodeticTransformDefDictionary Implements IDisposable Inherited Members MgCoordinateSystemDictionaryBase.GetCatalog() MgCoordinateSystemDictionaryBase.GetDefaultFileName() MgCoordinateSystemDictionaryBase.GetFileName() MgCoordinateSystemDictionaryBase.SetFileName(string) MgCoordinateSystemDictionaryBase.GetPath() MgCoordinateSystemDictionaryBase.GetSize() MgCoordinateSystemDictionaryBase.Add(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Remove(string) MgCoordinateSystemDictionaryBase.Modify(MgGuardDisposable) MgCoordinateSystemDictionaryBase.Get(string) MgCoordinateSystemDictionaryBase.Has(string) MgCoordinateSystemDictionaryBase.GetEnum() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetGeodeticTransformationDef(string) Returns the geodetic transformation definition object where the name is equal to the parameter pathName. The caller is responsible for disposing the object. public MgCoordinateSystemGeodeticTransformDef GetGeodeticTransformationDef(string transformationName) Parameters transformationName string The name of the geodetic transformation to look up in the dictionary. Must not be an empty string. Returns MgCoordinateSystemGeodeticTransformDef Return the geodetic transformation if found. Otherwise NULL. NewGeodeticTransformationDef(int) Creates a new, empty geodetic transformation definition object that has to be filled by an API client. This method does not create a new entry in the dictionary. The caller is responsible for disposing the object being returned. public MgCoordinateSystemGeodeticTransformDef NewGeodeticTransformationDef(int transformationDefType) Parameters transformationDefType int The type of the geodetic transformation to create. This must be a constant value as defined in MgCoordinateSystemGeodeticTransformDefType (except for None) Returns MgCoordinateSystemGeodeticTransformDef Return a new, in-memory geodetic transformation definition object. No content is written to disk when this method executes."
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefParams.html",
    "title": "Class MgCoordinateSystemGeodeticTransformDefParams | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticTransformDefParams Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Common base class for all geodetic transformation parameters. public class MgCoordinateSystemGeodeticTransformDefParams : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticTransformDefParams Implements IDisposable Derived MgCoordinateSystemGeodeticAnalyticalTransformDefParams MgCoordinateSystemGeodeticInterpolationTransformDefParams MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams MgCoordinateSystemGeodeticStandaloneTransformDefParams Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool IsProtected() Checks, whether this transformation object is protected, i.e. any attempts to change its content will fail. All definitions contained in the dictionaries at compile time are protected by default. public bool IsProtected() Returns bool Returns true, if this parameter object is read-only. Otherwise false. IsValid() Checks, whether this transformation parameter object's content is considered (technically) valid. That is, even if this method returns true, the transformation might still fail due to other reasons, e.g. a grid file does not exist. public bool IsValid() Returns bool Returns true, if this parameter object is considered valid. Otherwise false."
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformDefType.html",
    "title": "Class MgCoordinateSystemGeodeticTransformDefType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticTransformDefType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class contains the constants for all current transformation definition types. public class MgCoordinateSystemGeodeticTransformDefType Inheritance object MgCoordinateSystemGeodeticTransformDefType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Analytical The transformation definition describes an analytical transformation where the transformation between the source and the target datum is defined through a formular that's fed with up to 10 parameters. public const int Analytical = 2 Field Value int Interpolation The transformation definition describes a transformation that uses grid files to calculate the actual datum shift for a given coordinate by interpolating between given grid points. public const int Interpolation = 3 Field Value int MultipleRegression The transformation definition describes a transformation that uses a multiple regression calculation to perform the actual datum shift. public const int MultipleRegression = 4 Field Value int None Default 0 constant available for programming convenience only. It does not describe a specific geodetic transformation type. public const int None = 0 Field Value int Standalone The transformation definition describes a built-in transformation. That is, that transformation is well-known and cannot be parameterized because the information is available to the transformation engine. public const int Standalone = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFile.html",
    "title": "Class MgCoordinateSystemGeodeticTransformGridFile | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticTransformGridFile Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll The MgCoordinateSystemGeodeticInterpolationTransformDefParams parameter class requires instances of MgCoordinateSystemGeodeticTransformGridFile to be set via its SetGridFiles method. An MgCoordinateSystemGeodeticTransformGridFile object simply describes the grid file rather than containing the (grid file) information itself. public class MgCoordinateSystemGeodeticTransformGridFile : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticTransformGridFile Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetFileFormat() Returns the format of the grid file as a constant value as defined in MgCoordinateSystemGeodeticTransformGridFileFormat. public int GetFileFormat() Returns int Returns the file format as an INT32 value. GetFileName() Gets the physical file name public string GetFileName() Returns string The physical file name GetIsInverseDirection() When used within a geodetic transformation that defines a source and a target datum, this flag instructs the API whether to consider the grid file's content to be the inverse of the actual conversion direction. public bool GetIsInverseDirection() Returns bool Returns true, if the grid file provides information to transform between 2 datums in the inversed direction to what's actually specified in the parent transformation definition. IsProtected() Gets whether this file is protected public bool IsProtected() Returns bool true if this file is protected. false otherwise IsValid() Gets whether this file is valid public bool IsValid() Returns bool true if this file is valid. false otherwise SetFileFormat(int) Sets this file's format. Has to be constant as defined by MgCoordinateSystemGeodeticTransformGridFileFormat. public void SetFileFormat(int gridFileFormat) Parameters gridFileFormat int SetFileName(string) Sets the physical file name public void SetFileName(string fileName) Parameters fileName string (String/string) The physical file name SetIsInverseDirection(bool) Sets the flag, whether this grid file carries the information to perform a datum transformation in the inversed direction to what's specified in the parent transformation definition. public void SetIsInverseDirection(bool isInverseDirection) Parameters isInverseDirection bool"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformGridFileFormat.html",
    "title": "Class MgCoordinateSystemGeodeticTransformGridFileFormat | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticTransformGridFileFormat Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This class contains the constants for all currently supported grid file formats. public class MgCoordinateSystemGeodeticTransformGridFileFormat Inheritance object MgCoordinateSystemGeodeticTransformGridFileFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ATS77 ATS77 public const int ATS77 = 6 Field Value int GEOCON GEOCON public const int GEOCON = 10 Field Value int NADCON NADCON public const int NADCON = 3 Field Value int NTv1 NTv1 public const int NTv1 = 1 Field Value int NTv2 NTv2 public const int NTv2 = 2 Field Value int None None public const int None = 0 Field Value int OST02 OST02 public const int OST02 = 8 Field Value int OST15 OST15 public const int OST15 = 9 Field Value int OST97 OST97 public const int OST97 = 7 Field Value int PAR PAR public const int PAR = 5 Field Value int RGF RGF public const int RGF = 4 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformation.html",
    "title": "Class MgCoordinateSystemGeodeticTransformation | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticTransformation Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An instance of this class allow a caller do perform a geodetic transformation (datum shift). That is, this class does not operate on coordinate system level, but rather on datum level. public class MgCoordinateSystemGeodeticTransformation : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGeodeticTransformation Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBursaWolfeTransformBwScale() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetBursaWolfeTransformBwScale() Returns double GetBursaWolfeTransformRotationX() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetBursaWolfeTransformRotationX() Returns double GetBursaWolfeTransformRotationY() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetBursaWolfeTransformRotationY() Returns double GetBursaWolfeTransformRotationZ() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetBursaWolfeTransformRotationZ() Returns double GetBwScaleMax() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetBwScaleMax() Returns double GetBwScaleMin() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetBwScaleMin() Returns double GetGeodeticTransformationMethod() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public int GetGeodeticTransformationMethod() Returns int GetMaxOffset() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetMaxOffset() Returns double GetMaxRotation() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetMaxRotation() Returns double GetOffsetX() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetOffsetX() Returns double GetOffsetY() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetOffsetY() Returns double GetOffsetZ() Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public double GetOffsetZ() Returns double GetSource() Gets the source datum of this geodetic transformation public MgCoordinateSystemDatum GetSource() Returns MgCoordinateSystemDatum The source datum of this geodetic transformation GetTarget() Gets the target datum of this geodetic transformation public MgCoordinateSystemDatum GetTarget() Returns MgCoordinateSystemDatum The target datum of this geodetic transformation IsLegalBwScale(double) Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public bool IsLegalBwScale(double dBwScale) Parameters dBwScale double Returns bool IsLegalOffset(double) Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public bool IsLegalOffset(double dOffset) Parameters dOffset double Returns bool IsLegalRotation(double) Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public bool IsLegalRotation(double dRotation) Parameters dRotation double Returns bool SetBursaWolfeTransform(double, double, double, double) Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public void SetBursaWolfeTransform(double dRotationX, double dRotationY, double dRotationZ, double dBwScale) Parameters dRotationX double dRotationY double dRotationZ double dBwScale double SetGeodeticTransformationMethod(int) Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public void SetGeodeticTransformationMethod(int nGeodeticTransformationMethod) Parameters nGeodeticTransformationMethod int SetOffset(double, double, double) Obsolete. Use MgCoordinateSystemGeodeticTransformDef and MgCoordinateSystemGeodeticTransformDefParams (plus derived classes) instead. public void SetOffset(double x, double y, double z) Parameters x double y double z double SetSourceAndTarget(MgCoordinateSystemDatum, MgCoordinateSystemDatum) Sets the source and target datums of this geodetic transformation public void SetSourceAndTarget(MgCoordinateSystemDatum pSource, MgCoordinateSystemDatum pTarget) Parameters pSource MgCoordinateSystemDatum (MgCoordinateSystemDatum) The source datum pTarget MgCoordinateSystemDatum (MgCoordinateSystemDatum) The target datum Shift(MgCoordinate) Shift this datum to the specified coordinate public void Shift(MgCoordinate pLonLat) Parameters pLonLat MgCoordinate (MgCoordinate) The coordinate to shift to Shift(double, double) Shift this datum to the specified longitude/latitude coordinate public MgCoordinate Shift(double dLongitude, double dLatitude) Parameters dLongitude double (double) The longitude coordinate to shift to dLatitude double (double) The longitude coordinate to shift to Returns MgCoordinate Shift(double, double, double) Shift this datum to the specified longitude/latitude/z coordinate public MgCoordinate Shift(double dLongitude, double dLatitude, double dZ) Parameters dLongitude double (double) The longitude coordinate to shift to dLatitude double (double) The longitude coordinate to shift to dZ double (double) The Z coordinate to shift to Returns MgCoordinate"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGeodeticTransformationMethod.html",
    "title": "Class MgCoordinateSystemGeodeticTransformationMethod | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGeodeticTransformationMethod Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines the type of a geodetic transformation method public class MgCoordinateSystemGeodeticTransformationMethod Inheritance object MgCoordinateSystemGeodeticTransformationMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AGD66 AGD66<->GDA94 via Grid Files public const int AGD66 = 10 Field Value int AGD84 AGD84<->GDA94 via Grid Files public const int AGD84 = 14 Field Value int ATS77 ATS77<->NAD83 via Grid Files public const int ATS77 = 16 Field Value int Bursa Use the Bursa/Wolfe to convert to WGS84, default to Molodensky if the necessary parameters are not present. public const int Bursa = 3 Field Value int CHENYX Swiss Ch1903 to CH1903+ public const int CHENYX = 26 Field Value int CSRS NAD83<->CSRS Via Grid Files. public const int CSRS = 19 Field Value int DHDN DHDN<->ETRF89 via Grid Files public const int DHDN = 23 Field Value int ED50 ED50 <--> ETRF89 via Grid Files public const int ED50 = 22 Field Value int ETRF89 Is ETRF89, no shift required public const int ETRF89 = 24 Field Value int FourParameter Four Parameter Transformation public const int FourParameter = 13 Field Value int GDA94 Is GDA94, no shift required. public const int GDA94 = 17 Field Value int Geocentric Geocentric Translation public const int Geocentric = 25 Field Value int HPGN Use the NADCOM algorithm, but use the HPGN data files, to shift the coordinates to NAD83, then consider the result to be WGS84 coordinates without any further datum shift public const int HPGN = 8 Field Value int Lclgrf Local Geodetic Reference System public const int Lclgrf = 99 Field Value int MReg Use the Multiple Regression Transformation formulas. If such a definition is not available, default to the Bursa/Wolfe Seven Parameter Transformation. public const int MReg = 2 Field Value int Molodensky Use the Molodensky transformation to convert to WGS84 public const int Molodensky = 1 Field Value int NAD27 Use the NADCON or Canadian National Transformation emulation as appropriate to convert to NAD83, and consider the result to be WGS84 coordinates. public const int NAD27 = 4 Field Value int NAD83 Consider the coordinates to be WGS84 coordinates already, no shift is to be performed. public const int NAD83 = 5 Field Value int NZGD2K Is NZGD2000, no shift required. public const int NZGD2K = 18 Field Value int NZGD49 NZGD49<->NZGD2K via Grid File public const int NZGD49 = 15 Field Value int None None public const int None = 0 Field Value int RGF93 NTF<->RGF93 via Grid File public const int RGF93 = 21 Field Value int SevenParameter Seven Parameter Transformation public const int SevenParameter = 9 Field Value int SixParameter Six Parameter Transformation public const int SixParameter = 12 Field Value int TOKYO TOKYO<->JGD2k via Grid Files public const int TOKYO = 20 Field Value int ThreeParameter Three Parameter Transformation - Obsolete technique that is kept around for backward compatibility public const int ThreeParameter = 11 Field Value int WGS72 Use an internal formula to convert to WGS84 public const int WGS72 = 7 Field Value int WGS84 The coordinates are WGS84 coordinates already, no datum shift is required public const int WGS84 = 6 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridBase.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridBase.html",
    "title": "Class MgCoordinateSystemGridBase | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridBase Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridBase : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridBase Implements IDisposable Derived MgCoordinateSystemMgrs Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApproxGridLineMemoryUsage(MgCoordinateSystemGridSpecification) Calculates the approximate amount of memory required to generated grid lines for this instance public int ApproxGridLineMemoryUsage(MgCoordinateSystemGridSpecification specification) Parameters specification MgCoordinateSystemGridSpecification (MgCoordinateSystemGridSpecification) The grid specification Returns int The approximate memory usage in bytes ApproxGridRegionMemoryUsage(MgCoordinateSystemGridSpecification) Calculates the approximate amount of memory required to generated grid regions for this instance public int ApproxGridRegionMemoryUsage(MgCoordinateSystemGridSpecification specification) Parameters specification MgCoordinateSystemGridSpecification (MgCoordinateSystemGridSpecification) The grid specification Returns int The approximate memory usage in bytes ApproxGridTickMemoryUsage(MgCoordinateSystemGridSpecification) Calculates the approximate amount of memory required to generated grid ticks for this instance public int ApproxGridTickMemoryUsage(MgCoordinateSystemGridSpecification specification) Parameters specification MgCoordinateSystemGridSpecification (MgCoordinateSystemGridSpecification) The grid specification Returns int The approximate memory usage in bytes AreExceptionsOn() Gets whether exceptions are enabled for this instance public bool AreExceptionsOn() Returns bool true if exceptions are enabled. false otherwise Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBoundary() public virtual MgCoordinateSystemGridBoundary GetBoundary() Returns MgCoordinateSystemGridBoundary GetConvergenceAngle(MgCoordinate) Gets the convergence angle for the given location public double GetConvergenceAngle(MgCoordinate location) Parameters location MgCoordinate (MgCoordinate) The location Returns double The convergence angle for the given location GetGridLines(MgCoordinateSystemGridSpecification) Gets the grid lines for this grid instance for the given grid specification public MgCoordinateSystemGridLineCollection GetGridLines(MgCoordinateSystemGridSpecification specification) Parameters specification MgCoordinateSystemGridSpecification (MgCoordinateSystemGridSpecification) The grid specification Returns MgCoordinateSystemGridLineCollection The collection of grid lines GetGridRegions(MgCoordinateSystemGridSpecification) Gets the grid regions for this grid instance for the given grid specification public MgCoordinateSystemGridRegionCollection GetGridRegions(MgCoordinateSystemGridSpecification specification) Parameters specification MgCoordinateSystemGridSpecification (MgCoordinateSystemGridSpecification) The grid specification Returns MgCoordinateSystemGridRegionCollection The collection of grid regions GetGridTicks(MgCoordinateSystemGridSpecification) Generates grid ticks for the grid boundary. public MgCoordinateSystemGridTickCollection GetGridTicks(MgCoordinateSystemGridSpecification specification) Parameters specification MgCoordinateSystemGridSpecification (MgCoordinateSystemGridSpecification) The grid specification Returns MgCoordinateSystemGridTickCollection The collection of grid ticks for the grid boundary GetLastError() Returns the last error code public int GetLastError() Returns int The last error code GetProjectiveGridScale(MgCoordinate) Gets the projective grid scale for the given location public double GetProjectiveGridScale(MgCoordinate location) Parameters location MgCoordinate (MgCoordinate) The location Returns double The projective grid scale for the given location GetSpecializationType() Gets the specialized type of this grid instance. Value can be any value from MgCoordinateSystemGridSpecializationType public int GetSpecializationType() Returns int The specialized type of this grid instance (MgCoordinateSystemGridSpecializationType) ResetLastError() Resets the last error code public void ResetLastError() SetBoundary(MgCoordinateSystemGridBoundary) Sets the boundary of this grid instance public void SetBoundary(MgCoordinateSystemGridBoundary pGridBoundary) Parameters pGridBoundary MgCoordinateSystemGridBoundary (MgCoordinateSystemGridBoundary) The boundary SetExceptionsOn(bool) Enables or disables exceptions for this instance public void SetExceptionsOn(bool bOn) Parameters bOn bool (boolean/bool) true to enable exceptions. false to disable exceptions SetGridLineExceptionLevel(int) Sets the amount of memory at which an exception will be thrown if generating a grid line collection that would exceed the specified value in memory usage public int SetGridLineExceptionLevel(int memoryUseMax) Parameters memoryUseMax int (int) The memory limit in bytes Returns int The new memory limit SetGridRegionExceptionLevel(int) Sets the amount of memory at which an exception will be thrown if generating a grid region collection that would exceed the specified value in memory usage public int SetGridRegionExceptionLevel(int memoryUseMax) Parameters memoryUseMax int (int) The memory limit in bytes Returns int The new memory limit SetGridTickExceptionLevel(int) Sets the amount of memory at which an exception will be thrown if generating a grid tick collection that would exceed the specified value in memory usage public int SetGridTickExceptionLevel(int memoryUseMax) Parameters memoryUseMax int (int) The memory limit in bytes Returns int The new memory limit"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridBoundary.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridBoundary.html",
    "title": "Class MgCoordinateSystemGridBoundary | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridBoundary Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridBoundary : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridBoundary Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBoundary() public virtual MgPolygon GetBoundary() Returns MgPolygon SetBoundaryExtents(MgCoordinate, MgCoordinate) Sets the extents of this grid boundary public void SetBoundaryExtents(MgCoordinate southwest, MgCoordinate northeast) Parameters southwest MgCoordinate (MgCoordinate) The southwest coordinate of the extents northeast MgCoordinate (MgCoordinate) The northeast coordinate of the extents SetBoundaryExtents(MgPolygon) Sets the extents of this grid boundary public void SetBoundaryExtents(MgPolygon boundary) Parameters boundary MgPolygon (MgPolygon) The extents of this grid boundary"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridLine.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridLine.html",
    "title": "Class MgCoordinateSystemGridLine | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridLine Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridLine : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridLine Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetGridOrientation() public virtual int GetGridOrientation() Returns int GetRealValue() public virtual double GetRealValue() Returns double GetSegment(int) Gets the line segment at the specified index public MgLineString GetSegment(int index) Parameters index int (int) The index at which to retrieve the line segment Returns MgLineString The MgLineString at the specified index GetSegmentCollection() public virtual MgLineStringCollection GetSegmentCollection() Returns MgLineStringCollection SetSegmentCollection(MgLineStringCollection) Sets the entire line segment collection public void SetSegmentCollection(MgLineStringCollection segmentCollection) Parameters segmentCollection MgLineStringCollection (MgLineStringCollection) The line segment collection"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridLineCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridLineCollection.html",
    "title": "Class MgCoordinateSystemGridLineCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridLineCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridLineCollection : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridLineCollection Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clear() Removes all grid lines from this collection public void Clear() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetItem(int) public virtual MgCoordinateSystemGridLine GetItem(int index) Parameters index int Returns MgCoordinateSystemGridLine IndexOf(int, double) public virtual int IndexOf(int gridOrientation, double gridValue) Parameters gridOrientation int gridValue double Returns int RemoveAt(int) Removes the grid line at the specified index public void RemoveAt(int index) Parameters index int (int) The index to remove"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridOrientation.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridOrientation.html",
    "title": "Class MgCoordinateSystemGridOrientation | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridOrientation Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An enumeration of the supported values for the m_Orientation member of several objects related to grids and graticules. This value is used to qualify objects which are of the \"iso\" type. I.e. a grid line is referred to as an isoline as it is the locus of points which have a specific value for either the easting or the northing. It is this value which indicates which. Thus, a grid line which is classified as having an \"EastWest\" orientation will be a isoline which is the locus of points which share a common easting value, and the \"m_Value\" element of that object will be an easting value. Note that in this example, the line is typically a vertical line. public class MgCoordinateSystemGridOrientation Inheritance object MgCoordinateSystemGridOrientation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EastWest The object represents a constant easting value. public const byte EastWest = 1 Field Value byte None Not specified yet, initialize to this value. public const byte None = 0 Field Value byte NorthSouth The object represents a constant northing value. public const byte NorthSouth = 2 Field Value byte Unknown Indicates the failure of an algorithm or other problem. public const byte Unknown = 3 Field Value byte"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridRegion.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridRegion.html",
    "title": "Class MgCoordinateSystemGridRegion | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridRegion Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridRegion : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridRegion Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetEastLine() public virtual MgLineStringCollection GetEastLine() Returns MgLineStringCollection GetLabel() Gets the label for this region public string GetLabel() Returns string The label for this region GetNorthLine() public virtual MgLineStringCollection GetNorthLine() Returns MgLineStringCollection GetRegionBoundary() public virtual MgPolygon GetRegionBoundary() Returns MgPolygon GetRegionCenter() public virtual MgCoordinate GetRegionCenter() Returns MgCoordinate GetSouthLine() public virtual MgLineStringCollection GetSouthLine() Returns MgLineStringCollection GetWestLine() public virtual MgLineStringCollection GetWestLine() Returns MgLineStringCollection"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridRegionCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridRegionCollection.html",
    "title": "Class MgCoordinateSystemGridRegionCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridRegionCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridRegionCollection : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridRegionCollection Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clear() Removes all grid regions from this collection public void Clear() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetItem(int) public virtual MgCoordinateSystemGridRegion GetItem(int index) Parameters index int Returns MgCoordinateSystemGridRegion RemoveAt(int) Removes the grid region at the specified index public void RemoveAt(int index) Parameters index int (int) The index to remove"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridSpecializationType.html",
    "title": "Class MgCoordinateSystemGridSpecializationType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridSpecializationType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An enumeration of the various types of specialized grids/graticules currently supported. A specialized grid is one for which specific standards exist to which the results of this feature are compliant with. A generic grid is a simple non-standardized grid of a coordinate system drawn in a viewport based on another coordinate system. The values assigned are intended to support grouping standardized grids with similar features and is currently entirely arbitrary. Using a numeric literal instead of thes names of the defined constants is a sure way to write code that will get broken in the future. public class MgCoordinateSystemGridSpecializationType Inheritance object MgCoordinateSystemGridSpecializationType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Generic Generic grid of a specified coordinate system; may be geographic or projected. public const int Generic = 1 Field Value int MGRS Specialized grid: MGRS (Military Grid Reference System) public const int MGRS = 17 Field Value int None Not specified yet, initialize to this value. public const int None = 0 Field Value int USNG Specialized grid: USNG (United States National Grid) public const int USNG = 18 Field Value int Unknown Indicates the failure of an algorithm or other problem. public const int Unknown = 65366 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridSpecification.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridSpecification.html",
    "title": "Class MgCoordinateSystemGridSpecification | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridSpecification Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridSpecification : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridSpecification Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCurvePrecision() public virtual double GetCurvePrecision() Returns double GetEastingBase() public virtual double GetEastingBase() Returns double GetEastingIncrement() public virtual double GetEastingIncrement() Returns double GetNorthingBase() public virtual double GetNorthingBase() Returns double GetNorthingIncrement() public virtual double GetNorthingIncrement() Returns double GetTickEastingIncrement() public virtual double GetTickEastingIncrement() Returns double GetTickNorthingIncrement() public virtual double GetTickNorthingIncrement() Returns double GetUnitCode() public virtual int GetUnitCode() Returns int GetUnitType() public virtual int GetUnitType() Returns int IsConsistent() public virtual bool IsConsistent() Returns bool IsSameAs(MgCoordinateSystemGridSpecification) Determines if two MgCoordinateSystemGridSpecification objects are the same. public bool IsSameAs(MgCoordinateSystemGridSpecification specification) Parameters specification MgCoordinateSystemGridSpecification (MgCoordinateSystemGridSpecification) The second object to which the host object is to be compared to. Returns bool Returns true if the objects are identical. SetCurvePrecision(double) Sets the desired precision of complex curve approximations. public void SetCurvePrecision(double curvePrecision) Parameters curvePrecision double (double) The desired maximum distance between an approximation of a complex curve and the true curve. SetGridBase(double, double) Sets the easting and northing base values. public void SetGridBase(double eastingBase, double northingBase) Parameters eastingBase double (double) The base value to be used in calculating the easting grid and tick values. northingBase double (double) The base value to be used in calculating the northing grid and tick values. SetGridIncrement(double, double) Sets the easting and northing grid line increment values. public void SetGridIncrement(double eastingIncrement, double northingIncrement) Parameters eastingIncrement double (double) The distance between easting grid lines. northingIncrement double (double) The distance between northing grid lines. SetMaxCurvePoints(int) Sets the maximum number of points to generate for a complex curve approximation. public void SetMaxCurvePoints(int maxCurvePoints) Parameters maxCurvePoints int (INT32) The desired maximum number of points to be generated for a complex curve approximation. Default is 511. SetTickIncrements(double, double) Sets the easting and northing tick increment values. public void SetTickIncrements(double eastingIncrement, double northingIncrement) Parameters eastingIncrement double (double) The distance between easting tick marks. northingIncrement double (double) The distance between northing tick marks. SetUnits(int, int) Sets the units used to define the desired grid. public void SetUnits(int unitCode, int unitType) Parameters unitCode int (int) One of the integer values defined in the MgCoordinateSystemUnitCode object which indicates the units used to define the grid parameters. unitType int (int) One of the integer values defined in the MgCoordinateSystemUnitType object which indicates the type of units (linear vs angular) used to define the grid parameters."
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridTick.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridTick.html",
    "title": "Class MgCoordinateSystemGridTick | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridTick Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridTick : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridTick Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDirectionVector() Gets the tick's direction vector public MgCoordinate GetDirectionVector() Returns MgCoordinate The tick's direction vector GetIsOnGridLine() Gets whether this grid tick is on a grid line public bool GetIsOnGridLine() Returns bool true if this grid tick is on a grid line. false otherwise GetPosition() Gets the tick position public MgCoordinate GetPosition() Returns MgCoordinate The tick position GetTickOrientation() Gets the tick orientation (see MgCoordinateSystemGridOrientation for valid values) public int GetTickOrientation() Returns int The tick orientation GetValue() Gets the tick value public double GetValue() Returns double The tick value"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemGridTickCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemGridTickCollection.html",
    "title": "Class MgCoordinateSystemGridTickCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemGridTickCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. public class MgCoordinateSystemGridTickCollection : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridTickCollection Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clear() Removes all grid ticks from this collection public void Clear() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetItem(int) public virtual MgCoordinateSystemGridTick GetItem(int index) Parameters index int Returns MgCoordinateSystemGridTick RemoveAt(int) Removes the grid tick at the specified index public void RemoveAt(int index) Parameters index int (int) The index to remove"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemMathComparator.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemMathComparator.html",
    "title": "Class MgCoordinateSystemMathComparator | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemMathComparator Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll A mathematical comparator used to detemerine equality between two different coordinate systems, datums or ellipsoids public class MgCoordinateSystemMathComparator : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemMathComparator Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCompareInternalDatumOldParameters() Returns the current comparison behavior for datums of this MgCoordinateSystemMathComparator object. If true (default), this comparator compares geodetic transformation information it might find for a datum object. If false, this comparison step is skipped. public bool GetCompareInternalDatumOldParameters() Returns bool Same(MgGuardDisposable, MgGuardDisposable) Determines if the two given definitions are the same public bool Same(MgGuardDisposable pDefinition1, MgGuardDisposable pDefinition2) Parameters pDefinition1 MgGuardDisposable (MgGuardDisposable) The first definition to compare pDefinition2 MgGuardDisposable (MgGuardDisposable) The second definiton to compare Returns bool true if both definitions are the same. false otherwise SameCoordinateSystem(MgCoordinateSystem, MgCoordinateSystem) Determines if the two given coordinate system are the same public bool SameCoordinateSystem(MgCoordinateSystem pDefinition1, MgCoordinateSystem pDefinition2) Parameters pDefinition1 MgCoordinateSystem (MgCoordinateSystem) The first definition to compare pDefinition2 MgCoordinateSystem (MgCoordinateSystem) The second definiton to compare Returns bool true if both definitions are the same. false otherwise SameDatum(MgCoordinateSystemDatum, MgCoordinateSystemDatum) Determines if the two given datums are the same public bool SameDatum(MgCoordinateSystemDatum pDefinition1, MgCoordinateSystemDatum pDefinition2) Parameters pDefinition1 MgCoordinateSystemDatum (MgCoordinateSystemDatum) The first definition to compare pDefinition2 MgCoordinateSystemDatum (MgCoordinateSystemDatum) The second definiton to compare Returns bool true if both definitions are the same. false otherwise SameEllipsoid(MgCoordinateSystemEllipsoid, MgCoordinateSystemEllipsoid) Determines if the two given ellipsoids are the same public bool SameEllipsoid(MgCoordinateSystemEllipsoid pDefinition1, MgCoordinateSystemEllipsoid pDefinition2) Parameters pDefinition1 MgCoordinateSystemEllipsoid (MgCoordinateSystemEllipsoid) The first definition to compare pDefinition2 MgCoordinateSystemEllipsoid (MgCoordinateSystemEllipsoid) The second definiton to compare Returns bool true if both definitions are the same. false otherwise SetCompareInternalDatumOldParameters(bool) Disables or enables the comparison of any integral geodetic transformation information when comparing datums. By default, this class compares any geodetic transformation information it finds. If set to false, the MgCoordinateSystemMathComparator::SameDatum method only compares ellipsoid information and any other, non-transformation related, properties. public void SetCompareInternalDatumOldParameters(bool arg0) Parameters arg0 bool"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemMeasure.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemMeasure.html",
    "title": "Class MgCoordinateSystemMeasure | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemMeasure Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Provides operations for measuring the distance between 2 coordinates and the azimuth of 2 coordinates as well as calculating a coordinate position given an initial coordinate, an azimuth, and a distance. public class MgCoordinateSystemMeasure : MgMeasure, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgMeasure MgCoordinateSystemMeasure Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Envelope public MgEnvelope Envelope { get; } Property Value MgEnvelope Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAzimuth(MgCoordinate, MgCoordinate) Computes the angle with respect to north of a vector formed by two coordinates. public double GetAzimuth(MgCoordinate coord1, MgCoordinate coord2) Parameters coord1 MgCoordinate (MgCoordinate) An MgCoordinate in coordinate system units that specifies the first coordinate. coord2 MgCoordinate (MgCoordinate) An MgCoordinate in coordinate system units that specifies the second coordinate. Returns double Returns the azimuth (Angle with respect to North) of the vector formed by coord1 and coord2. Exceptions MgException MgCoordinateSystemMeasureFailedException\"> GetAzimuth(double, double, double, double) Computes the angle with respect to the north of a vector formed by two coordinates. public double GetAzimuth(double x1, double y1, double x2, double y2) Parameters x1 double (double) The x value in coordinate system units of the first coordinate. y1 double (double) The y value in coordinate system units of the first coordinate. x2 double (double) The x value in coordinate system units of the second coordinate. y2 double (double) The y value in coordinate system units of the second coordinate. Returns double Returns the azimuth (Angle with respect to the North) of the vector formed by (lon1, lat1) and (lon2, lat2). Exceptions MgException MgCoordinateSystemMeasureFailedException\"> GetCoordinate(MgCoordinate, double, double) Computes a coordinate given a distance along a vector that is defined by a starting coordinate and an azimuth (Angle with respect to the North). public MgCoordinate GetCoordinate(MgCoordinate coord, double azimuth, double distance) Parameters coord MgCoordinate (MgCoordinate) An MgCoordinate object in coordinate system units that represents the start of the vector. azimuth double (double) An azimuth (Angle with respect to the North) that defines the direction of the vector. distance double (double) The distance along the vector to the desired coordinate in meters. Returns MgCoordinate Returns an MgCoordinate object containing the x and y values in coordinate system units of a coordinate that lies the given distance along the vector. Exceptions MgException MgCoordinateSystemMeasureFailedException\"> GetCoordinate(double, double, double, double) Computes a coordinate a given distance along a vector that is defined by a starting coordinate and an azimuth (Angle with respect to the North). public MgCoordinate GetCoordinate(double xStart, double yStart, double azimuth, double distance) Parameters xStart double (double) The x value in coordinate system units of the starting coordinate. yStart double (double) The y value in coordinate system units of the starting coordinate. azimuth double (double) An azimuth (Angle with respect to the North) that defines the direction of the vector. distance double (double) The distance along the vector to the desired coordinate in meters. Returns MgCoordinate Returns an MgCoordinate object containing the x and y value in ecoordinate system units of a coordinate that lies the given distance along the vector. Exceptions MgException MgCoordinateSystemMeasureFailedException\"> GetDistance(MgCoordinate, MgCoordinate) Computes the distance between two coordinates. public double GetDistance(MgCoordinate coord1, MgCoordinate coord2) Parameters coord1 MgCoordinate (MgCoordinate) An MgCoordinate object that specifies the first coordinate. coord2 MgCoordinate (MgCoordinate) An MgCoordinate object that specifies the second coordinate. Returns double Returns the distance between coord1 and coord2 as a double in meters. Exceptions MgException MgCoordinateSystemMeasureFailedException\"> GetDistance(double, double, double, double) Computes the distance between two coordinates. public double GetDistance(double x1, double y1, double x2, double y2) Parameters x1 double (double) The x value in coordinate system units of the first coordinate. y1 double (double) The y value in coordinate system units of the first coordinate. x2 double (double) The x value in coordinate system units of the second coordinate. y2 double (double) The y value in coordinate system units of the second coordinate. Returns double Returns the distance between (x1, y1) and (x2, y2) as a double in meters. Exceptions MgException MgCoordinateSystemMeasureFailedException\"> GetEnvelope() Computes the envelope of the MgCoordinateSystemMeasure object. public MgEnvelope GetEnvelope() Returns MgEnvelope Exceptions MgException MgCoordinateSystemMeasureFailedException\">"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemMgrs.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemMgrs.html",
    "title": "Class MgCoordinateSystemMgrs | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemMgrs Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll This object carries most, if not all, intelligence specific to the MGRS (Military Grid Reference System) grid standard. It can be used at two distinct levels, depending upon how it is manufactured. When manufactured with an ellipsoid/datum specification, this object is suitable only for conversion of geographic coordinates to MGRS strings and vice-versa. WHen manufactured with a frame coordinate system with a grid boundary subsequently supplied, the resulting object is capable of NGRS string conversions AND the generation of MGRS grids. When manufactured using a frame coordinate system and subsequent provision of a frame boundary (see base class MgCoordinateSystemGridBase) the members derived from the MgCoordinateSystemGridBase base class can be used for MGRS grid drawing purposes. public class MgCoordinateSystemMgrs : MgCoordinateSystemGridBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemGridBase MgCoordinateSystemMgrs Implements IDisposable Inherited Members MgCoordinateSystemGridBase.GetSpecializationType() MgCoordinateSystemGridBase.SetBoundary(MgCoordinateSystemGridBoundary) MgCoordinateSystemGridBase.GetBoundary() MgCoordinateSystemGridBase.GetGridLines(MgCoordinateSystemGridSpecification) MgCoordinateSystemGridBase.GetGridRegions(MgCoordinateSystemGridSpecification) MgCoordinateSystemGridBase.GetGridTicks(MgCoordinateSystemGridSpecification) MgCoordinateSystemGridBase.GetConvergenceAngle(MgCoordinate) MgCoordinateSystemGridBase.GetProjectiveGridScale(MgCoordinate) MgCoordinateSystemGridBase.ApproxGridLineMemoryUsage(MgCoordinateSystemGridSpecification) MgCoordinateSystemGridBase.ApproxGridRegionMemoryUsage(MgCoordinateSystemGridSpecification) MgCoordinateSystemGridBase.ApproxGridTickMemoryUsage(MgCoordinateSystemGridSpecification) MgCoordinateSystemGridBase.SetGridLineExceptionLevel(int) MgCoordinateSystemGridBase.SetGridRegionExceptionLevel(int) MgCoordinateSystemGridBase.SetGridTickExceptionLevel(int) MgCoordinateSystemGridBase.GetLastError() MgCoordinateSystemGridBase.ResetLastError() MgCoordinateSystemGridBase.AreExceptionsOn() MgCoordinateSystemGridBase.SetExceptionsOn(bool) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertFromLonLat(MgCoordinate, int) Converts a geographic coordinate to MGRS string form. public string ConvertFromLonLat(MgCoordinate pLonLat, int nPrecision) Parameters pLonLat MgCoordinate (String/string) The geographic position to be converted. X coordinate is the longitude in degrees relative to Greenwich, negative indicating west longitude. Y coordinate is latitude in degrees, negative indicating south latitude. nPrecision int (int) A value between zero and five, indicates the precision of the numeric portion of the returned MGRS designation. Returns string The MGRs representation for the given point. ConvertFromLonLat(double, double, int) Converts a geographic coordinate to MGRS string form. public string ConvertFromLonLat(double dLongitude, double dLatitude, int nPrecision) Parameters dLongitude double (double) Longitude of the geographic position to be converted, in degrees relative to Greenwich. Use negative value for west longitude. dLatitude double (double) Latitude of the geographic position to be converted, in degrees. Use negative value for south latitude. nPrecision int (int) A value between zero and five, indicates the precision of the numeric portion of the returned MGRS designation. Returns string The MGRs representation for the given point. ConvertToLonLat(string) public MgCoordinate ConvertToLonLat(string sMgrs) Parameters sMgrs string Returns MgCoordinate ConvertToLonLat(string, int) public MgCoordinate ConvertToLonLat(string sMgrs, int grdSqrPosition) Parameters sMgrs string grdSqrPosition int Returns MgCoordinate Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetLetteringScheme() Returns a value as defined by the MgCoordinateSystemMgrsLetteringScheme object indicating which lettering scheme is currently active. public short GetLetteringScheme() Returns short Either MgCoordinateSystemMgrsLetteringScheme::Normal or MgCoordinateSystemMgrsLetteringScheme::Alternative"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemMgrsGridLevel.html",
    "title": "Class MgCoordinateSystemMgrsGridLevel | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemMgrsGridLevel Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines constants used to indicate the MGRS grid level public class MgCoordinateSystemMgrsGridLevel Inheritance object MgCoordinateSystemMgrsGridLevel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Mgrs100Km 100km public const int Mgrs100Km = 3 Field Value int Mgrs100m 100m public const int Mgrs100m = 6 Field Value int Mgrs10Km 10km public const int Mgrs10Km = 4 Field Value int Mgrs10m 10m public const int Mgrs10m = 7 Field Value int Mgrs1Km 1km public const int Mgrs1Km = 5 Field Value int Mgrs1m 1m public const int Mgrs1m = 8 Field Value int MgrsNone None public const int MgrsNone = 0 Field Value int MgrsUnknown Unknown public const int MgrsUnknown = 99 Field Value int MgrsUps UPS public const int MgrsUps = 2 Field Value int MgrsUtm UTM public const int MgrsUtm = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemMgrsGridSquarePosition.html",
    "title": "Class MgCoordinateSystemMgrsGridSquarePosition | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemMgrsGridSquarePosition Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateSystemMgrsGridSquarePosition defines enumerated values used to specify the the location desired relative to the subject MGRS grid sqaure when evaluating an MGRS string. Note that the values used in this enumeration match those used by the CS-MAP interface. public class MgCoordinateSystemMgrsGridSquarePosition Inheritance object MgCoordinateSystemMgrsGridSquarePosition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Center Specifies the center of the grid square; the default previous to this revision (Dec 2009). public const int Center = 1 Field Value int East Specifies the midpoint of the eastern edge of the MGRS grid square. public const int East = 7 Field Value int None Specifies the grid square position is not set as yet. public const int None = 0 Field Value int North Specifies the midpoint of the northern edge of the MGRS grid square. public const int North = 5 Field Value int NorthEast Specifies the southwest corner of the MGRS grid square. public const int NorthEast = 6 Field Value int NorthWest Specifies the northwest corner of the MGRS grid square. public const int NorthWest = 4 Field Value int South Specifies the midpoint of the southern edge of the MGRS grid square. public const int South = 9 Field Value int SouthEast Specifies the southeast corner of the MGRS grid square. public const int SouthEast = 8 Field Value int SouthWest Specifies the southwest corner of the MGRS grid square. public const int SouthWest = 2 Field Value int Unknown Specifies an error return value, end of table, or other abnormal situation. public const int Unknown = 10 Field Value int West Specifies the midpoint of the western edge of the MGRS grid square. public const int West = 3 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemMgrsLetteringScheme.html",
    "title": "Class MgCoordinateSystemMgrsLetteringScheme | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemMgrsLetteringScheme Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines constants used to indicate the MGRS lettering scheme public class MgCoordinateSystemMgrsLetteringScheme Inheritance object MgCoordinateSystemMgrsLetteringScheme Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alternative Alternative public const byte Alternative = 1 Field Value byte Normal Normal public const byte Normal = 0 Field Value byte"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemProjectionCode.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemProjectionCode.html",
    "title": "Class MgCoordinateSystemProjectionCode | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemProjectionCode Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines coordinate system projection codes public class MgCoordinateSystemProjectionCode Inheritance object MgCoordinateSystemProjectionCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alber Albers Equal Area Conic Projection public const int Alber = 4 Field Value int Azede Azimuthal Equi-Distant; Elevated ellipsoid. public const int Azede = 59 Field Value int Azmea Lambert Azimuthal Equal Area Projection public const int Azmea = 11 Field Value int Azmed Lambert Azimuthal Equidistant Projection public const int Azmed = 7 Field Value int Bipolar Bipolar Oblique Conformal Conic Projection public const int Bipolar = 31 Field Value int Bonne Bonne Pseudoconical Projection public const int Bonne = 24 Field Value int Cassini Cassini Projection public const int Cassini = 22 Field Value int Eckert4 Ekert Pseudocylindrical Projection; Number IV public const int Eckert4 = 25 Field Value int Eckert6 Ekert Pseudocylindrical Projection; Number VI public const int Eckert6 = 26 Field Value int Edcnc Equidistant Conic Projection; aka Simple Conic public const int Edcnc = 12 Field Value int Edcyl Equidistant Cylindrical Projection (Spherical only) public const int Edcyl = 20 Field Value int EdcylE Equidistant Cylindrical Projection, Ellipsoidal or Spherical public const int EdcylE = 67 Field Value int GaussK Gauss-Kruger: Transverse Mercator without scale reduction parameter. public const int GaussK = 46 Field Value int Gnomonic Gnomonic Projection public const int Gnomonic = 19 Field Value int Goode Goode Homolosine Projection public const int Goode = 28 Field Value int Hom1uv Unrectified Hotine Oblique Mercator Projection; Sngl Point Form public const int Hom1uv = 1281 Field Value int Hom1xy Rectified Hotine Oblique Mercator Projection; Single Point Form public const int Hom1xy = 1282 Field Value int Hom2uv Unrectified Hotine Oblique Mercator Projection; Two Point Form public const int Hom2uv = 1283 Field Value int Hom2xy Rectified Hotine Oblique Mercator Projection; Two Point Form public const int Hom2xy = 1284 Field Value int Krovak Czech Krovak; original. public const int Krovak = 47 Field Value int Krvk95 Czech Krovak; includes 1995 adjustment. public const int Krvk95 = 51 Field Value int LL Null Projection; produces/processes Latitude and Longitude public const int LL = 1 Field Value int Lm1sp Single standard parallel variation of the Lambert Conformal Conic. public const int Lm1sp = 36 Field Value int Lm2sp Double standard parallel variation of the Lambert Conformal Conic. public const int Lm2sp = 37 Field Value int LmMich Lambert Conformal Conic, Michigan Variation public const int LmMich = 70 Field Value int Lmblg Belgian variation of the Lambert Conformal Conic Projection. public const int Lmblg = 38 Field Value int Lmbrtaf Lambert Conformal Conic with affine post-processor. public const int Lmbrtaf = 65 Field Value int Lmtan Lambert Tangential Conformal Conic Projection public const int Lmtan = 8 Field Value int Miller Miller Cylindrical Projection public const int Miller = 13 Field Value int Mndotl Minnesota DOT variation of the Lambert Conformal Conic. public const int Mndotl = 41 Field Value int Mndott Minnesota DOT variation of the Transverse Mercator projection. public const int Mndott = 42 Field Value int Modpc Lallemand IMW Modified Polyconic Projection public const int Modpc = 10 Field Value int Mollweid Mollweide Projection public const int Mollweid = 27 Field Value int Mrcat Mercator Cylindrical Projection public const int Mrcat = 6 Field Value int MrcatK Standard Mercator with a scale reduction factor instead of a standard parallel. public const int MrcatK = 49 Field Value int Mstero Modified Sterographic Projection public const int Mstero = 15 Field Value int Neacyl Normal Aspect; Equal Area Cylindrical Projection public const int Neacyl = 29 Field Value int Nerth Non-georeferenced coordinate system. Named Non-Earth by Map Info. public const int Nerth = 55 Field Value int Nrthsrt Nerth with scale and rotation public const int Nrthsrt = 64 Field Value int Nzealand New Zealand National Grid public const int Nzealand = 16 Field Value int OblqM Oblique Mercator (obsolete) public const int OblqM = 5 Field Value int Obqcyl Oblique Cylindrical; a generalized version of the Swiss projection; specifically for Hungary public const int Obqcyl = 56 Field Value int Ortho Orthographic Projection public const int Ortho = 18 Field Value int Ostn02 The Transverse Mercator with specific parameters; with the OSTN02 grid shift tacked on. This is a combination of a projection and a datum shift public const int Ostn02 = 60 Field Value int Ostn97 The Transverse Mercator with specific parameters; with the OSTN97 grid shoft tacked on. This is a combination of a projection and a datum shift public const int Ostn97 = 58 Field Value int Ostro Oblique Sterographic public const int Ostro = 34 Field Value int PlateCarree Inplementation of Plate Carree as a variation of the Equidistant Cylindrical public const int PlateCarree = 68 Field Value int Plycn Hassler American Polyconic Projection public const int Plycn = 9 Field Value int Pstro Polar sterographic public const int Pstro = 33 Field Value int Pstrosl Polar sterographic with standard latitude public const int Pstrosl = 53 Field Value int PvMercator Popular Visualization Pseudo Mercator (aka Google Earth) public const int PvMercator = 69 Field Value int Robinson Robinson Cylindrical Projection public const int Robinson = 23 Field Value int Rskew cs_PRJCOD_RSKEW public const int Rskew = 1285 Field Value int Rskewc cs_PRJCOD_RSKEWC public const int Rskewc = 1286 Field Value int Rskewo cs_PRJCOD_RSKEWO - Rectified Skew Orthomorphic; Skew Azimuth at Rectified Origin public const int Rskewo = 1287 Field Value int Sinus Sinusoidal Projection; Optionally Interrupted public const int Sinus = 17 Field Value int Sotrm South Oriented variation of the Transverse Mercator Projection. public const int Sotrm = 43 Field Value int Sstro Synder's Oblique Sterographic public const int Sstro = 35 Field Value int Swiss \"Swiss\" Projection public const int Swiss = 32 Field Value int Sys34 Combination of Transverse Mercator and a polynomial expansion used in Denmark public const int Sys34 = 57 Field Value int Sys34_01 Combination of Transverse Mercator and polynomial expansion used in Denmark. Polynominals are of the 2001 vintage. public const int Sys34_01 = 66 Field Value int Sys34_99 Combination of Transverse Mercator and polynomial expansion used in Denmark. Polynominals are of the 1999 vintage. public const int Sys34_99 = 61 Field Value int Teacyl Transverse Aspect; Equal Area Cylindrical Projection public const int Teacyl = 30 Field Value int Tm Transverse Mercator or Gauss Kruger Projection public const int Tm = 3 Field Value int Trmeraf Transverse Mercator with affiine post-processor. public const int Trmeraf = 54 Field Value int Trmrkrg Transverse Mercator using Kruger Formulation public const int Trmrkrg = 62 Field Value int Trmrs Transverse Mercator per J. P. Snyder. public const int Trmrs = 45 Field Value int Unknown Unknown public const int Unknown = 0 Field Value int Utm The UTM direct variation of the Transverse Mercator projection public const int Utm = 44 Field Value int Vdgrntn Van Der Grinten Projection public const int Vdgrntn = 21 Field Value int Wccsl Wisconsin County Coord System variation; Lambert Conformal Conic public const int Wccsl = 39 Field Value int Wccst Wisconsin County Coord System variation; Transverse Mercator projection public const int Wccst = 40 Field Value int Winkl Winkel-Tripel; variable standard latitude public const int Winkl = 63 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemProjectionFormatType.html",
    "title": "Class MgCoordinateSystemProjectionFormatType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemProjectionFormatType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines the type of projection format public class MgCoordinateSystemProjectionFormatType Inheritance object MgCoordinateSystemProjectionFormatType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Angd angular distance (cs_FRMT_ANGD) public const int Angd = 32933 Field Value int Coef coefficient (cs_FRMT_COEF) public const int Coef = 13 Field Value int Lat latitude (cs_FRMT_LAT) public const int Lat = 41157 Field Value int Lng longitude(cs_FRMT_LNG), azimuth(cs_FRMT_AZM) public const int Lng = 57509 Field Value int None none (no formatting) public const int None = 0 Field Value int Rot coefficient (cs_FRMT_ROT) public const int Rot = 4 Field Value int Scl coefficient (cs_FRMT_SCL) public const int Scl = 7 Field Value int Xxx coefficient (cs_FRMT_XXX) public const int Xxx = 4099 Field Value int Yyy coefficient (cs_FRMT_YYY) public const int Yyy = 4099 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemProjectionInformation.html",
    "title": "Class MgCoordinateSystemProjectionInformation | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemProjectionInformation Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Represents information about a coordinate system projection public class MgCoordinateSystemProjectionInformation : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemProjectionInformation Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetEnumProjections() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystemEnumInteger32 GetEnumProjections() Returns MgCoordinateSystemEnumInteger32 GetParameterCount(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetParameterCount(int nProjectionCode) Parameters nProjectionCode int Returns int GetParameterDefault(int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetParameterDefault(int nProjectionCode, int ulIndex) Parameters nProjectionCode int ulIndex int Returns double GetParameterFormatType(int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetParameterFormatType(int nProjectionCode, int ulIndex) Parameters nProjectionCode int ulIndex int Returns int GetParameterLogicalType(int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetParameterLogicalType(int nProjectionCode, int ulIndex) Parameters nProjectionCode int ulIndex int Returns int GetParameterMax(int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetParameterMax(int nProjectionCode, int ulIndex) Parameters nProjectionCode int ulIndex int Returns double GetParameterMin(int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetParameterMin(int nProjectionCode, int ulIndex) Parameters nProjectionCode int ulIndex int Returns double GetParameterType(int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetParameterType(int nProjectionCode, int ulIndex) Parameters nProjectionCode int ulIndex int Returns int GetTagString(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetTagString(int nProjectionCode) Parameters nProjectionCode int Returns string GetUnitType(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetUnitType(int nProjectionCode) Parameters nProjectionCode int Returns int IsUsingOffset(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsingOffset(int nProjectionCode) Parameters nProjectionCode int Returns bool IsUsingOriginLatitude(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsingOriginLatitude(int nProjectionCode) Parameters nProjectionCode int Returns bool IsUsingOriginLongitude(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsingOriginLongitude(int nProjectionCode) Parameters nProjectionCode int Returns bool IsUsingParameter(int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsingParameter(int nProjectionCode, int ulIndex) Parameters nProjectionCode int ulIndex int Returns bool IsUsingQuadrant(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsingQuadrant(int nProjectionCode) Parameters nProjectionCode int Returns bool IsUsingScaleReduction(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsingScaleReduction(int nProjectionCode) Parameters nProjectionCode int Returns bool"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemProjectionLogicalType.html",
    "title": "Class MgCoordinateSystemProjectionLogicalType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemProjectionLogicalType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines the logical types of a coordinate system projection public class MgCoordinateSystemProjectionLogicalType Inheritance object MgCoordinateSystemProjectionLogicalType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AffineCoefficient affine coefficient public const int AffineCoefficient = 10 Field Value int AngularDistance angular distance public const int AngularDistance = 4 Field Value int Azimuth azimuth public const int Azimuth = 3 Field Value int ComplexCoefficient complex coefficient public const int ComplexCoefficient = 5 Field Value int Elevation elevation, system units public const int Elevation = 9 Field Value int GeoidHeight geoid height in meters public const int GeoidHeight = 8 Field Value int HemisphereSelection hemisphere selection: north > 0, south < 0 public const int HemisphereSelection = 7 Field Value int Latitude latitude public const int Latitude = 2 Field Value int Longitude longitude public const int Longitude = 1 Field Value int None no specification public const int None = 0 Field Value int Scale Scale value public const int Scale = 12 Field Value int UTMZoneNumber UTM zone number public const int UTMZoneNumber = 6 Field Value int XYCoordinate X/Y Coordinate public const int XYCoordinate = 11 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemProjectionParameterType.html",
    "title": "Class MgCoordinateSystemProjectionParameterType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemProjectionParameterType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines the types of coordinate system projection parameters public class MgCoordinateSystemProjectionParameterType Inheritance object MgCoordinateSystemProjectionParameterType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Adp1p2 Distance between the poles. public const int Adp1p2 = 20 Field Value int Adsp1 Angular distance to the first standard parallel public const int Adsp1 = 21 Field Value int Adsp2 Angular distance to the second standard parallel public const int Adsp2 = 22 Field Value int Aelev Average Elevation public const int Aelev = 30 Field Value int Afa0 Affine A0 Coefficient public const int Afa0 = 35 Field Value int Afa1 Affine A1 Coefficient public const int Afa1 = 37 Field Value int Afa2 Affine A2 Coefficient public const int Afa2 = 38 Field Value int Afb0 Affine B0 Coefficient public const int Afb0 = 36 Field Value int Afb1 Affine B1 Coefficient public const int Afb1 = 39 Field Value int Afb2 Affine B2 Coefficient public const int Afb2 = 40 Field Value int Cmplxan Complex Parameter A (n). Label string includes a %s for generation by sprintf. public const int Cmplxan = 23 Field Value int Cmplxbn Complex Parameter B (n). Label string includes a %s for generation by sprintf. public const int Cmplxbn = 24 Field Value int Cntmer Central Meridian public const int Cntmer = 1 Field Value int Denrgn Danish System 24 Region public const int Denrgn = 42 Field Value int Eastll Eastern end of Longitude range public const int Eastll = 26 Field Value int EllipsoidScale Ellipsoid scaling factor public const int EllipsoidScale = 48 Field Value int Estdmer Eastern Standard Meridian public const int Estdmer = 13 Field Value int Gcazm Great Circle Azimuth public const int Gcazm = 11 Field Value int Gcp1lat First Great Circle Point Latitude public const int Gcp1lat = 6 Field Value int Gcp1lng First Great Circle Point Longitude public const int Gcp1lng = 5 Field Value int Gcp2lat Second Great Circle Point Latitude public const int Gcp2lat = 8 Field Value int Gcp2lng Second Great Circle Point Longitude public const int Gcp2lng = 7 Field Value int Gcplat Great Circle Point Latitude public const int Gcplat = 10 Field Value int Gcplng Great Circle Point Longitude public const int Gcplng = 9 Field Value int Ghgt Average Geoid Height public const int Ghgt = 29 Field Value int Hsns North/South Hemisphere public const int Hsns = 28 Field Value int NotUsed Not used. public const int NotUsed = 0 Field Value int Nparall Northern Parallel public const int Nparall = 14 Field Value int Nrmlpll Normal Parallel public const int Nrmlpll = 41 Field Value int Nrthrot Cartesian Rotation Angle public const int Nrthrot = 47 Field Value int Nrthscl Cartesian Scale Factor public const int Nrthscl = 46 Field Value int Nstdpll Northern Standard Parallel public const int Nstdpll = 2 Field Value int Ostdpll Oblique Cone Standard Parallel public const int Ostdpll = 33 Field Value int P1lat First pole latitude public const int P1lat = 17 Field Value int P1lng First pole longitude public const int P1lng = 16 Field Value int P2lat Second pole latitude public const int P2lat = 19 Field Value int P2lng Second pole longitude public const int P2lng = 18 Field Value int Polelat Oblique Pole Latitude public const int Polelat = 32 Field Value int Polelng Oblique Pole Longitude public const int Polelng = 31 Field Value int Sclrotorgx X Coordinate of Scale/Rotate Origin public const int Sclrotorgx = 44 Field Value int Sclrotorgy Y Coordinate of Scale/Rotate Origin public const int Sclrotorgy = 45 Field Value int Skwazm cs_PRMCOD_SKWAZM - Skew Azimuth at Rectified Origin. public const int Skwazm = 43 Field Value int Sparall Southern Parallel public const int Sparall = 15 Field Value int Sstdpll Southern Standard Parallel public const int Sstdpll = 3 Field Value int Stdcir Standard Circle Latitude public const int Stdcir = 34 Field Value int Stdpll Standard Parallel public const int Stdpll = 4 Field Value int Utmzn UTM Zone Number public const int Utmzn = 27 Field Value int Westll Western end of Longitude range. public const int Westll = 25 Field Value int Yaxisaz Y axis azimuth public const int Yaxisaz = 12 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemTransform.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemTransform.html",
    "title": "Class MgCoordinateSystemTransform | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemTransform Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Provides operations for transforming coordinates from one coordinate system to another. public class MgCoordinateSystemTransform : MgTransform, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgTransform MgCoordinateSystemTransform Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DatumShiftError public static readonly int DatumShiftError Field Value int DatumShiftFallback public static readonly int DatumShiftFallback Field Value int SourceCrsError public static readonly int SourceCrsError Field Value int TargetCrsError public static readonly int TargetCrsError Field Value int TransformDatumShiftWarning public static readonly int TransformDatumShiftWarning Field Value int TransformOk public static readonly int TransformOk Field Value int TransformOutsideDomainWarning public static readonly int TransformOutsideDomainWarning Field Value int TransformTotalFailure public static readonly int TransformTotalFailure Field Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetExplicitGeodeticPath() Returns the definition of the geodetic path used to build the transformation, but only if the path was explicitly obtained from the Geodetic Path dictionary. public MgCoordinateSystemGeodeticPath GetExplicitGeodeticPath() Returns MgCoordinateSystemGeodeticPath Returns a disposable pointer to the Geodetic Path definition which was used to build the conversion from the source to target datums. Returns null is the path from source to taregt datums was implicitly generated by CS-MAP. GetGeodeticTransformation(int) Returns a pointer to the catalog-resident(!) geodetic transformation definition indicated by the index parameter. public MgCoordinateSystemGeodeticTransformDef GetGeodeticTransformation(int index) Parameters index int A zero based index indicating the specific transformation definition which is to be returned. Returns MgCoordinateSystemGeodeticTransformDef Returns a disposable pointer to the geodetic transformation definition indicated by the index parameter. The MgCoordinateSystemGeodeticTransformDef instance is guaranteed to exist in the geodetic transformation definition dictionary. Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range. See MgCoordinateSystemTransform::GetGeodeticTransformationCount. MgException with code (MgCoordinateSystemLoadFailedException) if the geodetic transformation MgException with code (MgCoordinateSystemInitializationFailedException) if the MgException with code (OSGeo.MapGuide.MgExceptionCodes.MgException) if the dictionaries could not be accessed or GetGeodeticTransformationCount() Returns the number of geodetic transformations used in the implicit or explicit path used to convert the source to the target coordinate system. For a geodetic transformation to take place, both the source and the target coordinate systems have to be referenced to a datum. public int GetGeodeticTransformationCount() Returns int Returns the number of geodetic transformations in the path as described above. Returns 0, if no geodetic transformation will have to be done when converting from the source coordinate system to the target coordinate system. In particular, this method returns 0 in the following cases: GetGeodeticTransformationDirection(int) Returns the direction of the transformation definition indicated by the index parameter. public int GetGeodeticTransformationDirection(int index) Parameters index int A zero based index indicating the specific transformation definition for which the direction is to be returned. Returns int Returns a memebr of the MgCoordinateSystemGeodeticDirection class: * MgCoordinateSystemGeodeticDirection::GeodeticDirectionForward for the forward direction, * MgCoordinateSystemGeodeticDirection::GeodeticDirectionInverse or the inverse direction, * MgCoordinateSystemGeodeticDirection::GeodeticDirectionNone if there is no specification (e.g. a null transformation), and * MgCoordinateSystemGeodeticDirection::GeodeticDirectionError if the index parameter is invalid. GetLastTransformStatus() Gets the last transformation status public int GetLastTransformStatus() Returns int The last transformation status GetSource() Gets the source coordinate system (MgCoordinateSystem) public MgCoordinateSystem GetSource() Returns MgCoordinateSystem The source coordinate system GetSourceWarningCount() public virtual int GetSourceWarningCount() Returns int GetTarget() Gets the target coordinate system (MgCoordinateSystem) public MgCoordinateSystem GetTarget() Returns MgCoordinateSystem The target coordinate system GetTargetWarningCount() public virtual int GetTargetWarningCount() Returns int GetdatumWarningCount() public virtual int GetdatumWarningCount() Returns int GridLine(MgCoordinate, MgCoordinate, double, int) Generates a MgLineString which represents, in the target coordinate system, the linear line segment provided in the source coordinate system. public MgLineString GridLine(MgCoordinate fromPnt, MgCoordinate toPnt, double curvePrecision, int maxPoints) Parameters fromPnt MgCoordinate The starting point of the linear segment in source system coordinates. toPnt MgCoordinate The end point of the linear segment in source system coordinates. curvePrecision double The returned line string is segmented to the degree necessary such that the distance between the LineString approximation of the true curve and the true curve istself is never more than this value. Units must be the same as the target coordinate system. maxPoints int The generation algorithm will always quit after generating this number of points in result. A typical value is 500. DO NOIT rely on the algorithm stopping at exactly this value. The typical value of 500 can and will produce a LineString with as many of 750 points before terminating. Returns MgLineString The result of the transformation is returned in the form of a disposable LineString object. While the result can be as simple as a single straight line segment, more often it will be a multi-segment approximation of a complex curve. IgnoreDatumShiftWarning(bool) Sets whether datum shift warnings will be ignored public void IgnoreDatumShiftWarning(bool bIgnoreDatumShiftWarning) Parameters bIgnoreDatumShiftWarning bool (boolean/bool) true if datum shift warnings will be ignored. false otherwise IgnoreOutsideDomainWarning(bool) Sets whether outside domain warnings will be ignored public void IgnoreOutsideDomainWarning(bool bIgnoreOutsideDomainWarning) Parameters bIgnoreOutsideDomainWarning bool (boolean/bool) true if outside domain warnings will be ignored. false otherwise IsIgnoreDatumShiftWarning() Gets whether datum shift warnings will be ignored public bool IsIgnoreDatumShiftWarning() Returns bool true if this datum shift warnings will be ignored. false otherwise IsIgnoreOutsideDomainWarning() Gets whether outside domain warnings will be ignored public bool IsIgnoreOutsideDomainWarning() Returns bool true if this outside domain warnings will be ignored. false otherwise IsValidSourcePoint(double, double) Gets whether the given source point is valid public bool IsValidSourcePoint(double x, double y) Parameters x double (double) The X coordinate of the source point y double (double) The Y coordinate of the source point Returns bool true if this given source point is valid. false otherwise IsValidSourcePoint(double, double, double) Gets whether the given source point is valid public bool IsValidSourcePoint(double x, double y, double z) Parameters x double (double) The X coordinate of the source point y double (double) The Y coordinate of the source point z double (double) The Z coordinate of the source point Returns bool true if this given source point is valid. false otherwise IsValidTargetPoint(double, double) Gets whether the given target point is valid public bool IsValidTargetPoint(double x, double y) Parameters x double (double) The X coordinate of the target point y double (double) The Y coordinate of the target point Returns bool true if this given target point is valid. false otherwise IsValidTargetPoint(double, double, double) Gets whether the given target point is valid public bool IsValidTargetPoint(double x, double y, double z) Parameters x double (double) The X coordinate of the target point y double (double) The Y coordinate of the target point z double (double) The Z coordinate of the target point Returns bool true if this given target point is valid. false otherwise ResetLastTransformStatus() Resets the last transformation status public void ResetLastTransformStatus() SetSourceAndTarget(MgCoordinateSystem, MgCoordinateSystem) Sets the source and target coordinate systems public void SetSourceAndTarget(MgCoordinateSystem pSource, MgCoordinateSystem pTarget) Parameters pSource MgCoordinateSystem (MgCoordinateSystem) The source coordinate system pTarget MgCoordinateSystem (MgCoordinateSystem) The target coordinate system Transform(MgCoordinate) Transforms the given coordinate whose frame of reference is the source coordinate system into a coordinate whose frame of reference is the target coordinate system. public MgCoordinate Transform(MgCoordinate coordinate) Parameters coordinate MgCoordinate (MgCoordinate) An MgCoordinate object defined in terms of the source coordinate system. Returns MgCoordinate Returns an MgCoordinate object which is the equivalent in the target coordinate system of the given coordinate. Exceptions MgException MgCoordinateSystemTransformFailedException\"> Transform(MgEnvelope) Transforms an MgEnvelope instance for the source coordinate system into an MgEnvelope instance for target coordinate system. public MgEnvelope Transform(MgEnvelope envelope) Parameters envelope MgEnvelope (MgEnvelope) An MgEnvelope object obtained from the MgCoordinateSystemMeasure for the source coordinate system. Returns MgEnvelope Returns an MgEnvelope object for the target coordinate system.. Exceptions MgException MgCoordinateSystemTransformFailedException\"> Transform(double, double) Transforms the given X and Y values whose frame of reference is the source coordinate system into an XY coordinate whose frame of reference is the target coordinate system. public MgCoordinate Transform(double x, double y) Parameters x double (double) The X ordinate to transform. y double (double) The Y ordinate to transform. Returns MgCoordinate Returns an MgCoordinate object which is the equivalent in the target coordinate system of the given X and Y ordinates. Exceptions MgException MgCoordinateSystemTransformFailedException\"> Transform(double, double, double) Transforms the given X, Y and Z values whose frame of reference is the source coordinate system into a coordinate whose frame of reference is the target coordinate system. public MgCoordinate Transform(double x, double y, double z) Parameters x double (double) The X ordinate to transform. y double (double) The Y ordinate to transform. z double (double) The Z ordinate to transform. Returns MgCoordinate Returns an MgCoordinate object which is the equivalent in the target coordinate system of the given X, Y, and Z ordinates. Exceptions MgException MgCoordinateSystemTransformFailedException\"> TransformCoordinate(MgCoordinate) Transforms the specified coordinate in-place. public void TransformCoordinate(MgCoordinate coordinate) Parameters coordinate MgCoordinate (MgCoordinate) The coordinate that will be transformed in-place TransformM(double, double, double) Transforms the given X, Y, and M values whose frame of reference is the source coordinate system into a coordinate whose frame of reference is the target coordinate system. public MgCoordinate TransformM(double x, double y, double m) Parameters x double (double) The X ordinate to transform. y double (double) The Y ordinate to transform. m double (double) The measure to transform. Returns MgCoordinate Returns an MgCoordinate object which is the equivalent in the target coordinate system of the given X, Y, and M values. Exceptions MgException MgCoordinateSystemTransformFailedException\"> TransformM(double, double, double, double) Transforms the given X, Y, Z, and M values whose frame of reference is the source coordinate system into a coordinate whose frame of reference is the target coordinate system. public MgCoordinate TransformM(double x, double y, double z, double m) Parameters x double (double) The X ordinate to transform. y double (double) The Y ordinate to transform. z double (double) The Z ordinate to transform. m double (double) The measure to transform. Returns MgCoordinate Returns an MgCoordinate object which is the equivalent in the target coordinate system of the given X, Y, Z, and M values. Exceptions MgException MgCoordinateSystemTransformFailedException\">"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemType.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemType.html",
    "title": "Class MgCoordinateSystemType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines constants used to indicate the type of a coordinate system. public class MgCoordinateSystemType Inheritance object MgCoordinateSystemType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Arbitrary Specifies that the coordinate system is arbitrary. That is, it is not spatially bound to the earth, and the initial keyword in the WKT definition of the coordinate system is LOCAL_CS. public const int Arbitrary = 1 Field Value int Geographic Specifies that the coordinate system is geographic. That is, the initial keyword in the WKT definition of the coordinate system is GEOGCS. public const int Geographic = 2 Field Value int Projected Specifies that the coordinate system is projected. In most cases, the initial keyword in the WKT definition of the coordinate system is PROJCS. In some cases, the initial keyword is GEOGCS. public const int Projected = 3 Field Value int Unknown Specifies the coordinate system is not set. public const int Unknown = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemUnitCode.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemUnitCode.html",
    "title": "Class MgCoordinateSystemUnitCode | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemUnitCode Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines the various coordinate system unit codes public class MgCoordinateSystemUnitCode Inheritance object MgCoordinateSystemUnitCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BenoitChain BenoitChain public const int BenoitChain = 26 Field Value int BenoitLink BenoitLink public const int BenoitLink = 30 Field Value int BrChainTrunc BritishChainTrunc public const int BrChainTrunc = 52 Field Value int BrFootTrunc BritishFootTrunc public const int BrFootTrunc = 51 Field Value int BrLinkTrunc BritishLinkTrunc public const int BrLinkTrunc = 53 Field Value int Brealey Brealey public const int Brealey = 38 Field Value int CaGrid CaGrid public const int CaGrid = 23 Field Value int CapeFoot CapeFoot public const int CapeFoot = 37 Field Value int Centimeter Centimeter public const int Centimeter = 7 Field Value int Centisec Centisec public const int Centisec = 1010 Field Value int ClarkeChain ClarkeChain public const int ClarkeChain = 24 Field Value int ClarkeFoot ClarkeFoot public const int ClarkeFoot = 5 Field Value int ClarkeLink ClarkeLink public const int ClarkeLink = 28 Field Value int Decameter Decameter public const int Decameter = 48 Field Value int Decimeter Decimeter public const int Decimeter = 18 Field Value int Decisec Decisec public const int Decisec = 1009 Field Value int Degree Degree public const int Degree = 1001 Field Value int Dekameter Dekameter public const int Dekameter = 20 Field Value int Foot Foot public const int Foot = 2 Field Value int Furlong Furlong public const int Furlong = 35 Field Value int GermanMeter GermanMeter public const int GermanMeter = 22 Field Value int GoldCoastFoot GoldCoastFoot public const int GoldCoastFoot = 40 Field Value int Grad Grad public const int Grad = 1002 Field Value int Grade Grade public const int Grade = 1003 Field Value int GunterChain GunterChain public const int GunterChain = 25 Field Value int GunterLink GunterLink public const int GunterLink = 29 Field Value int Hectometer Hectometer public const int Hectometer = 21 Field Value int IFoot IFoot public const int IFoot = 4 Field Value int IInch IInch public const int IInch = 6 Field Value int IMile IMile public const int IMile = 13 Field Value int IYard IYard public const int IYard = 12 Field Value int Inch Inch public const int Inch = 3 Field Value int IndianFoot IndianFoot public const int IndianFoot = 43 Field Value int IndianFt37 IndianFt37 public const int IndianFt37 = 44 Field Value int IndianFt62 IndianFt62 public const int IndianFt62 = 45 Field Value int IndianFt75 IndianFt75 public const int IndianFt75 = 46 Field Value int IndianYard IndianYard public const int IndianYard = 42 Field Value int IndianYd37 IndianYd37 public const int IndianYd37 = 47 Field Value int InternationalChain InternationalChain public const int InternationalChain = 49 Field Value int InternationalLink InternationalLink public const int InternationalLink = 50 Field Value int Kilometer Kilometer public const int Kilometer = 8 Field Value int Knot Knot public const int Knot = 14 Field Value int Lat66 Lat66 public const int Lat66 = 16 Field Value int Lat83 Lat83 public const int Lat83 = 17 Field Value int MapInfo MapInfo public const int MapInfo = 1004 Field Value int Meter Meter public const int Meter = 1 Field Value int MicroInch MicroInch public const int MicroInch = 41 Field Value int Mil Mil public const int Mil = 1005 Field Value int Mile Mile public const int Mile = 11 Field Value int Millimeter Millimeter public const int Millimeter = 19 Field Value int Millisec Millisec public const int Millisec = 1011 Field Value int Minute Minute public const int Minute = 1006 Field Value int NautM NautM public const int NautM = 15 Field Value int Perch Perch public const int Perch = 33 Field Value int Pole Pole public const int Pole = 34 Field Value int Radian Radian public const int Radian = 1007 Field Value int Rod Rod public const int Rod = 32 Field Value int Rood Rood public const int Rood = 36 Field Value int SearsChain SearsChain public const int SearsChain = 27 Field Value int SearsFoot SearsFoot public const int SearsFoot = 39 Field Value int SearsLink SearsLink public const int SearsLink = 31 Field Value int SearsYard SearsYard public const int SearsYard = 10 Field Value int Second Second public const int Second = 1008 Field Value int Unknown Unknown public const int Unknown = 0 Field Value int Yard Yard public const int Yard = 9 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemUnitInformation.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemUnitInformation.html",
    "title": "Class MgCoordinateSystemUnitInformation | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemUnitInformation Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Represents information about a coordinate system unit public class MgCoordinateSystemUnitInformation : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgCoordinateSystemUnitInformation Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAbbreviation(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetAbbreviation(int nUnitCode) Parameters nUnitCode int Returns string GetAngularUnitScale(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetAngularUnitScale(int nUnitCode) Parameters nUnitCode int Returns double GetEnumAngularUnits() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystemEnumInteger32 GetEnumAngularUnits() Returns MgCoordinateSystemEnumInteger32 GetEnumLinearUnits() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinateSystemEnumInteger32 GetEnumLinearUnits() Returns MgCoordinateSystemEnumInteger32 GetLinearUnitScale(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetLinearUnitScale(int nUnitCode) Parameters nUnitCode int Returns double GetTagString(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetTagString(int nUnitCode) Parameters nUnitCode int Returns string GetUnitType(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetUnitType(int nUnitCode) Parameters nUnitCode int Returns int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemUnitType.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemUnitType.html",
    "title": "Class MgCoordinateSystemUnitType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemUnitType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines the types of coordinate system units public class MgCoordinateSystemUnitType Inheritance object MgCoordinateSystemUnitType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Angular Angular unit type public const int Angular = 2 Field Value int Linear Linear unit type public const int Linear = 1 Field Value int Unknown Unknown unit type. Used mainly for default or error conditions public const int Unknown = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateSystemWktFlavor.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateSystemWktFlavor.html",
    "title": "Class MgCoordinateSystemWktFlavor | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateSystemWktFlavor Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Defines constants used to indicate the WKT flavor public class MgCoordinateSystemWktFlavor Inheritance object MgCoordinateSystemWktFlavor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Epsg EPSG flavor public const int Epsg = 3 Field Value int Esri ESRI flavor public const int Esri = 2 Field Value int Geotiff GeoTIFF flavor public const int Geotiff = 4 Field Value int Geotools GeoTools flavor public const int Geotools = 5 Field Value int Ogc OGC flavor public const int Ogc = 0 Field Value int Oracle Oracle flavor public const int Oracle = 1 Field Value int Unknown Unknown flavor public const int Unknown = -1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgCoordinateXY.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateXY.html",
    "title": "Class MgCoordinateXY | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateXY Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateXY is a concrete class derived from the abstract class MgCoordinate. public class MgCoordinateXY : MgCoordinate, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCoordinate MgCoordinateXY Implements IDisposable Inherited Members MgCoordinate.NoZ MgCoordinate.NoM MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dimension public int Dimension { get; } Property Value int M public double M { get; } Property Value double X public double X { get; } Property Value double Y public double Y { get; } Property Value double Z public double Z { get; } Property Value double Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetM() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetM() Returns double GetX() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetX() Returns double GetY() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetY() Returns double GetZ() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetZ() Returns double"
  },
  "api/OSGeo.MapGuide.MgCoordinateXYM.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateXYM.html",
    "title": "Class MgCoordinateXYM | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateXYM Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateXYM is a concrete class derived from the abstract class MgCoordinate. public class MgCoordinateXYM : MgCoordinate, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCoordinate MgCoordinateXYM Implements IDisposable Inherited Members MgCoordinate.NoZ MgCoordinate.NoM MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dimension public int Dimension { get; } Property Value int M public double M { get; } Property Value double X public double X { get; } Property Value double Y public double Y { get; } Property Value double Z public double Z { get; } Property Value double Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetM() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetM() Returns double GetX() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetX() Returns double GetY() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetY() Returns double GetZ() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetZ() Returns double"
  },
  "api/OSGeo.MapGuide.MgCoordinateXYZ.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateXYZ.html",
    "title": "Class MgCoordinateXYZ | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateXYZ Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateXYZ is a concrete class derived from the abstract class MgCoordinate. public class MgCoordinateXYZ : MgCoordinate, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCoordinate MgCoordinateXYZ Implements IDisposable Inherited Members MgCoordinate.NoZ MgCoordinate.NoM MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dimension public int Dimension { get; } Property Value int M public double M { get; } Property Value double X public double X { get; } Property Value double Y public double Y { get; } Property Value double Z public double Z { get; } Property Value double Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetM() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetM() Returns double GetX() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetX() Returns double GetY() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetY() Returns double GetZ() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetZ() Returns double"
  },
  "api/OSGeo.MapGuide.MgCoordinateXYZM.html": {
    "href": "api/OSGeo.MapGuide.MgCoordinateXYZM.html",
    "title": "Class MgCoordinateXYZM | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCoordinateXYZM Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCoordinateXYZM is a concrete class derived from the abstract class MgCoordinate. public class MgCoordinateXYZM : MgCoordinate, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCoordinate MgCoordinateXYZM Implements IDisposable Inherited Members MgCoordinate.NoZ MgCoordinate.NoM MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dimension public int Dimension { get; } Property Value int M public double M { get; } Property Value double X public double X { get; } Property Value double Y public double Y { get; } Property Value double Z public double Z { get; } Property Value double Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetM() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetM() Returns double GetX() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetX() Returns double GetY() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetY() Returns double GetZ() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetZ() Returns double"
  },
  "api/OSGeo.MapGuide.MgCurve.html": {
    "href": "api/OSGeo.MapGuide.MgCurve.html",
    "title": "Class MgCurve | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurve Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCurve is an abstract base class. MgCurveString and MgLineString are concrete classes derived from MgCurve. public class MgCurve : MgGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgCurve Implements IDisposable Derived MgCurveString MgLineString Inherited Members MgGeometry.GeometryType MgGeometry.GetGeometryType() MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Dimension MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.GetDimension() MgGeometricEntity.IsEmpty() MgGeometricEntity.IsSimple() MgGeometricEntity.IsClosed() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.Copy() MgGeometricEntity.Transform(MgTransform) MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EndCoordinate public MgCoordinate EndCoordinate { get; } Property Value MgCoordinate StartCoordinate public MgCoordinate StartCoordinate { get; } Property Value MgCoordinate Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetEndCoordinate() Gets the ending coordinate of the curve. public MgCoordinate GetEndCoordinate() Returns MgCoordinate An MgCoordinate that defines the ending coordinate. GetStartCoordinate() Gets the starting coordinate of the curve. public MgCoordinate GetStartCoordinate() Returns MgCoordinate An MgCoordinate that defines the starting coordinate."
  },
  "api/OSGeo.MapGuide.MgCurvePolygon.html": {
    "href": "api/OSGeo.MapGuide.MgCurvePolygon.html",
    "title": "Class MgCurvePolygon | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurvePolygon Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgCurvePolygon is a region, defined by 1 exterior boundary and 0 or more interior boundaries. public class MgCurvePolygon : MgRegion, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgRegion MgCurvePolygon Implements IDisposable Inherited Members MgRegion.PointInRegion MgRegion.Coordinates MgRegion.GetPointInRegion() MgRegion.GetCoordinates() MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dimension public int Dimension { get; } Property Value int ExteriorRing public MgCurveRing ExteriorRing { get; } Property Value MgCurveRing GeometryType public int GeometryType { get; } Property Value int InteriorRingCount public int InteriorRingCount { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetExteriorRing() Gets the exterior ring of the polygon. public MgCurveRing GetExteriorRing() Returns MgCurveRing An MgCurveRing that defines the exterior ring of the polygon. GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int GetInteriorRing(int) Gets the interior ring at the specified index. The indexing starts at zero. public MgCurveRing GetInteriorRing(int index) Parameters index int (int) An integer specifying the location of the interior ring in the collection. Returns MgCurveRing The MgCurveRing at the specified index. GetInteriorRingCount() Gets the number of interior rings in this polygon. public int GetInteriorRingCount() Returns int The number of interior rings. IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgCurvePolygonCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCurvePolygonCollection.html",
    "title": "Class MgCurvePolygonCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurvePolygonCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCurvePolygonCollection provides support for defining an ordered set of curve polygons. public class MgCurvePolygonCollection : MgGuardDisposable, IDisposable, IList<MgCurvePolygon>, ICollection<MgCurvePolygon>, IEnumerable<MgCurvePolygon>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgCurvePolygonCollection Implements IDisposable IList<MgCurvePolygon> ICollection<MgCurvePolygon> IEnumerable<MgCurvePolygon> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgCurvePolygonCollection() Construct a MgCurvePolygonCollection object public MgCurvePolygonCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgCurvePolygon this[int index] { get; set; } Parameters index int Property Value MgCurvePolygon Methods Add(MgCurvePolygon) Adds the specified coordinate to the end of the collection. public void Add(MgCurvePolygon value) Parameters value MgCurvePolygon (MgCurvePolygon) curve polygon to add to the collection. Clear() Removes all curve polygons from the collection. public void Clear() Contains(MgCurvePolygon) public virtual bool Contains(MgCurvePolygon value) Parameters value MgCurvePolygon Returns bool CopyTo(MgCurvePolygon[], int) public void CopyTo(MgCurvePolygon[] array, int arrayIndex) Parameters array MgCurvePolygon[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgCurvePolygon> GetEnumerator() Returns IEnumerator<MgCurvePolygon> GetItem(int) public virtual MgCurvePolygon GetItem(int index) Parameters index int Returns MgCurvePolygon IndexOf(MgCurvePolygon) public virtual int IndexOf(MgCurvePolygon value) Parameters value MgCurvePolygon Returns int Insert(int, MgCurvePolygon) Inserts the specified curve polygon at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgCurvePolygon value) Parameters index int (int) Index at which to insert the coordinate. value MgCurvePolygon (MgCurvePolygon) curve polygon to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgCurvePolygon) Removes the specified curve polygon from the collection. Returns false if the curve polygon could not be removed. public bool Remove(MgCurvePolygon value) Parameters value MgCurvePolygon (MgCurvePolygon) curve polygon reference to remove. Returns bool Returns true if the curve polygon was removed RemoveAt(int) Removes the curve polygon at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the curve polygon to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgCurvePolygon) Sets the curve polygon in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgCurvePolygon value) Parameters index int (int) Index of the coordinate to set. value MgCurvePolygon (MgCurvePolygon) curve polygon to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgCurveRing.html": {
    "href": "api/OSGeo.MapGuide.MgCurveRing.html",
    "title": "Class MgCurveRing | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurveRing Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCurveRing is a geometry component used in the construction of MgCurvePolygon objects. public class MgCurveRing : MgRing, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometryComponent MgRing MgCurveRing Implements IDisposable Inherited Members MgRing.PointInRing MgRing.Coordinates MgRing.GetPointInRing() MgRing.GetCoordinates() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ComponentType public int ComponentType { get; } Property Value int Count public int Count { get; } Property Value int Dimension public int Dimension { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetComponentType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetComponentType() Returns int GetCount() Gets the number of curve segments that define the ring. public int GetCount() Returns int The number of curve segments. GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetSegment(int) Gets the curve segment at the specified index. The indexing starts at zero. public MgCurveSegment GetSegment(int index) Parameters index int (int) Identifies the MgCurveSegment to return. Returns MgCurveSegment The MgCurveSegment at the specified index. IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform Returns MgGeometricEntity"
  },
  "api/OSGeo.MapGuide.MgCurveRingCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCurveRingCollection.html",
    "title": "Class MgCurveRingCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurveRingCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCurveRingCollection provides support for defining an ordered set of curve rings. public class MgCurveRingCollection : MgGuardDisposable, IDisposable, IList<MgCurveRing>, ICollection<MgCurveRing>, IEnumerable<MgCurveRing>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgCurveRingCollection Implements IDisposable IList<MgCurveRing> ICollection<MgCurveRing> IEnumerable<MgCurveRing> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgCurveRingCollection() Construct a MgCurveRingCollection object public MgCurveRingCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgCurveRing this[int index] { get; set; } Parameters index int Property Value MgCurveRing Methods Add(MgCurveRing) Adds the specified coordinate to the end of the collection. public void Add(MgCurveRing value) Parameters value MgCurveRing (MgCurveRing) curve ring to add to the collection. Clear() Removes all curve rings from the collection. public void Clear() Contains(MgCurveRing) public virtual bool Contains(MgCurveRing value) Parameters value MgCurveRing Returns bool CopyTo(MgCurveRing[], int) public void CopyTo(MgCurveRing[] array, int arrayIndex) Parameters array MgCurveRing[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgCurveRing> GetEnumerator() Returns IEnumerator<MgCurveRing> GetItem(int) public virtual MgCurveRing GetItem(int index) Parameters index int Returns MgCurveRing IndexOf(MgCurveRing) public virtual int IndexOf(MgCurveRing value) Parameters value MgCurveRing Returns int Insert(int, MgCurveRing) Inserts the specified curve ring at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgCurveRing value) Parameters index int (int) Index at which to insert the coordinate. value MgCurveRing (MgCurveRing) curve ring to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgCurveRing) Removes the specified curve ring from the collection. Returns true if the curve ring was successfully removed. public bool Remove(MgCurveRing value) Parameters value MgCurveRing (MgCurveRing) curve ring reference to remove. Returns bool Returns true if curve ring was removed. RemoveAt(int) Removes the curve ring at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the curve ring to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgCurveRing) Sets the curve ring in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgCurveRing value) Parameters index int (int) Index of the coordinate to set. value MgCurveRing (MgCurveRing) curve ring to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgCurveSegment.html": {
    "href": "api/OSGeo.MapGuide.MgCurveSegment.html",
    "title": "Class MgCurveSegment | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurveSegment Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCurveSegment is an abstract base class. public class MgCurveSegment : MgGeometryComponent, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometryComponent MgCurveSegment Implements IDisposable Derived MgArcSegment MgLinearSegment Inherited Members MgGeometryComponent.ComponentType MgGeometryComponent.GetComponentType() MgGeometricEntity.Dimension MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.GetDimension() MgGeometricEntity.IsEmpty() MgGeometricEntity.IsSimple() MgGeometricEntity.IsClosed() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.Copy() MgGeometricEntity.Transform(MgTransform) MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EndCoordinate public MgCoordinate EndCoordinate { get; } Property Value MgCoordinate StartCoordinate public MgCoordinate StartCoordinate { get; } Property Value MgCoordinate Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetEndCoordinate() Gets the ending coordinate of the curve segment. public MgCoordinate GetEndCoordinate() Returns MgCoordinate An MgCoordinate that defines the ending coordinate. GetStartCoordinate() Gets the starting coordinate of the curve segment. public MgCoordinate GetStartCoordinate() Returns MgCoordinate An MgCoordinate that defines the starting coordinate."
  },
  "api/OSGeo.MapGuide.MgCurveSegmentCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCurveSegmentCollection.html",
    "title": "Class MgCurveSegmentCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurveSegmentCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCurveSegmentCollection provides support for defining an ordered set of curve segments. public class MgCurveSegmentCollection : MgGuardDisposable, IDisposable, IList<MgCurveSegment>, ICollection<MgCurveSegment>, IEnumerable<MgCurveSegment>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgCurveSegmentCollection Implements IDisposable IList<MgCurveSegment> ICollection<MgCurveSegment> IEnumerable<MgCurveSegment> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgCurveSegmentCollection() Construct a MgCurveSegmentCollection object public MgCurveSegmentCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgCurveSegment this[int index] { get; set; } Parameters index int Property Value MgCurveSegment Methods Add(MgCurveSegment) Adds the specified coordinate to the end of the collection. public void Add(MgCurveSegment value) Parameters value MgCurveSegment (MgCurveSegment) Curve segment to add to the collection. Clear() Removes all curve segments from the collection. public void Clear() Contains(MgCurveSegment) public virtual bool Contains(MgCurveSegment value) Parameters value MgCurveSegment Returns bool CopyTo(MgCurveSegment[], int) public void CopyTo(MgCurveSegment[] array, int arrayIndex) Parameters array MgCurveSegment[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgCurveSegment> GetEnumerator() Returns IEnumerator<MgCurveSegment> GetItem(int) public virtual MgCurveSegment GetItem(int index) Parameters index int Returns MgCurveSegment IndexOf(MgCurveSegment) public virtual int IndexOf(MgCurveSegment value) Parameters value MgCurveSegment Returns int Insert(int, MgCurveSegment) Inserts the specified curve segment at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgCurveSegment value) Parameters index int (int) Index at which to insert the coordinate. value MgCurveSegment (MgCurveSegment) Curve segment to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgCurveSegment) Removes the specified curve segment from the collection. Returns true if the curve segment was successfully removed. public bool Remove(MgCurveSegment value) Parameters value MgCurveSegment (MgCurveSegment) Curve segment reference to remove. Returns bool Returns true if curve segment was successfully removed. RemoveAt(int) Removes the curve segment at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the curve segment to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgCurveSegment) Sets the curve segment in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgCurveSegment value) Parameters index int (int) Index of the coordinate to set. value MgCurveSegment (MgCurveSegment) Curve segment to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgCurveString.html": {
    "href": "api/OSGeo.MapGuide.MgCurveString.html",
    "title": "Class MgCurveString | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurveString Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgCurveString is composed of one or more curve segments. public class MgCurveString : MgCurve, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgCurve MgCurveString Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Dimension public int Dimension { get; } Property Value int EndCoordinate public MgCoordinate EndCoordinate { get; } Property Value MgCoordinate GeometryType public int GeometryType { get; } Property Value int StartCoordinate public MgCoordinate StartCoordinate { get; } Property Value MgCoordinate Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the number of segments in this curve string. public int GetCount() Returns int The number of curve segments. GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetEndCoordinate() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinate GetEndCoordinate() Returns MgCoordinate GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int GetSegment(int) Gets the curve segment at the specified index. The indexing starts at zero. public MgCurveSegment GetSegment(int index) Parameters index int (int) An integer specifying the location of the curve segment in the collection. Returns MgCurveSegment The MgCurveSegment at the specified index. GetStartCoordinate() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinate GetStartCoordinate() Returns MgCoordinate IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgCurveStringCollection.html": {
    "href": "api/OSGeo.MapGuide.MgCurveStringCollection.html",
    "title": "Class MgCurveStringCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgCurveStringCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgCurveStringCollection provides support for defining an ordered set of curve strings. public class MgCurveStringCollection : MgGuardDisposable, IDisposable, IList<MgCurveString>, ICollection<MgCurveString>, IEnumerable<MgCurveString>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgCurveStringCollection Implements IDisposable IList<MgCurveString> ICollection<MgCurveString> IEnumerable<MgCurveString> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgCurveStringCollection() Construct a MgCurveStringCollection object public MgCurveStringCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgCurveString this[int index] { get; set; } Parameters index int Property Value MgCurveString Methods Add(MgCurveString) Adds the specified coordinate to the end of the collection. public void Add(MgCurveString value) Parameters value MgCurveString (MgCurveString) curve string to add to the collection. Clear() Removes all curve strings from the collection. public void Clear() Contains(MgCurveString) public virtual bool Contains(MgCurveString value) Parameters value MgCurveString Returns bool CopyTo(MgCurveString[], int) public void CopyTo(MgCurveString[] array, int arrayIndex) Parameters array MgCurveString[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgCurveString> GetEnumerator() Returns IEnumerator<MgCurveString> GetItem(int) public virtual MgCurveString GetItem(int index) Parameters index int Returns MgCurveString IndexOf(MgCurveString) public virtual int IndexOf(MgCurveString value) Parameters value MgCurveString Returns int Insert(int, MgCurveString) Inserts the specified curve string at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgCurveString value) Parameters index int (int) Index at which to insert the coordinate. value MgCurveString (MgCurveString) curve string to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgCurveString) Removes the specified curve string from the collection. Return true if the curve string was removed. public bool Remove(MgCurveString value) Parameters value MgCurveString (MgCurveString) curve string reference to remove. Returns bool Returns true if curve string was removed. RemoveAt(int) Removes the curve string at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the curve string to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgCurveString) Sets the curve string in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgCurveString value) Parameters index int (int) Index of the coordinate to set. value MgCurveString (MgCurveString) curve string to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgDataPropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MgDataPropertyDefinition.html",
    "title": "Class MgDataPropertyDefinition | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDataPropertyDefinition Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines a data property belonging to a feature class. public class MgDataPropertyDefinition : MgPropertyDefinition, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgPropertyDefinition MgDataPropertyDefinition Implements IDisposable Inherited Members MgPropertyDefinition.getCPtr(MgPropertyDefinition) MgPropertyDefinition.swigRelease(MgPropertyDefinition) MgPropertyDefinition.PropertyType MgPropertyDefinition.Description MgPropertyDefinition.QualifiedName MgPropertyDefinition.GetPropertyType() MgPropertyDefinition.SetDescription(string) MgPropertyDefinition.GetDescription() MgPropertyDefinition.SetQualifiedName(string) MgPropertyDefinition.GetQualifiedName() MgPropertyDefinition.Delete() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgDataPropertyDefinition(string) Constructs an MgDataPropertyDefinition object. public MgDataPropertyDefinition(string name) Parameters name string (String/string) The name of the property. Properties DataType public int DataType { get; set; } Property Value int DefaultValue public string DefaultValue { get; set; } Property Value string Length public int Length { get; set; } Property Value int Nullable public bool Nullable { get; set; } Property Value bool Precision public int Precision { get; set; } Property Value int ReadOnly public bool ReadOnly { get; set; } Property Value bool Scale public int Scale { get; set; } Property Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDataType() Gets the data type of this property. public int GetDataType() Returns int Returns the data type of this property. See MgPropertyType for the different data types. GetDefaultValue() Gets the default value for this property. public string GetDefaultValue() Returns string Returns the default value. GetLength() Gets the length of a String, BLOB, or CLOB data property. This value does not apply to any other data type. public int GetLength() Returns int Returns the length of a String, BLOB, or CLOB data property. GetNullable() Gets a Boolean value that indicates whether this property's value can be null. public bool GetNullable() Returns bool Returns true if the property's value can be null; otherwise returns false. GetPrecision() Gets the precision (total number of digits) of a decimal data property. public int GetPrecision() Returns int Returns the precision. GetReadOnly() Gets a Boolean value that indicates whether this property is read-only. public bool GetReadOnly() Returns bool Returns a Boolean value that indicates whether this property is read-only. GetScale() Gets the scale (number of digits to the right of the decimal point) of a decimal data property. public int GetScale() Returns int Returns the scale. IsAutoGenerated() Gets a Boolean value that indicates whether this is an auto-generated property. public bool IsAutoGenerated() Returns bool Returns true if the property is auto-generated; otherwise returns false. SetAutoGeneration(bool) Sets a boolean value that determines whether this is an auto-generated property. public void SetAutoGeneration(bool value) Parameters value bool (boolean/bool) True configures the property to be auto-generated and read-only and false configures it to be user settable. SetDataType(int) Sets the data type of this property. See MgPropertyType for the different data types. public void SetDataType(int type) Parameters type int (int) The data type of this property. SetDefaultValue(string) Sets the default value for this property. public void SetDefaultValue(string value) Parameters value string (String/string) The default value. SetLength(int) Sets the maximum length of a String, BLOB, or CLOB data property. This value does not apply to any other data type. public void SetLength(int len) Parameters len int (int) The length of this String, BLOB, or CLOB data property. SetNullable(bool) Determines whether this property's value can be null. public void SetNullable(bool value) Parameters value bool (boolean/bool) True configures the property to be nullable. That is, it is possible to set it to a null value and false configures the property so that it cannot be set to a null value. SetPrecision(int) Sets the precision (total number of digits) of a decimal data property. This value does not apply to any other data type. public void SetPrecision(int precision) Parameters precision int (int) Precision of this decimal property. SetReadOnly(bool) Determines whether this property is read-only public void SetReadOnly(bool value) Parameters value bool (boolean/bool) True configures the property to be read-only, and false configures it to be user settable. SetScale(int) Sets the scale (number of digits to the right of the decimal point) of a decimal data property. This value does not apply to any other data type. public void SetScale(int scale) Parameters scale int (int) The scale of this decimal property."
  },
  "api/OSGeo.MapGuide.MgDataReader.html": {
    "href": "api/OSGeo.MapGuide.MgDataReader.html",
    "title": "Class MgDataReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDataReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides a forward-only, read-only iterator for reading computed data retrieved from a datastore. public class MgDataReader : MgReader, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgReader MgDataReader Implements IDisposable Inherited Members MgReader.ReadNext() MgReader.GetPropertyCount() MgReader.GetPropertyName(int) MgReader.GetPropertyType(string) MgReader.GetPropertyType(int) MgReader.IsNull(string) MgReader.GetBoolean(string) MgReader.GetByte(string) MgReader.GetDateTime(string) MgReader.GetSingle(string) MgReader.GetDouble(string) MgReader.GetInt16(string) MgReader.GetInt32(string) MgReader.GetInt64(string) MgReader.GetString(string) MgReader.GetBLOB(string) MgReader.GetCLOB(string) MgReader.GetGeometry(string) MgReader.GetRaster(string) MgReader.GetPropertyIndex(string) MgReader.IsNull(int) MgReader.GetBoolean(int) MgReader.GetByte(int) MgReader.GetDateTime(int) MgReader.GetSingle(int) MgReader.GetDouble(int) MgReader.GetInt16(int) MgReader.GetInt32(int) MgReader.GetInt64(int) MgReader.GetString(int) MgReader.GetBLOB(int) MgReader.GetCLOB(int) MgReader.GetGeometry(int) MgReader.GetRaster(int) MgReader.Close() MgReader.GetReaderType() MgReader.ToXml() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgDateTime.html": {
    "href": "api/OSGeo.MapGuide.MgDateTime.html",
    "title": "Class MgDateTime | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDateTime Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll MgDateTime is used to store dates, times, or both. public class MgDateTime : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgDateTime Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MgDateTime() Construct a date time value initialized to the current date and time public MgDateTime() MgDateTime(short, short, short) Construct a date value public MgDateTime(short year, short month, short day) Parameters year short (short/int) Input year month short (short/int) Input month day short (short/int) Input day of month MgDateTime(short, short, short, short, short, short, int) Construct a date time value public MgDateTime(short year, short month, short day, short hour, short minute, short second, int microsecond) Parameters year short (short/int) Input year month short (short/int) Input month day short (short/int) Input day of month hour short (short/int) Input hour minute short (short/int) Input minute second short (short/int) Input second microsecond int (int) Input microsecond MgDateTime(short, short, short, int) Construct a time value public MgDateTime(short hour, short minute, short second, int microsecond) Parameters hour short (short/int) Input hour minute short (short/int) Input minute second short (short/int) Input second microsecond int (int) Input microsecond Properties Day public short Day { get; set; } Property Value short Hour public short Hour { get; set; } Property Value short Microsecond public int Microsecond { get; set; } Property Value int Minute public short Minute { get; set; } Property Value short Month public short Month { get; set; } Property Value short Second public short Second { get; set; } Property Value short Year public short Year { get; set; } Property Value short Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDay() Gets the day component of this object public short GetDay() Returns short Returns the day component of this object. GetHour() Gets the hour component of this object public short GetHour() Returns short Returns the hour component of this object. GetMicrosecond() Gets the microsecond component of this object public int GetMicrosecond() Returns int Returns the microsecond component of this object. GetMinute() Gets the minute component of this object public short GetMinute() Returns short Returns the minute component of this object. GetMonth() Gets the month component of this object public short GetMonth() Returns short Returns the month component of this object. GetSecond() Gets the second component of this object public short GetSecond() Returns short Returns the second component of this object. GetYear() Gets the year component of this object public short GetYear() Returns short Returns the year component of this object. IsDate() Determines if this object only represents a date value. public bool IsDate() Returns bool Returns true if only the date is valid; otherwise returns false. IsDateTime() Determines if this object represents both date and time values. public bool IsDateTime() Returns bool Returns true if both the date and time are valid; otherwise returns false. IsTime() Determines if this object only represents a time value. public bool IsTime() Returns bool Returns true if only the time is valid; otherwise returns false. SetDay(short) Sets the day component of this object The Validate method should be called after the date time value has been fully specified by Set methods. public void SetDay(short day) Parameters day short (short/int) Day of the month in the range of 1 to 31 inclusive SetHour(short) Sets the hour component of this object The Validate method should be called after the date time value has been fully specified by Set methods. public void SetHour(short hour) Parameters hour short (short/int) Hour since midnight in the range of 0 to 23 SetMicrosecond(int) Sets the microsecond component of this object The Validate method should be called after the date time value has been fully specified by Set methods. public void SetMicrosecond(int microsecond) Parameters microsecond int (int) Microseconds after second in the range of 0 to 999999 SetMinute(short) Sets the minute component of this object The Validate method should be called after the date time value has been fully specified by Set methods. public void SetMinute(short minute) Parameters minute short (short/int) Minutes after hour in the range of 0 to 59 SetMonth(short) Sets the month component of this object The Validate method should be called after the date time value has been fully specified by Set methods. public void SetMonth(short month) Parameters month short (short/int) Month in the range of 1 to 12 inclusive (January = 1) SetSecond(short) Sets the second component of this object The Validate method should be called after the date time value has been fully specified by Set methods. public void SetSecond(short second) Parameters second short (short/int) Seconds after minute in the range of 0 to 59 SetYear(short) Sets the year component of this object The Validate method should be called after the date time value has been fully specified by Set methods. public void SetYear(short year) Parameters year short (short/int) Year in the range of 1 to 9999 ToString() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns date time object as a string public string ToString() Returns string Validate() Validates the date time value. This method should be called after the date time value has been fully specified by Set methods. public void Validate()"
  },
  "api/OSGeo.MapGuide.MgDateTimeProperty.html": {
    "href": "api/OSGeo.MapGuide.MgDateTimeProperty.html",
    "title": "Class MgDateTimeProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDateTimeProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores MgDateTime data with an associated key name. public class MgDateTimeProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgDateTimeProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgDateTimeProperty(string, MgDateTime) Constructs an MgDateTimeProperty object.. public MgDateTimeProperty(string name, MgDateTime value) Parameters name string (String/string) The name of the property. value MgDateTime (MgDateTime) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public MgDateTime Value { get; set; } Property Value MgDateTime Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::DateTime GetValue() Gets the property value. public MgDateTime GetValue() Returns MgDateTime Returns the property value. SetValue(MgDateTime) Sets the property value public void SetValue(MgDateTime value) Parameters value MgDateTime (MgDateTime) The value of the property."
  },
  "api/OSGeo.MapGuide.MgDeleteFeatures.html": {
    "href": "api/OSGeo.MapGuide.MgDeleteFeatures.html",
    "title": "Class MgDeleteFeatures | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDeleteFeatures Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll A feature command that features from a datastore. The feature class name and filter text define feature(s) to delete. This class is added to an MgFeatureCommandCollection object, which is then passed in a call to the MgFeatureService::UpdateFeatures method. public class MgDeleteFeatures : MgFeatureCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureCommand MgDeleteFeatures Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgDeleteFeatures(string, string) Constructs an MgDeleteFeatures object. public MgDeleteFeatures(string className, string filterText) Parameters className string (String/string) The name of the class from which the data is to be deleted. filterText string (String/string) The filter used to select features for deletion. Properties CommandType public int CommandType { get; } Property Value int FeatureClassName public string FeatureClassName { get; } Property Value string FilterText public string FilterText { get; } Property Value string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCommandType() public override int GetCommandType() Returns int GetFeatureClassName() public string GetFeatureClassName() Returns string GetFilterText() public string GetFilterText() Returns string"
  },
  "api/OSGeo.MapGuide.MgDisposable.html": {
    "href": "api/OSGeo.MapGuide.MgDisposable.html",
    "title": "Class MgDisposable | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDisposable Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll MgDisposable is the base interface for all classes that implement this standard interface for reference counting and object destruction. public class MgDisposable : MgObject, IDisposable Inheritance object MgObject MgDisposable Implements IDisposable Derived MgGuardDisposable Inherited Members MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgDisposable(IntPtr, bool) protected MgDisposable(IntPtr cPtr, bool cMemoryOwn) Parameters cPtr IntPtr cMemoryOwn bool Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool getCPtr(MgDisposable) public static HandleRef getCPtr(MgDisposable obj) Parameters obj MgDisposable Returns HandleRef swigRelease(MgDisposable) public static HandleRef swigRelease(MgDisposable obj) Parameters obj MgDisposable Returns HandleRef"
  },
  "api/OSGeo.MapGuide.MgDisposableCollection.html": {
    "href": "api/OSGeo.MapGuide.MgDisposableCollection.html",
    "title": "Class MgDisposableCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDisposableCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll This class represents a collection of MgDisposable objects. The objects are owned and managed by the collection. public class MgDisposableCollection : MgCollection, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgDisposableCollection Implements IDisposable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgDisposableCollection() Constructs a DisposableCollection. The collection is initially empty. public MgDisposableCollection() Methods Add(MgDisposable) Adds the specified item to the end of the collection. public void Add(MgDisposable value) Parameters value MgDisposable Input value Clear() Removes all items from the collection. public void Clear() Contains(MgDisposable) public virtual bool Contains(MgDisposable value) Parameters value MgDisposable Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetItem(int) public virtual MgDisposable GetItem(int index) Parameters index int Returns MgDisposable IndexOf(MgDisposable) public virtual int IndexOf(MgDisposable value) Parameters value MgDisposable Returns int Insert(int, MgDisposable) Inserts the specified item at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgDisposable value) Parameters index int Input index value MgDisposable Input value Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgDisposable) Removes the specified item from the collection. public bool Remove(MgDisposable value) Parameters value MgDisposable Input value Returns bool Returns true if removal was successful RemoveAt(int) Removes the specified item from the collection. Throws an invalid argument exception if the item does not exist within the collection. public void RemoveAt(int index) Parameters index int Input index Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgDisposable) Sets the item in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgDisposable value) Parameters index int Input index value MgDisposable Input value Exceptions MgException MgIndexOutOfRangeException\"> ToXml() Creates an XML document representing the collection. public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgDoubleProperty.html": {
    "href": "api/OSGeo.MapGuide.MgDoubleProperty.html",
    "title": "Class MgDoubleProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDoubleProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores double precision floating point data with an associated key name. An instance of this class can be stored in an MgPropertyCollection object. The key name can be used to retrieve the instance from the property collection. public class MgDoubleProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgDoubleProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgDoubleProperty(string, double) Constructs an MgDoubleProperty object. public MgDoubleProperty(string name, double value) Parameters name string (String/string) The name of the property. value double (double) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public double Value { get; set; } Property Value double Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Double. GetValue() Gets the property value. public double GetValue() Returns double Returns the property value. SetValue(double) Sets the property value. public void SetValue(double value) Parameters value double (double) The value of the property."
  },
  "api/OSGeo.MapGuide.MgDrawingService.html": {
    "href": "api/OSGeo.MapGuide.MgDrawingService.html",
    "title": "Class MgDrawingService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDrawingService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgDrawingService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgDrawingService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DescribeDrawing(MgResourceIdentifier) Gets the manifest.xml document which describes the supported document interfaces, the document properties, the sections and their contents, and section dependencies. public MgByteReader DescribeDrawing(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. Returns MgByteReader Returns an MgByteReader object containing the manifest.xml file. Exceptions MgException with code (MgInvalidCastException) if there are problems reading the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnumerateLayers(MgResourceIdentifier, string) Gets the names of the layers in a DWF section. public MgStringCollection EnumerateLayers(MgResourceIdentifier resource, string sectionName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. sectionName string (String/string) Name of the section. Section names can be retrieved via EnumerateSections or from the manifest.xml file via DescribeDrawing. Returns MgStringCollection Returns a collection of layer names. Exceptions MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgInvalidDwfSectionException) if the 2d graphics resource MgException with code (MgNullReferenceException) no data could be read from the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. MgException with code (MgTemporaryFileNotAvailableException) if a temporary file needed EnumerateSectionResources(MgResourceIdentifier, string) Enumerates the resources of a DWF section (sometimes called a sheet). public MgByteReader EnumerateSectionResources(MgResourceIdentifier resource, string sectionName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. sectionName string (String/string) Name of the section. Section names can be retrieved via EnumerateSections or from the manifest.xml file via DescribeDrawing. Returns MgByteReader Returns an MgByteReader object containing the list of Exceptions MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgInvalidDwfSectionException) if the 2d graphics resource MgException with code (MgNullReferenceException) no data could be read from the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. EnumerateSections(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader EnumerateSections(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. Returns MgByteReader Returns an MgByteReader object containing the list of Exceptions MgException with code (MgNullReferenceException) no data could be read from the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. GetCoordinateSpace(MgResourceIdentifier) Gets the coordinate system assigned to the DWF drawing. public string GetCoordinateSpace(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. Returns string Exceptions MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the GetDrawing(MgResourceIdentifier) Returns the DWF stream for a drawing specified by resource identifier. public MgByteReader GetDrawing(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. Returns MgByteReader Returns an MgByteReader object containing the DWF. Exceptions MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the resource content GetLayer(MgResourceIdentifier, string, string) Gets a layer from a particular section of a DWF. public MgByteReader GetLayer(MgResourceIdentifier resource, string sectionName, string layerName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. sectionName string (String/string) Name of the section. Section names can be retrieved via EnumerateSections or from the the manifest.xml file file via DescribeDrawing. layerName string (String/string) Name of the layer. Layer names can can be retrieved via EnumerateLayers. Returns MgByteReader Returns DWF stream containing the specified layer in the specified section. Exceptions MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgInvalidDwfSectionException) if the 2d graphics resource MgException with code (MgNullReferenceException) if data could not be read from MgException with code (MgOutOfMemoryException) if there is insufficient memory to MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgLayerNotFoundException) if the requested layer does not MgException with code (MgDwfException) if the DWF component encounters errors. GetSection(MgResourceIdentifier, string) Gets a DWF containing only the requested section (sometimes called a sheet). public MgByteReader GetSection(MgResourceIdentifier resource, string sectionName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. sectionName string (String/string) Name of the section. Section names can be retrieved via EnumerateSections or from the manifest.xml file via DescribeDrawing. Returns MgByteReader Returns an MgByteReader object containing the DWF for the specified section. Exceptions MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgInvalidDwfSectionException) if the 2d graphics resource MgException with code (MgNullReferenceException) no data could be read from the MgException with code (MgOutOfMemoryException) if there is insufficient memory to MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. MgException with code (MgTemporaryFileNotAvailableException) if a temporary file needed GetSectionResource(MgResourceIdentifier, string) Gets a specific resource from the DWF. public MgByteReader GetSectionResource(MgResourceIdentifier resource, string resourceName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. resourceName string (String/string) Name of the resource. Resource names can be retrieved via EnumerateSectionResources or from the manifest.xml file via DescribeDrawing. Returns MgByteReader Returns an MgByteReader object containing the resource. The MIME type will be what is specified in manifest.xml for the specified resource (for example, image/png or text/xml). Exceptions MgException with code (MgInvalidArgumentException) if the requested resourceName MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgDwfSectionResourceNotFoundException) if the requested MgException with code (MgInvalidCastException) if there are problems reading the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. MgException with code (MgTemporaryFileNotAvailableException) if a temporary file needed"
  },
  "api/OSGeo.MapGuide.MgDwfVersion.html": {
    "href": "api/OSGeo.MapGuide.MgDwfVersion.html",
    "title": "Class MgDwfVersion | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgDwfVersion Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgDwfVersion : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgDwfVersion Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgDwfVersion(string, string) Creates a DWF specification. public MgDwfVersion(string fileVersion, string schemaVersion) Parameters fileVersion string (String/string) Supported client-side DWF file version. schemaVersion string (String/string) Supported client-side DWF schema version. Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetFileVersion() Gets the DWF file version string. public string GetFileVersion() Returns string Returns the DWF file version as a string. GetSchemaVersion() Gets the DWF schema version. public string GetSchemaVersion() Returns string Returns the DWF schema version as a string. SetFileVersion(string) Sets the supported client-side file version for DWF. public void SetFileVersion(string fileVersion) Parameters fileVersion string (String/string) Supported client-side file version of DWF. SetSchemaVersion(string) Sets the supported client-side schema version for DWF. public void SetSchemaVersion(string schemaVersion) Parameters schemaVersion string (String/string) Input supported client-side schema version"
  },
  "api/OSGeo.MapGuide.MgEnvelope.html": {
    "href": "api/OSGeo.MapGuide.MgEnvelope.html",
    "title": "Class MgEnvelope | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgEnvelope Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgEnvelope represents a bounding box defined in terms of a lower left coordinate and an upper right coordinate. public class MgEnvelope : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgEnvelope Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgEnvelope() Constructs and initializes an \"null\" envelope. public MgEnvelope() MgEnvelope(MgCoordinate) Constructs and initializes an envelope for a region defined by one coordinate. public MgEnvelope(MgCoordinate coord) Parameters coord MgCoordinate (MgCoordinate) The MgCoordinate to use in defining the region. MgEnvelope(MgCoordinate, MgCoordinate) Constructs and initializes an envelope for a region defined by two coordinates. public MgEnvelope(MgCoordinate coord1, MgCoordinate coord2) Parameters coord1 MgCoordinate (MgCoordinate) The first MgCoordinate to use in defining the region. coord2 MgCoordinate (MgCoordinate) The second MgCoordinate to use in defining the region. MgEnvelope(MgEnvelope) Constructs and initializes an envelope that is a copy of another. public MgEnvelope(MgEnvelope envelope) Parameters envelope MgEnvelope (MgEnvelope) The MgEnvelope to copy. MgEnvelope(double, double, double, double) Constructs and initializes an envelope for a region defined by two coordinates , given as four doubles public MgEnvelope(double xMin, double yMin, double xMax, double yMax) Parameters xMin double (double) Left coordinate yMin double (double) Bottom coordinate xMax double (double) Right coordinate yMax double (double) Top coordinate Properties Depth public double Depth { get; } Property Value double Height public double Height { get; } Property Value double LowerLeftCoordinate public MgCoordinate LowerLeftCoordinate { get; } Property Value MgCoordinate UpperRightCoordinate public MgCoordinate UpperRightCoordinate { get; } Property Value MgCoordinate Width public double Width { get; } Property Value double Methods Contains(MgCoordinate) Tests whether the given coordinate lies in or on this envelope. public bool Contains(MgCoordinate coordinate) Parameters coordinate MgCoordinate (MgCoordinate) The MgCoordinate to test containment of. Returns bool True if the coordinate is contained in this envelope, false otherwise. Contains(MgEnvelope) Tests whether the given envelope lies completely inside this Envelope (inclusive of the boundary). public bool Contains(MgEnvelope envelope) Parameters envelope MgEnvelope (MgEnvelope) The MgEnvelope to test containment of. Returns bool True if the envelope argument is contained in this envelope, false otherwise. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool ExpandToInclude(MgCoordinate) Enlarges the boundary of the envelope so that it contains the given coordinate. public void ExpandToInclude(MgCoordinate coordinate) Parameters coordinate MgCoordinate (MgCoordinate) The MgCoordinate to expand this envelope to include. ExpandToInclude(MgEnvelope) Enlarges the boundary of the envelope so that it contains the given envelope. public void ExpandToInclude(MgEnvelope envelope) Parameters envelope MgEnvelope (MgEnvelope) The MgEnvelope to expand this envelope to include. GetDepth() Returns the difference between the maximum and minimum Z values. public double GetDepth() Returns double A double representing the depth of the envelope. GetHeight() Returns the difference between the maximum and minimum Y values. public double GetHeight() Returns double A double representing the height of the envelope. GetLowerLeftCoordinate() Returns the lower left coordinate of the envelope. public MgCoordinate GetLowerLeftCoordinate() Returns MgCoordinate An MgCoordinate that defines the lower left corner of the envelope. GetUpperRightCoordinate() Returns the upper right coordinate of the envelope. public MgCoordinate GetUpperRightCoordinate() Returns MgCoordinate An MgCoordinate that defines the upper right corner of the envelope. GetWidth() Returns the difference between the maximum and minimum X values. public double GetWidth() Returns double A double representing the width of the envelope. Intersects(MgEnvelope) Tests if the region defined by another envelope overlaps (intersects) the region of this envelope. public bool Intersects(MgEnvelope envelope) Parameters envelope MgEnvelope (MgEnvelope) The MgEnvelope to test for intersection. Returns bool True if the envelopes intersect, false otherwise. IsNull() Tests whether this Envelope is \"null\" or not. public bool IsNull() Returns bool True if this envelope is \"null\", false otherwise. MakeNull() Makes this envelope a \"null\" envelope. public void MakeNull() Transform(MgTransform) Returns a transformed copy of this envelope. public MgEnvelope Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this envelope. Returns MgEnvelope An MgEnvelope that is a copy of this one but whose region is transformed."
  },
  "api/OSGeo.MapGuide.MgException.html": {
    "href": "api/OSGeo.MapGuide.MgException.html",
    "title": "Class MgException | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgException Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Base class for exceptions. public class MgException : ManagedException, ISerializable, IDisposable Inheritance object Exception ManagedException MgException Implements ISerializable IDisposable Inherited Members ManagedException.Message ManagedException.StackTrace ManagedException.ToString() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields swigCMemOwn protected bool swigCMemOwn Field Value bool Methods AddStackTraceInfo(string, int, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Add updated stack information to the exception. public void AddStackTraceInfo(string methodName, int lineNumber, string fileName) Parameters methodName string Unqualified method name to add to call stack lineNumber int Line number to add to call stack fileName string File name to add to call stack AddStackTraceInfo(string, string, int, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Add updated stack information to the exception. public void AddStackTraceInfo(string methodName, string methodParams, int lineNumber, string fileName) Parameters methodName string Unqualified method name to add to call stack methodParams string String of method parameters to add to call stack lineNumber int Line number to add to call stack fileName string File name to add to call stack Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~MgException() protected ~MgException() GetDetails() Retrieve the formatted exception details. This includes the user readable string and the stack of method names which generated the error. This string provides more information to web application developers than the message. If a method does not have any parameters it will be omitted from the details. public string GetDetails() Returns string Formatted exception details in current locale. See OSGeo.MapGuide.MgSiteConnection for information on specifying the locale. GetDetails(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Retrieve the formatted exception details for the specified locale. public string GetDetails(string locale) Parameters locale string The locale identifier to format the details text. Locale codes are 2 letters language codes defined by ISO 639-1. Please refer to http://www.loc.gov/standards/iso639-2/englangn.html Returns string Formatted exception details GetExceptionCode() Retrieve the exception code for this exception public string GetExceptionCode() Returns string The exception code GetExceptionMessage() Retrieve the formatted exception message. This is the localized and end user readable string. public string GetExceptionMessage() Returns string Localized exception message. See OSGeo.MapGuide.MgSiteConnection for information on specifying the locale. GetExceptionMessage(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Retrieve the formatted exception message for the specified locale. public string GetExceptionMessage(string locale) Parameters locale string The locale identifier to format the details text. Locale codes are 2 letters language codes defined by ISO 639-1. Please refer to http://www.loc.gov/standards/iso639-2/englangn.html Returns string Formatted exception message GetNativeErrorCode() Retrieve the native error code that may be set by errors from thirdparty libraries public long GetNativeErrorCode() Returns long The native error code GetStackTrace() Retrieve the formatted exception stack trace. This includes file and line numbers, method names, and method parameters. This string is useful for debugging !MapGuide. public string GetStackTrace() Returns string Call stack trace with method parameters GetStackTrace(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Retrieve the formatted exception stack trace for the specified locale. public string GetStackTrace(string locale) Parameters locale string The locale identifier to format the details text. Locale codes are 2 letters language codes defined by ISO 639-1. Please refer to http://www.loc.gov/standards/iso639-2/englangn.html Returns string Formatted exception stack trace"
  },
  "api/OSGeo.MapGuide.MgExceptionCodes.html": {
    "href": "api/OSGeo.MapGuide.MgExceptionCodes.html",
    "title": "Class MgExceptionCodes | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgExceptionCodes Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll public class MgExceptionCodes Inheritance object MgExceptionCodes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MgAllProviderConnectionsUsedException public const string MgAllProviderConnectionsUsedException = \"MgAllProviderConnectionsUsedException\" Field Value string MgArgumentOutOfRangeException public const string MgArgumentOutOfRangeException = \"MgArgumentOutOfRangeException\" Field Value string MgArrayTypeMismatchException public const string MgArrayTypeMismatchException = \"MgArrayTypeMismatchException\" Field Value string MgAuthenticationFailedException public const string MgAuthenticationFailedException = \"MgAuthenticationFailedException\" Field Value string MgClassNotFoundException public const string MgClassNotFoundException = \"MgClassNotFoundException\" Field Value string MgConfigurationException public const string MgConfigurationException = \"MgConfigurationException\" Field Value string MgConfigurationLoadFailedException public const string MgConfigurationLoadFailedException = \"MgConfigurationLoadFailedException\" Field Value string MgConfigurationSaveFailedException public const string MgConfigurationSaveFailedException = \"MgConfigurationSaveFailedException\" Field Value string MgConnectionFailedException public const string MgConnectionFailedException = \"MgConnectionFailedException\" Field Value string MgConnectionNotOpenException public const string MgConnectionNotOpenException = \"MgConnectionNotOpenException\" Field Value string MgCoordinateSystemComputationFailedException public const string MgCoordinateSystemComputationFailedException = \"MgCoordinateSystemComputationFailedException\" Field Value string MgCoordinateSystemConversionFailedException public const string MgCoordinateSystemConversionFailedException = \"MgCoordinateSystemConversionFailedException\" Field Value string MgCoordinateSystemInitializationFailedException public const string MgCoordinateSystemInitializationFailedException = \"MgCoordinateSystemInitializationFailedException\" Field Value string MgCoordinateSystemLoadFailedException public const string MgCoordinateSystemLoadFailedException = \"MgCoordinateSystemLoadFailedException\" Field Value string MgCoordinateSystemMeasureFailedException public const string MgCoordinateSystemMeasureFailedException = \"MgCoordinateSystemMeasureFailedException\" Field Value string MgCoordinateSystemTransformFailedException public const string MgCoordinateSystemTransformFailedException = \"MgCoordinateSystemTransformFailedException\" Field Value string MgDateTimeException public const string MgDateTimeException = \"MgDateTimeException\" Field Value string MgDbException public const string MgDbException = \"MgDbException\" Field Value string MgDbXmlException public const string MgDbXmlException = \"MgDbXmlException\" Field Value string MgDecryptionException public const string MgDecryptionException = \"MgDecryptionException\" Field Value string MgDirectoryNotFoundException public const string MgDirectoryNotFoundException = \"MgDirectoryNotFoundException\" Field Value string MgDivideByZeroException public const string MgDivideByZeroException = \"MgDivideByZeroException\" Field Value string MgDomainException public const string MgDomainException = \"MgDomainException\" Field Value string MgDuplicateDirectoryException public const string MgDuplicateDirectoryException = \"MgDuplicateDirectoryException\" Field Value string MgDuplicateFileException public const string MgDuplicateFileException = \"MgDuplicateFileException\" Field Value string MgDuplicateGroupException public const string MgDuplicateGroupException = \"MgDuplicateGroupException\" Field Value string MgDuplicateNameException public const string MgDuplicateNameException = \"MgDuplicateNameException\" Field Value string MgDuplicateObjectException public const string MgDuplicateObjectException = \"MgDuplicateObjectException\" Field Value string MgDuplicateParameterException public const string MgDuplicateParameterException = \"MgDuplicateParameterException\" Field Value string MgDuplicateRepositoryException public const string MgDuplicateRepositoryException = \"MgDuplicateRepositoryException\" Field Value string MgDuplicateResourceDataException public const string MgDuplicateResourceDataException = \"MgDuplicateResourceDataException\" Field Value string MgDuplicateResourceException public const string MgDuplicateResourceException = \"MgDuplicateResourceException\" Field Value string MgDuplicateRoleException public const string MgDuplicateRoleException = \"MgDuplicateRoleException\" Field Value string MgDuplicateServerException public const string MgDuplicateServerException = \"MgDuplicateServerException\" Field Value string MgDuplicateSessionException public const string MgDuplicateSessionException = \"MgDuplicateSessionException\" Field Value string MgDuplicateUserException public const string MgDuplicateUserException = \"MgDuplicateUserException\" Field Value string MgDwfException public const string MgDwfException = \"MgDwfException\" Field Value string MgDwfSectionNotFoundException public const string MgDwfSectionNotFoundException = \"MgDwfSectionNotFoundException\" Field Value string MgDwfSectionResourceNotFoundException public const string MgDwfSectionResourceNotFoundException = \"MgDwfSectionResourceNotFoundException\" Field Value string MgEmptyFeatureSetException public const string MgEmptyFeatureSetException = \"MgEmptyFeatureSetException\" Field Value string MgEncryptionException public const string MgEncryptionException = \"MgEncryptionException\" Field Value string MgEndOfStreamException public const string MgEndOfStreamException = \"MgEndOfStreamException\" Field Value string MgEvaluationExpiredException public const string MgEvaluationExpiredException = \"MgEvaluationExpiredException\" Field Value string MgFdoException public const string MgFdoException = \"MgFdoException\" Field Value string MgFeatureServiceException public const string MgFeatureServiceException = \"MgFeatureServiceException\" Field Value string MgFileIoException public const string MgFileIoException = \"MgFileIoException\" Field Value string MgFileNotFoundException public const string MgFileNotFoundException = \"MgFileNotFoundException\" Field Value string MgGeometryException public const string MgGeometryException = \"MgGeometryException\" Field Value string MgGridDensityException public const string MgGridDensityException = \"MgGridDensityException\" Field Value string MgGroupNotFoundException public const string MgGroupNotFoundException = \"MgGroupNotFoundException\" Field Value string MgIndexOutOfRangeException public const string MgIndexOutOfRangeException = \"MgIndexOutOfRangeException\" Field Value string MgInvalidArgumentException public const string MgInvalidArgumentException = \"MgInvalidArgumentException\" Field Value string MgInvalidCastException public const string MgInvalidCastException = \"MgInvalidCastException\" Field Value string MgInvalidCoordinateSystemException public const string MgInvalidCoordinateSystemException = \"MgInvalidCoordinateSystemException\" Field Value string MgInvalidCoordinateSystemTypeException public const string MgInvalidCoordinateSystemTypeException = \"MgInvalidCoordinateSystemTypeException\" Field Value string MgInvalidCoordinateSystemUnitsException public const string MgInvalidCoordinateSystemUnitsException = \"MgInvalidCoordinateSystemUnitsException\" Field Value string MgInvalidDwfPackageException public const string MgInvalidDwfPackageException = \"MgInvalidDwfPackageException\" Field Value string MgInvalidDwfSectionException public const string MgInvalidDwfSectionException = \"MgInvalidDwfSectionException\" Field Value string MgInvalidFeatureSourceException public const string MgInvalidFeatureSourceException = \"MgInvalidFeatureSourceException\" Field Value string MgInvalidIpAddressException public const string MgInvalidIpAddressException = \"MgInvalidIpAddressException\" Field Value string MgInvalidLayerDefinitionException public const string MgInvalidLayerDefinitionException = \"MgInvalidLayerDefinitionException\" Field Value string MgInvalidLicenseException public const string MgInvalidLicenseException = \"MgInvalidLicenseException\" Field Value string MgInvalidLogEntryException public const string MgInvalidLogEntryException = \"MgInvalidLogEntryException\" Field Value string MgInvalidMapDefinitionException public const string MgInvalidMapDefinitionException = \"MgInvalidMapDefinitionException\" Field Value string MgInvalidMimeTypeException public const string MgInvalidMimeTypeException = \"MgInvalidMimeTypeException\" Field Value string MgInvalidOperationException public const string MgInvalidOperationException = \"MgInvalidOperationException\" Field Value string MgInvalidOperationVersionException public const string MgInvalidOperationVersionException = \"MgInvalidOperationVersionException\" Field Value string MgInvalidPasswordException public const string MgInvalidPasswordException = \"MgInvalidPasswordException\" Field Value string MgInvalidPrintLayoutFontSizeUnitsException public const string MgInvalidPrintLayoutFontSizeUnitsException = \"MgInvalidPrintLayoutFontSizeUnitsException\" Field Value string MgInvalidPrintLayoutPositionUnitsException public const string MgInvalidPrintLayoutPositionUnitsException = \"MgInvalidPrintLayoutPositionUnitsException\" Field Value string MgInvalidPrintLayoutSizeUnitsException public const string MgInvalidPrintLayoutSizeUnitsException = \"MgInvalidPrintLayoutSizeUnitsException\" Field Value string MgInvalidPropertyTypeException public const string MgInvalidPropertyTypeException = \"MgInvalidPropertyTypeException\" Field Value string MgInvalidRepositoryNameException public const string MgInvalidRepositoryNameException = \"MgInvalidRepositoryNameException\" Field Value string MgInvalidRepositoryTypeException public const string MgInvalidRepositoryTypeException = \"MgInvalidRepositoryTypeException\" Field Value string MgInvalidResourceDataNameException public const string MgInvalidResourceDataNameException = \"MgInvalidResourceDataNameException\" Field Value string MgInvalidResourceDataTypeException public const string MgInvalidResourceDataTypeException = \"MgInvalidResourceDataTypeException\" Field Value string MgInvalidResourceNameException public const string MgInvalidResourceNameException = \"MgInvalidResourceNameException\" Field Value string MgInvalidResourcePathException public const string MgInvalidResourcePathException = \"MgInvalidResourcePathException\" Field Value string MgInvalidResourcePreProcessingTypeException public const string MgInvalidResourcePreProcessingTypeException = \"MgInvalidResourcePreProcessingTypeException\" Field Value string MgInvalidResourceTypeException public const string MgInvalidResourceTypeException = \"MgInvalidResourceTypeException\" Field Value string MgInvalidSerialNumberException public const string MgInvalidSerialNumberException = \"MgInvalidSerialNumberException\" Field Value string MgInvalidServerNameException public const string MgInvalidServerNameException = \"MgInvalidServerNameException\" Field Value string MgInvalidStreamHeaderException public const string MgInvalidStreamHeaderException = \"MgInvalidStreamHeaderException\" Field Value string MgInvalidWatermarkDefinitionException public const string MgInvalidWatermarkDefinitionException = \"MgInvalidWatermarkDefinitionException\" Field Value string MgIoException public const string MgIoException = \"MgIoException\" Field Value string MgLayerNotFoundException public const string MgLayerNotFoundException = \"MgLayerNotFoundException\" Field Value string MgLengthException public const string MgLengthException = \"MgLengthException\" Field Value string MgLicenseException public const string MgLicenseException = \"MgLicenseException\" Field Value string MgLicenseExpiredException public const string MgLicenseExpiredException = \"MgLicenseExpiredException\" Field Value string MgLogOpenFailedException public const string MgLogOpenFailedException = \"MgLogOpenFailedException\" Field Value string MgLogicException public const string MgLogicException = \"MgLogicException\" Field Value string MgNotFiniteNumberException public const string MgNotFiniteNumberException = \"MgNotFiniteNumberException\" Field Value string MgNotImplementedException public const string MgNotImplementedException = \"MgNotImplementedException\" Field Value string MgNullArgumentException public const string MgNullArgumentException = \"MgNullArgumentException\" Field Value string MgNullPropertyValueException public const string MgNullPropertyValueException = \"MgNullPropertyValueException\" Field Value string MgNullReferenceException public const string MgNullReferenceException = \"MgNullReferenceException\" Field Value string MgObjectNotFoundException public const string MgObjectNotFoundException = \"MgObjectNotFoundException\" Field Value string MgOperationProcessingException public const string MgOperationProcessingException = \"MgOperationProcessingException\" Field Value string MgOutOfMemoryException public const string MgOutOfMemoryException = \"MgOutOfMemoryException\" Field Value string MgOutOfRangeException public const string MgOutOfRangeException = \"MgOutOfRangeException\" Field Value string MgOverflowException public const string MgOverflowException = \"MgOverflowException\" Field Value string MgParameterNotFoundException public const string MgParameterNotFoundException = \"MgParameterNotFoundException\" Field Value string MgPathTooLongException public const string MgPathTooLongException = \"MgPathTooLongException\" Field Value string MgPermissionDeniedException public const string MgPermissionDeniedException = \"MgPermissionDeniedException\" Field Value string MgPlatformNotSupportedException public const string MgPlatformNotSupportedException = \"MgPlatformNotSupportedException\" Field Value string MgPortNotAvailableException public const string MgPortNotAvailableException = \"MgPortNotAvailableException\" Field Value string MgPrintToScaleModeNotSelectedException public const string MgPrintToScaleModeNotSelectedException = \"MgPrintToScaleModeNotSelectedException\" Field Value string MgRasterTransformationNotSupportedException public const string MgRasterTransformationNotSupportedException = \"MgRasterTransformationNotSupportedException\" Field Value string MgRepositoryCreationFailedException public const string MgRepositoryCreationFailedException = \"MgRepositoryCreationFailedException\" Field Value string MgRepositoryNotFoundException public const string MgRepositoryNotFoundException = \"MgRepositoryNotFoundException\" Field Value string MgRepositoryNotOpenException public const string MgRepositoryNotOpenException = \"MgRepositoryNotOpenException\" Field Value string MgRepositoryOpenFailedException public const string MgRepositoryOpenFailedException = \"MgRepositoryOpenFailedException\" Field Value string MgResourceBusyException public const string MgResourceBusyException = \"MgResourceBusyException\" Field Value string MgResourceDataNotFoundException public const string MgResourceDataNotFoundException = \"MgResourceDataNotFoundException\" Field Value string MgResourceNotFoundException public const string MgResourceNotFoundException = \"MgResourceNotFoundException\" Field Value string MgResourceTagNotFoundException public const string MgResourceTagNotFoundException = \"MgResourceTagNotFoundException\" Field Value string MgResourcesException public const string MgResourcesException = \"MgResourcesException\" Field Value string MgResourcesLoadFailedException public const string MgResourcesLoadFailedException = \"MgResourcesLoadFailedException\" Field Value string MgRoleNotFoundException public const string MgRoleNotFoundException = \"MgRoleNotFoundException\" Field Value string MgRuntimeException public const string MgRuntimeException = \"MgRuntimeException\" Field Value string MgServerNotFoundException public const string MgServerNotFoundException = \"MgServerNotFoundException\" Field Value string MgServerNotOnlineException public const string MgServerNotOnlineException = \"MgServerNotOnlineException\" Field Value string MgServiceNotAvailableException public const string MgServiceNotAvailableException = \"MgServiceNotAvailableException\" Field Value string MgServiceNotSupportedException public const string MgServiceNotSupportedException = \"MgServiceNotSupportedException\" Field Value string MgSessionExpiredException public const string MgSessionExpiredException = \"MgSessionExpiredException\" Field Value string MgSessionNotFoundException public const string MgSessionNotFoundException = \"MgSessionNotFoundException\" Field Value string MgStreamIoException public const string MgStreamIoException = \"MgStreamIoException\" Field Value string MgStylizeLayerFailedException public const string MgStylizeLayerFailedException = \"MgStylizeLayerFailedException\" Field Value string MgTemporaryFileNotAvailableException public const string MgTemporaryFileNotAvailableException = \"MgTemporaryFileNotAvailableException\" Field Value string MgUnauthorizedAccessException public const string MgUnauthorizedAccessException = \"MgUnauthorizedAccessException\" Field Value string MgUnclassifiedException public const string MgUnclassifiedException = \"MgUnclassifiedException\" Field Value string MgUnderflowException public const string MgUnderflowException = \"MgUnderflowException\" Field Value string MgUnknownTileProviderException public const string MgUnknownTileProviderException = \"MgUnknownTileProviderException\" Field Value string MgUnsupportedProviderThreadModelException public const string MgUnsupportedProviderThreadModelException = \"MgUnsupportedProviderThreadModelException\" Field Value string MgUnsupportedTileProviderException public const string MgUnsupportedTileProviderException = \"MgUnsupportedTileProviderException\" Field Value string MgUriFormatException public const string MgUriFormatException = \"MgUriFormatException\" Field Value string MgUserNotFoundException public const string MgUserNotFoundException = \"MgUserNotFoundException\" Field Value string MgXmlException public const string MgXmlException = \"MgXmlException\" Field Value string MgXmlParserException public const string MgXmlParserException = \"MgXmlParserException\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgFeatureAggregateOptions.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureAggregateOptions.html",
    "title": "Class MgFeatureAggregateOptions | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureAggregateOptions Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Use this class to set the filter criteria used to select groups of features from a datastore or for restricting the values returned to be unique. public class MgFeatureAggregateOptions : MgFeatureQueryOptions, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureQueryOptions MgFeatureAggregateOptions Implements IDisposable Inherited Members MgFeatureQueryOptions.AddFeatureProperty(string) MgFeatureQueryOptions.AddComputedProperty(string, string) MgFeatureQueryOptions.SetFilter(string) MgFeatureQueryOptions.SetBinaryOperator(bool) MgFeatureQueryOptions.SetSpatialFilter(string, MgGeometry, int) MgFeatureQueryOptions.SetOrderingFilter(MgStringCollection, int) MgFeatureQueryOptions.RemoveFeatureProperty(string) MgFeatureQueryOptions.RemoveComputedProperty(string) MgFeatureQueryOptions.SetFetchSize(int) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgFeatureAggregateOptions() Constructs an MgFeatureAggregateOptions object. public MgFeatureAggregateOptions() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool SelectDistinct(bool) Use this method to restrict the values returned by a select operation to be unique. public void SelectDistinct(bool yes) Parameters yes bool (boolean/bool) If true, apply the distinct operation; otherwise do not apply the distinct operation; the latter is the default. SetGroupingFilter(MgStringCollection, string) Modifies a select operation with a grouping filter so that the results are grouped. public void SetGroupingFilter(MgStringCollection groupByProperties, string groupFilter) Parameters groupByProperties MgStringCollection (MgStringCollection) The collection of properties to be used in the grouping filter specified in the second parameter. groupFilter string (String/string) The grouping filter expression. Exceptions MgException MgInvalidArgumentException\">"
  },
  "api/OSGeo.MapGuide.MgFeatureCommand.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureCommand.html",
    "title": "Class MgFeatureCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Is the abstract base class for feature command classes: MgDeleteFeatures, MgInsertFeatures, and MgUpdateFeatures. public class MgFeatureCommand : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureCommand Implements IDisposable Derived MgDeleteFeatures MgInsertFeatures MgUpdateFeatures Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCommandType() public virtual int GetCommandType() Returns int"
  },
  "api/OSGeo.MapGuide.MgFeatureCommandCollection.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureCommandCollection.html",
    "title": "Class MgFeatureCommandCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureCommandCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Represents a collection of feature commands. public class MgFeatureCommandCollection : MgSerializable, IDisposable, IList<MgFeatureCommand>, ICollection<MgFeatureCommand>, IEnumerable<MgFeatureCommand>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureCommandCollection Implements IDisposable IList<MgFeatureCommand> ICollection<MgFeatureCommand> IEnumerable<MgFeatureCommand> IEnumerable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgFeatureCommandCollection() Constructor. Creates an empty collection of feature commands. public MgFeatureCommandCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgFeatureCommand this[int index] { get; set; } Parameters index int Property Value MgFeatureCommand Methods Add(MgFeatureCommand) Adds the specified command to the end of the collection. public void Add(MgFeatureCommand command) Parameters command MgFeatureCommand (MgFeatureCommand) One of type MgDeleteFeatures, MgInsertFeatures, or MgUpdateFeatures Clear() Removes all commands from the collection. public void Clear() Contains(MgFeatureCommand) public bool Contains(MgFeatureCommand command) Parameters command MgFeatureCommand Returns bool CopyTo(MgFeatureCommand[], int) public void CopyTo(MgFeatureCommand[] array, int arrayIndex) Parameters array MgFeatureCommand[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public int GetCount() Returns int GetEnumerator() public IEnumerator<MgFeatureCommand> GetEnumerator() Returns IEnumerator<MgFeatureCommand> GetItem(int) public MgFeatureCommand GetItem(int index) Parameters index int Returns MgFeatureCommand IndexOf(MgFeatureCommand) public int IndexOf(MgFeatureCommand command) Parameters command MgFeatureCommand Returns int Insert(int, MgFeatureCommand) Inserts the specified command at the specified index within the collection. Items following the insertion point are moved down to accommodate the new command. public void Insert(int index, MgFeatureCommand command) Parameters index int (int) Input index command MgFeatureCommand (MgFeatureCommand) Input command Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range. Remove(MgFeatureCommand) Removes the specified command from the collection. public bool Remove(MgFeatureCommand command) Parameters command MgFeatureCommand (MgFeatureCommand) Input command Returns bool Returns true if removal was successful. RemoveAt(int) Removes the specified command from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range. SetItem(int, MgFeatureCommand) Sets the command in the collection at the specified index to the specified command. If there was already command assigned to specified index, it will be overwritten. public void SetItem(int index, MgFeatureCommand command) Parameters index int (int) Input index command MgFeatureCommand (MgFeatureCommand) Input command Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range."
  },
  "api/OSGeo.MapGuide.MgFeatureCommandType.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureCommandType.html",
    "title": "Class MgFeatureCommandType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureCommandType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Is a set of constants used to specify the type of an MgFeatureCommand object. public class MgFeatureCommandType Inheritance object MgFeatureCommandType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DeleteFeatures Specifies the type of an MgDeleteFeatures object. public const int DeleteFeatures = 2 Field Value int InsertFeatures Specifies the type of an MgInsertFeatures object. public const int InsertFeatures = 0 Field Value int LockFeatures Specifies the type of an OSGeo.MapGuide.MgLockFeatures object. public const int LockFeatures = 3 Field Value int UnlockFeatures Specifies the type of an OSGeo.MapGuide.MgUnlockFeatures object. public const int UnlockFeatures = 4 Field Value int UpdateFeatures Specifies the type of an MgUpdateFeatures object. public const int UpdateFeatures = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgFeatureGeometricType.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureGeometricType.html",
    "title": "Class MgFeatureGeometricType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureGeometricType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Is a set of constants specifying the dimensions of geometries which can be stored in a geometry property. public class MgFeatureGeometricType Inheritance object MgFeatureGeometricType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Curve Represents one-dimensional geometric primitives, such as MgLineString and MgCurveString. public const int Curve = 2 Field Value int Point Represents zero-dimensional geometric primitives, such as MgPoint. public const int Point = 1 Field Value int Solid Represents three-dimensional geometric primitives, such as Cubes. public const int Solid = 8 Field Value int Surface Represents two-dimensional geometric primitives, such as MgPolygon and MgCurvePolygon. public const int Surface = 4 Field Value int"
  },
  "api/OSGeo.MapGuide.MgFeatureInformation.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureInformation.html",
    "title": "Class MgFeatureInformation | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureInformation Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Information about features. public class MgFeatureInformation : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureInformation Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetHyperlink() Get the hyperlink URL text public string GetHyperlink() Returns string GetProperties() Get the collection of properties for the described feature. public MgPropertyCollection GetProperties() Returns MgPropertyCollection GetSelection() Get the selection set the described features are part of. public MgSelection GetSelection() Returns MgSelection GetTooltip() Get the tooltip text. public string GetTooltip() Returns string ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document containing the feature information. public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgFeatureProperty.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureProperty.html",
    "title": "Class MgFeatureProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores MgFeatureReader data with an associated key name. public class MgFeatureProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgFeatureProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgFeatureProperty(string, MgFeatureReader) Constructs an MgFeatureProperty object. public MgFeatureProperty(string name, MgFeatureReader value) Parameters name string (String/string) The name of property. value MgFeatureReader (MgFeatureReader) The value of property. Properties PropertyType public short PropertyType { get; } Property Value short Value public MgFeatureReader Value { get; set; } Property Value MgFeatureReader Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Feature. GetValue() Gets the property value. public MgFeatureReader GetValue() Returns MgFeatureReader Returns the property value. SetValue(MgFeatureReader) Sets the property value. public void SetValue(MgFeatureReader value) Parameters value MgFeatureReader (MgFeatureReader) The value of property."
  },
  "api/OSGeo.MapGuide.MgFeaturePropertyType.html": {
    "href": "api/OSGeo.MapGuide.MgFeaturePropertyType.html",
    "title": "Class MgFeaturePropertyType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeaturePropertyType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Defines names for the different types of property definitions. See MgPropertyDefinition::GetPropertyType. public class MgFeaturePropertyType Inheritance object MgFeaturePropertyType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssociationProperty Type name for an association property definition. public const int AssociationProperty = 103 Field Value int DataProperty Type name for a data property definition. See OSGeo.MapGuide.MgDataPropertyDefinition. public const int DataProperty = 100 Field Value int GeometricProperty Type name for a geometric property definition. See OSGeo.MapGuide.MgGeometricPropertyDefinition. public const int GeometricProperty = 102 Field Value int ObjectProperty Type name for an object property definition. See OSGeo.MapGuide.MgObjectPropertyDefinition. public const int ObjectProperty = 101 Field Value int RasterProperty Type name for a raster property definition. See OSGeo.MapGuide.MgRasterPropertyDefinition. public const int RasterProperty = 104 Field Value int"
  },
  "api/OSGeo.MapGuide.MgFeatureQueryOptions.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureQueryOptions.html",
    "title": "Class MgFeatureQueryOptions | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureQueryOptions Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Use this class to set filter criteria for selecting features public class MgFeatureQueryOptions : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureQueryOptions Implements IDisposable Derived MgFeatureAggregateOptions Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgFeatureQueryOptions() Constructs an MgFeatureQueryOptions object. public MgFeatureQueryOptions() Methods AddComputedProperty(string, string) Define an alias for a computed property and an expression for what is to be computed. In this SQL example, \"select min(aDouble + aSingle) as minF, min(anInt16 + anInt16) as minI from featclass;\", minF and minI are computed properties. Call this method for each computed property that you add. public int AddComputedProperty(string aliasName, string expression) Parameters aliasName string (String/string) The name of the computed property. expression string (String/string) The expression to be associated with the name of the computed property. Returns int Returns the total number of properties added. Exceptions MgException with code (MgInvalidArgumentException) if aliasName or expression is empty AddFeatureProperty(string) Call this method for each class property whose value you want retrieved by the MgFeatureService::SelectFeatures() call. Not calling this method results in the retrieval of all property values for each feature selected. public int AddFeatureProperty(string propertyName) Parameters propertyName string (String/string) The name of the class property to be added. Returns int Returns the total number of properties added. Exceptions MgException with code (MgInvalidArgumentException) if property name is empty Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool RemoveComputedProperty(string) Removes a computed property. public void RemoveComputedProperty(string aliasName) Parameters aliasName string (String/string) The name of the computed property to be removed. Exceptions MgException MgInvalidArgumentException\"> RemoveFeatureProperty(string) Removes a class property. public void RemoveFeatureProperty(string propertyName) Parameters propertyName string (String/string) The name of the class property to be removed. Exceptions MgException MgInvalidArgumentException\"> SetBinaryOperator(bool) Use this method to join a regular filter with a spatial filter An argument of TRUE results in an AND join, and an argument of FALSE results in an OR join. The binary operator applies only when both the SetFilter() and SetSpatialFilter() methods have been called. If both have been called and SetBinaryOperator() has not been called, an AND join is applied. public void SetBinaryOperator(bool andOr) Parameters andOr bool (boolean/bool) If true, apply an AND join; otherwise apply an OR join. SetFetchSize(int) For queries that return a large number of objects some feature sources support improving performance by setting fetch size in order to reduce the number of database server round trips required to satisfy the selection criteria. Providers that do not use a fetch size will ignore the fetch size parameter. This does not affect the actual results of queries as it is a performance tuning parameter. public void SetFetchSize(int fetchSize) Parameters fetchSize int (int) The fetch size of query. The query returns all of query results if setting the fetch size to 0. SetFilter(string) Sets the filter for this select operation. The filter acts like the where clause in an SQL Select statement. Not calling this method causes all instances of the feature class to be public void SetFilter(string filterText) Parameters filterText string (String/string) The filter text to be applied. Exceptions MgException MgInvalidArgumentException\"> SetOrderingFilter(MgStringCollection, int) Use this method to specify the order (ascending or descending) in which the selected features are returned. public void SetOrderingFilter(MgStringCollection orderByProperties, int orderOption) Parameters orderByProperties MgStringCollection (MgStringCollection) The collection of properties to which the ordering option specified in the second parameter is applied. orderOption int (int) The ordering option, MgOrderingOption::Ascending or MgOrderingOption::Descending. Exceptions MgException MgInvalidArgumentException\"> SetSpatialFilter(string, MgGeometry, int) Use this method to select features whose geometry property satisfies the relationship argument to the geometry argument. The effect is geometryProperty.spatialOperation(geometryArg). By default this filter is joined by the AND operator with the public void SetSpatialFilter(string geometryProperty, MgGeometry geometry, int spatialOperation) Parameters geometryProperty string (String/string) The name of the geometry property belonging the features selected from the datastore geometry MgGeometry (MgGeometry) The geometry object set in relation to the geometry property. spatialOperation int (int) The spatial operation to perform between the lefthand operand (the geometry property) and the righthand operand (the geometry object). The spatial operation value of is one of the MgFeatureSpatialOperations types. Exceptions MgException MgInvalidArgumentException\">"
  },
  "api/OSGeo.MapGuide.MgFeatureReader.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureReader.html",
    "title": "Class MgFeatureReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides a forward-only, read-only iterator for reading features selected from the FDO Provider by the MgFeatureService::SelectFeatures() method call. public class MgFeatureReader : MgReader, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgReader MgFeatureReader Implements IDisposable Derived MgGwsFeatureReader Inherited Members MgReader.ReadNext() MgReader.GetPropertyCount() MgReader.GetPropertyName(int) MgReader.GetPropertyType(string) MgReader.GetPropertyType(int) MgReader.IsNull(string) MgReader.GetBoolean(string) MgReader.GetByte(string) MgReader.GetDateTime(string) MgReader.GetSingle(string) MgReader.GetDouble(string) MgReader.GetInt16(string) MgReader.GetInt32(string) MgReader.GetInt64(string) MgReader.GetString(string) MgReader.GetBLOB(string) MgReader.GetCLOB(string) MgReader.GetGeometry(string) MgReader.GetRaster(string) MgReader.GetPropertyIndex(string) MgReader.IsNull(int) MgReader.GetBoolean(int) MgReader.GetByte(int) MgReader.GetDateTime(int) MgReader.GetSingle(int) MgReader.GetDouble(int) MgReader.GetInt16(int) MgReader.GetInt32(int) MgReader.GetInt64(int) MgReader.GetString(int) MgReader.GetBLOB(int) MgReader.GetCLOB(int) MgReader.GetGeometry(int) MgReader.GetRaster(int) MgReader.Close() MgReader.GetReaderType() MgReader.ToXml() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetClassDefinition() Gets the class definition of the object currently being read. If the user has requested only a subset of the class properties (as specified in the filter text), the class definition reflects what the user has requested, rather than the full class definition. public MgClassDefinition GetClassDefinition() Returns MgClassDefinition Returns an MgClassDefinition object representing the current feature object. Exceptions MgException MgConnectionNotOpenException\"> MgException MgFdoException\"> GetFeatureObject(int) Use this method to obtain the values of the properties belonging to an object contained in the feature class instance. Such an object is a property of the feature class instance with a type of MgPropertyType::Feature. public MgFeatureReader GetFeatureObject(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns MgFeatureReader Returns an MgFeatureReader object, which can be used to access properties of an object contained in the feature object. Exceptions MgException MgInvalidArgumentException\"> MgException MgConnectionNotOpenException\"> MgException MgNullPropertyValueException\"> MgException MgFdoException\"> GetFeatureObject(string) Use this method to obtain the values of the properties belonging to an object contained in the feature class instance. Such an object is a property of the feature class instance with a type of MgPropertyType::Feature. public MgFeatureReader GetFeatureObject(string propertyName) Parameters propertyName string (String/string) The property name. Returns MgFeatureReader Returns an MgFeatureReader object, which can be used to access properties of an object contained in the feature object. Exceptions MgException MgInvalidArgumentException\"> MgException MgConnectionNotOpenException\"> MgException MgNullPropertyValueException\"> MgException MgFdoException\">"
  },
  "api/OSGeo.MapGuide.MgFeatureSchema.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureSchema.html",
    "title": "Class MgFeatureSchema | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureSchema Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Contains one or more feature class definitions, which specify the structure of feature data in a datastore. public class MgFeatureSchema : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgFeatureSchema Implements IDisposable Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgFeatureSchema() Constructs an empty MgFeatureSchema object. public MgFeatureSchema() MgFeatureSchema(string, string) Constructs an MgFeatureSchema object and sets the schema name and description. public MgFeatureSchema(string name, string description) Parameters name string (String/string) The name of the schema. description string (String/string) A description of the schema. Properties Description public string Description { get; set; } Property Value string Name public string Name { get; set; } Property Value string Methods Delete() Marks the feature schema for deletion. public void Delete() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetClasses() Gets the class definitions. public MgClassDefinitionCollection GetClasses() Returns MgClassDefinitionCollection Returns a collection of the class definitions. GetDescription() Gets the schema description. public string GetDescription() Returns string Returns the description of the schema. GetName() Gets the schema name. public string GetName() Returns string Returns the name of the schema. SetDescription(string) Set the schema description. public void SetDescription(string description) Parameters description string (String/string) The description of the schema. SetName(string) Sets the schema name. public void SetName(string name) Parameters name string (String/string) The name of the schema."
  },
  "api/OSGeo.MapGuide.MgFeatureSchemaCollection.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureSchemaCollection.html",
    "title": "Class MgFeatureSchemaCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureSchemaCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll FeatureSchemaCollection represents a collection of feature schemas. public class MgFeatureSchemaCollection : MgCollection, IDisposable, IList<MgFeatureSchema>, ICollection<MgFeatureSchema>, IEnumerable<MgFeatureSchema>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgFeatureSchemaCollection Implements IDisposable IList<MgFeatureSchema> ICollection<MgFeatureSchema> IEnumerable<MgFeatureSchema> IEnumerable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgFeatureSchemaCollection() Constructs a MgFeatureSchemaCollection. The collection is initially empty. public MgFeatureSchemaCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgFeatureSchema this[int index] { get; set; } Parameters index int Property Value MgFeatureSchema Methods Add(MgFeatureSchema) Adds the specified item to the end of the collection. public void Add(MgFeatureSchema value) Parameters value MgFeatureSchema (MgFeatureSchema) Input value Exceptions MgException with code (MgDuplicateObjectException) if the index is a duplicate. Clear() Removes all items from the collection. public void Clear() Contains(MgFeatureSchema) public bool Contains(MgFeatureSchema value) Parameters value MgFeatureSchema Returns bool CopyTo(MgFeatureSchema[], int) public void CopyTo(MgFeatureSchema[] array, int arrayIndex) Parameters array MgFeatureSchema[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetEnumerator() public IEnumerator<MgFeatureSchema> GetEnumerator() Returns IEnumerator<MgFeatureSchema> GetItem(int) public MgFeatureSchema GetItem(int index) Parameters index int Returns MgFeatureSchema IndexOf(MgFeatureSchema) public int IndexOf(MgFeatureSchema value) Parameters value MgFeatureSchema Returns int Insert(int, MgFeatureSchema) Inserts the specified item at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, MgFeatureSchema value) Parameters index int (int) Input index value MgFeatureSchema (MgFeatureSchema) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. MgException with code (MgDuplicateObjectException) if it is a duplicate. Remove(MgFeatureSchema) Removes the specified item from the collection. public bool Remove(MgFeatureSchema value) Parameters value MgFeatureSchema (MgFeatureSchema) Input value Returns bool Returns true if removal was successful. RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgFeatureSchema) Sets the item in the collection at the specified index to the specified value. public void SetItem(int index, MgFeatureSchema value) Parameters index int (int) Input index value MgFeatureSchema (MgFeatureSchema) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. MgException with code (MgDuplicateObjectException) if it is a duplicate. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgFeatureService.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureService.html",
    "title": "Class MgFeatureService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides an abstraction layer for the storage and retrieval of feature data in a technology-independent way. The API lets you determine what storage technologies are available and what capabilities they have. Access to the storage technology is modeled as a connection. For example, you can connect to a file and do simple insertions or connect to a relational database and do transaction-based operations. public class MgFeatureService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgFeatureService Implements IDisposable Derived MgPortableFeatureService Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplySchema(MgResourceIdentifier, MgFeatureSchema) Creates or updates a feature schema within the specified feature source. For this method to actually delete any schema elements, the matching elements in the input schema must be marked for deletion using the MgFeatureSchema::Delete(), MgClassDefinition::Delete() and MgPropertyDefinition::Delete() methods public void ApplySchema(MgResourceIdentifier resource, MgFeatureSchema schema) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier referring to a feature source. schema MgFeatureSchema Input schema to be created or updated. BeginTransaction(MgResourceIdentifier) Starts a transaction on the specified feature source public MgTransaction BeginTransaction(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier referring to a feature source. Returns MgTransaction Returns an MgTransaction instance (or NULL). Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> CreateFeatureSource(MgResourceIdentifier, MgFeatureSourceParams) Creates a feature source in the repository identified by the specified resource identifier, using the given feature source parameters. public void CreateFeatureSource(MgResourceIdentifier resource, MgFeatureSourceParams sourceParams) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource identifier defining the location of the new feature source in the repository. sourceParams MgFeatureSourceParams (MgFeatureSourceParams) The feature source parameters (feature schema and spatial context definitions). DeleteFeatures(MgResourceIdentifier, string, string) Deletes all features that match the given filter public int DeleteFeatures(MgResourceIdentifier resource, string className, string filter) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the delete operation is performed. filter string (String/string) The FDO filter string that detemines what features will be deleted Returns int Returns the number of features deleted by this operation Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> DeleteFeatures(MgResourceIdentifier, string, string, MgTransaction) Deletes all features that match the given filter public int DeleteFeatures(MgResourceIdentifier resource, string className, string filter, MgTransaction trans) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the delete operation is performed. filter string (String/string) The FDO filter string that detemines what features will be deleted trans MgTransaction (MgTransaction) The transaction to execute this operation under Returns int Returns the number of features deleted by this operation Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> DescribeSchema(MgResourceIdentifier, string) Gets the definitions of one or more schema contained in the [Obsolete(\"This method is deprecated\")] public MgFeatureSchemaCollection DescribeSchema(MgResourceIdentifier resource, string schemaName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. schemaName string (String/string) The name of the schema definition to retrieve or an empty string to retrieve all available schema definitions. Returns MgFeatureSchemaCollection Returns an MgFeatureSchemaCollection. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> DescribeSchema(MgResourceIdentifier, string, MgStringCollection) Gets the definitions of one or more schemas contained in the feature source for particular classes. If the specified schema name or a class name does not exist, this method will throw an exception. public MgFeatureSchemaCollection DescribeSchema(MgResourceIdentifier resource, string schemaName, MgStringCollection classNames) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. schemaName string (String/string) The name of the schema definition to retrieve. If this string is empty, execution of the command will describe requested classes using the qualified class name. If the class name is not qualified, the requested class from all schemas will be described. classNames MgStringCollection (MgStringCollection) A collection of strings identifying the feature classes for which to retrieve schema information. If this collection is null or empty, execution of the command will describe all classes. If the class name is not qualified, and the schema name is not specified, the requested class from all schemas will be described. The class names specified serve only as a hint. Use of the hint during command execution is provider dependent. Providers that will not use the hint will describe the schema for all classes. Returns MgFeatureSchemaCollection Returns the schema collection representing the schema containing the class collection for the specified classes. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> DescribeSchemaAsXml(MgResourceIdentifier, string) Gets the definition in XML format of a schema contained in [Obsolete(\"This method is deprecated\")] public string DescribeSchemaAsXml(MgResourceIdentifier resource, string schemaName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource identifier for the feature source schemaName string (String/string) The name of the schema definition to retrieve or an empty string to retrieve all available schema definitions. Returns string Returns a string containing the FDO schema in XML format. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> DescribeSchemaAsXml(MgResourceIdentifier, string, MgStringCollection) Gets the definitions in XML format of one or more schemas contained in the feature source for particular classes. If the specified schema name or a class name does not exist, this method will throw an exception. public string DescribeSchemaAsXml(MgResourceIdentifier resource, string schemaName, MgStringCollection classNames) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. schemaName string (String/string) The name of the schema definition to retrieve. If this string is empty, execution of the command will describe requested classes using the qualified class name. If the class name is not qualified, the requested class from all schemas will be described. classNames MgStringCollection (MgStringCollection) A collection of strings identifying the feature classes for which to retrieve schema information. If this collection is null or empty, execution of the command will describe all classes. If the class name is not qualified, and the schema name is not specified, the requested class from all schemas will be described. The class names specified serve only as a hint. Use of the hint during command execution is provider dependent. Providers that will not use the hint will describe the schema for all classes. Returns string Returns a string containing the FDO schema in XML format. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> DescribeWfsFeatureType(MgResourceIdentifier, MgStringCollection) Retrieves schema information about a set of feature classes for a given feature source. public MgByteReader DescribeWfsFeatureType(MgResourceIdentifier featureSourceId, MgStringCollection featureClasses) Parameters featureSourceId MgResourceIdentifier (MgResourceIdentifier) The resource identifier defining the location of the feature source in the repository. featureClasses MgStringCollection (MgStringCollection) A collection of strings identifying the feature classes for which to retrieve schema information. If this collection is null or empty, information is returned for all feature classes. Returns MgByteReader Returns an MgByteReader containing the XML schema. DescribeWfsFeatureType(MgResourceIdentifier, MgStringCollection, string, string) Retrieves schema informationabout a set of feature classes for a given feature source with specified namespace prefix and url. public MgByteReader DescribeWfsFeatureType(MgResourceIdentifier featureSourceId, MgStringCollection featureClasses, string namespacePrefix, string namespaceUrl) Parameters featureSourceId MgResourceIdentifier (MgResourceIdentifier) The resource identifier defining the location of the feature source in the repository. featureClasses MgStringCollection (MgStringCollection) A collection of strings identifying the feature classes for which to retrieve schema information. If this collection is null or empty, information is returned for all feature classes. namespacePrefix string (String/string) A string identifying the namespace prefix in the output xml namespaceUrl string (String/string) A string idenyifying the namespace url in the output xml Returns MgByteReader Returns an MgByteReader containing the XML schema. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnumerateDataStores(string, string) This method enumerates all the providers and if they are FDO enabled for the specified provider and partial connection string. public MgByteReader EnumerateDataStores(string providerName, string partialConnString) Parameters providerName string (String/string) The name of the Fdo feature provider. partialConnString string (String/string) The partial connection string to the Fdo provider. Returns MgByteReader Returns the list of data stores. ExecuteSqlNonQuery(MgResourceIdentifier, string) Executes SQL statements NOT including SELECT statements. public int ExecuteSqlNonQuery(MgResourceIdentifier resource, string sqlNonSelectStatement) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for a feature source. sqlNonSelectStatement string (String/string) The SQL statement that is NOT a SELECT statement. Returns int Returns a positive integer value indicating how many instances (rows) have been affected. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> ExecuteSqlNonQuery(MgResourceIdentifier, string, MgParameterCollection, MgTransaction) Executes SQL statements NOT including SELECT statements within the given transaction. public int ExecuteSqlNonQuery(MgResourceIdentifier resource, string sqlNonSelectStatement, MgParameterCollection parameters, MgTransaction transaction) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for a feature source. sqlNonSelectStatement string (String/string) The SQL statement that is NOT a SELECT statement. parameters MgParameterCollection (MgParameterCollection) Parameters binded to the SQL statement. transaction MgTransaction (MgTransaction) The MgTransaction instance on which the sql statement will be executed. Returns int Returns a positive integer value indicating how many instances (rows) have been affected. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> ExecuteSqlQuery(MgResourceIdentifier, string) Executes the SQL SELECT statement on the specified feature source. public MgSqlDataReader ExecuteSqlQuery(MgResourceIdentifier resource, string sqlStatement) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier referring to a feature source. sqlStatement string (String/string) The SQL SELECT statement. Returns MgSqlDataReader Returns an MgSqlDataReader instance (or NULL). Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> ExecuteSqlQuery(MgResourceIdentifier, string, MgParameterCollection, MgTransaction) Executes the SQL SELECT statement on the specified feature source within the given transaction. public MgSqlDataReader ExecuteSqlQuery(MgResourceIdentifier resource, string sqlStatement, MgParameterCollection parameters, MgTransaction transaction) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier referring to a feature source. sqlStatement string (String/string) The SQL SELECT statement. parameters MgParameterCollection (MgParameterCollection) Parameters binded to the SQL statement. transaction MgTransaction (MgTransaction) The MgTransaction instance on which the sql statement will be executed. Returns MgSqlDataReader Returns an MgSqlDataReader instance (or NULL). Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> GetCapabilities(string) Gets the capabilities of an FDO Provider expressed in XML public MgByteReader GetCapabilities(string providerName) Parameters providerName string (String/string) The name of the FDO provider. Get the exact form of the name from MgFeatureService::GetFeatureProviders. Returns MgByteReader Returns an MgByteReader containing the capabilities in XML format (or NULL). Exceptions MgException MgInvalidArgumentException\"> MgException MgFdoException\"> GetCapabilities(string, string) Gets the capabilities of an FDO Provider expressed in XML public MgByteReader GetCapabilities(string providerName, string connectionString) Parameters providerName string (String/string) The name of the FDO provider. Get the exact form of the name from MgFeatureService::GetFeatureProviders. connectionString string (String/string) The connection string to use. Returns MgByteReader Returns an MgByteReader containing the capabilities in XML format (or NULL). Exceptions MgException MgInvalidArgumentException\"> MgException MgFdoException\"> GetClassDefinition(MgResourceIdentifier, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgClassDefinition GetClassDefinition(MgResourceIdentifier resource, string schemaName, string className) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. schemaName string (String/string) A schema name. className string (String/string) A class name. Returns MgClassDefinition Returns an MgClassDefinition instance for the specified class name. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> GetClasses(MgResourceIdentifier, string) public MgStringCollection GetClasses(MgResourceIdentifier resource, string schemaName) Parameters resource MgResourceIdentifier schemaName string Returns MgStringCollection GetConnectionPropertyValues(string, string, string) Gets a set of connection values that are used to make connections to an FDO provider that permits multiple connections. public MgStringCollection GetConnectionPropertyValues(string providerName, string propertyName, string partialConnString) Parameters providerName string (String/string) The name of the Fdo feature provider. Permissible propertyName string (String/string) The name of the enumerable property for which values need to be retrieved. Connection property names are contained in the output of the MgFeatureService::GetFeatureProviders method. The value of the ConnectionProperty element&apos;s Enumerable attribute must be true. partialConnString string (String/string) A partial connection string, which is sufficient to connect to a provider. Returns MgStringCollection Returns an MgStringCollection or NULL, if nothing is found. <!-- Examples (PHP) --> Exceptions MgException MgInvalidArgumentException\"> MgException MgFdoException\"> GetFeatureProviders() Gets a list of the available FDO providers together with other information such as the names of the connection properties for each provider. This information is in XML public MgByteReader GetFeatureProviders() Returns MgByteReader Returns an MgByteReader containing the provider registry in XML format. Exceptions MgException MgFdoException\"> GetLockedFeatures(MgResourceIdentifier, string, MgFeatureQueryOptions) Gets the locked features public MgFeatureReader GetLockedFeatures(MgResourceIdentifier resource, string className, MgFeatureQueryOptions options) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the select operation is performed. options MgFeatureQueryOptions (MgFeatureAggregateOptions) An MgFeatureAggregateOptions instance containing all the criteria and filters required for this select operation. Returns MgFeatureReader Returns an MgFeatureReader containing the locked features. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> GetLongTransactions(MgResourceIdentifier, bool) Gets all available long transactions for the provider. public MgLongTransactionReader GetLongTransactions(MgResourceIdentifier resource, bool bActiveOnly) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for feature source. bActiveOnly bool (boolean/bool) If true, returns the active long transaction; otherwise returns all long transactions. Returns MgLongTransactionReader Returns an MgLongTransactionReader instance or NULL. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> GetSchemaMapping(string, string) This method returns all of the logical to physical schema mappings for the specified provider and partial connection string. public MgByteReader GetSchemaMapping(string providerName, string partialConnString) Parameters providerName string (String/string) The name of the Fdo feature provider. partialConnString string (String/string) The partial connection string to the Fdo provider. Returns MgByteReader Returns the schema mapping. GetSchemas(MgResourceIdentifier) Gets a list of the names of all of the schemas available in public MgStringCollection GetSchemas(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source, Returns MgStringCollection Returns an MgStringCollection object listing the schema names. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> GetSpatialContexts(MgResourceIdentifier, bool) Gets all of the spatial contexts available in the feature source or just the active one. public MgSpatialContextReader GetSpatialContexts(MgResourceIdentifier resource, bool bActiveOnly) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier identifying a feature source in the repository. bActiveOnly bool (boolean/bool) This flag is obsolete and no longer used. Returns MgSpatialContextReader Returns an MgSpatialContextReader object. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> GetWfsFeature(MgResourceIdentifier, string, MgStringCollection, string, string, int) Retrieves feature information based on the supplied criteria. public MgByteReader GetWfsFeature(MgResourceIdentifier featureSourceId, string featureClass, MgStringCollection requiredProperties, string srs, string filter, int maxFeatures) Parameters featureSourceId MgResourceIdentifier (MgResourceIdentifier) The resource identifier defining the location of the feature source in the repository. featureClass string (String/string) The feature class containing the features to retrieve. requiredProperties MgStringCollection (MgStringCollection) The collection of properties to retrieve for each feature. If the collection is null or empty, all properties will be retrieved. srs string (String/string) The spatial reference system in which to return feature geometries filter string (String/string) An XML string containing the definition for an OGC filter maxFeatures int (int) The maximum number of features to retrieve. If the value is less than or equal to zero, all features will be retrieved. Returns MgByteReader Returns an MgByteReader containing the requested feature information. GetWfsFeature(MgResourceIdentifier, string, MgStringCollection, string, string, int, string, string, string, string, string) Retrieves feature information based on the supplied criteria with specified format. public MgByteReader GetWfsFeature(MgResourceIdentifier featureSourceId, string featureClass, MgStringCollection requiredProperties, string srs, string filter, int maxFeatures, string wfsVersion, string outputFormat, string sortCriteria, string namespacePrefix, string namespaceUrl) Parameters featureSourceId MgResourceIdentifier (MgResourceIdentifier) The resource identifier defining the location of the feature source in the repository. featureClass string (String/string) The feature class containing the features to retrieve. requiredProperties MgStringCollection (MgStringCollection) The collection of properties to retrieve for each feature. If the collection is null or empty, all properties will be retrieved. srs string (String/string) The spatial reference system in which to return feature geometries filter string (String/string) An XML string containing the definition for an OGC filter maxFeatures int (int) The maximum number of features to retrieve. If the value is less than or equal to zero, all features will be retrieved. wfsVersion string (String/string) A string identifying the wfs version outputFormat string (String/string) A string identifying the output format of the retrieved feature information. The supported values of output format are specified in OpenGIS Web Feature Service (WFS) Implementation Specification - section 9.2 http://portal.opengeospatial.org/files/?artifact_id=8339 sortCriteria string (String/string) A string identifying the sort criteria namespacePrefix string (String/string) A string identifying the namespace prefix in the output xml namespaceUrl string (String/string) A string idenyifying the namespace url in the output xml Returns MgByteReader Returns an MgByteReader containing the requested feature information. Exceptions MgException MgInvalidArgumentException\"> GetWfsReader(MgResourceIdentifier, string, MgStringCollection, string, string, string) Retrieves feature information based on the supplied criteria. public MgFeatureReader GetWfsReader(MgResourceIdentifier featureSourceId, string featureClass, MgStringCollection requiredProperties, string srs, string filter, string sortCriteria) Parameters featureSourceId MgResourceIdentifier (MgResourceIdentifier) The resource identifier defining the location of the feature source in the repository. featureClass string (String/string) The feature class containing the features to retrieve. requiredProperties MgStringCollection (MgStringCollection) The collection of properties to retrieve for each feature. If the collection is null or empty, all properties will be retrieved. srs string (String/string) The spatial reference system in which to return feature geometries filter string (String/string) An XML string containing the definition for an OGC filter sortCriteria string (String/string) A string identifying the sort criteria Returns MgFeatureReader Returns an MgByteReader containing the requested feature information. Exceptions MgException MgInvalidArgumentException\"> InsertFeatures(MgResourceIdentifier, string, MgBatchPropertyCollection) Inserts a set of new features into the specified feature class of the specified Feature Source public MgFeatureReader InsertFeatures(MgResourceIdentifier resource, string className, MgBatchPropertyCollection batchPropertyValues) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the insert operation is performed. batchPropertyValues MgBatchPropertyCollection (MgBatchPropertyCollection) The collection of property values to insert. Each MgPropertyCollection within this collection represents property values for a single feature to insert Returns MgFeatureReader Returns a feature reader object that contains the set of properties inserted into the datastore by the insert command. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> InsertFeatures(MgResourceIdentifier, string, MgBatchPropertyCollection, MgTransaction) Inserts a set of new features into the specified feature class of the specified Feature Source public MgFeatureReader InsertFeatures(MgResourceIdentifier resource, string className, MgBatchPropertyCollection batchPropertyValues, MgTransaction trans) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the insert operation is performed. batchPropertyValues MgBatchPropertyCollection (MgBatchPropertyCollection) The collection of property values to insert. Each MgPropertyCollection within this collection represents property values for a single feature to insert trans MgTransaction (MgTransaction) The transaction to execute this operation under Returns MgFeatureReader Returns a feature reader object that contains the set of properties inserted into the datastore by the insert command. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> InsertFeatures(MgResourceIdentifier, string, MgPropertyCollection) Inserts a new feature into the specified feature class of the specified Feature Source public MgFeatureReader InsertFeatures(MgResourceIdentifier resource, string className, MgPropertyCollection propertyValues) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the insert operation is performed. propertyValues MgPropertyCollection (MgPropertyCollection) The collection of property values to insert Returns MgFeatureReader Returns a feature reader object that contains the set of properties inserted into the datastore by the insert command. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> InsertFeatures(MgResourceIdentifier, string, MgPropertyCollection, MgTransaction) Inserts a new feature into the specified feature class of the specified Feature Source public MgFeatureReader InsertFeatures(MgResourceIdentifier resource, string className, MgPropertyCollection propertyValues, MgTransaction trans) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the insert operation is performed. propertyValues MgPropertyCollection (MgPropertyCollection) The collection of property values to insert trans MgTransaction (MgTransaction) The transaction to execute this operation under Returns MgFeatureReader Returns a feature reader object that contains the set of properties inserted into the datastore by the insert command. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> SchemaToXml(MgFeatureSchemaCollection) Translates the FDO schema information in the provided MgFeatureSchemaCollection object into a string containing an XML representation of the schema definitions in the feature public string SchemaToXml(MgFeatureSchemaCollection schema) Parameters schema MgFeatureSchemaCollection (MgFeatureSchemaCollection) A FeatureSchemaCollection object. Returns string Returns a string containiing a set of FDO schema definitions in XML format. Exceptions MgException MgFeatureServiceException\"> MgException MgNullArgumentException\"> MgException MgFdoException\"> SelectAggregate(MgResourceIdentifier, string, MgFeatureAggregateOptions) Selects groups of features from a feature source and applies filters to each of the groups according to the criteria set in the MgFeatureAggregateOptions argument. If you want to apply the criteria to all features without grouping them, use public MgDataReader SelectAggregate(MgResourceIdentifier resource, string className, MgFeatureAggregateOptions options) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the select operation is performed. options MgFeatureAggregateOptions (MgFeatureAggregateOptions) An MgFeatureAggregateOptions instance containing all the criteria and filters required for this select operation. Returns MgDataReader Returns an MgDataReader containing the group values. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> SelectFeatures(MgResourceIdentifier, string, MgFeatureQueryOptions) Selects features from a feature source according to the criteria set in the MgFeatureQueryOptions argument The criteria are applied to all of the features in the feature source. If you want to apply the criteria to a subset of the features, use MgFeatureService::SelectAggregate. public MgFeatureReader SelectFeatures(MgResourceIdentifier resource, string className, MgFeatureQueryOptions options) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class from which the properties of interest are selected. options MgFeatureQueryOptions (MgFeatureQueryOptions) MgFeatureQueryOptions instance containing all required filters for this select operation. Returns MgFeatureReader Returns an MgFeatureReader containing the set of selected features. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> SelectFeatures(MgResourceIdentifier, string, MgFeatureQueryOptions, string) Selects features from a feature source according to the criteria set in the MgFeatureQueryOptions argument The criteria are applied to all of the features in the feature source. Use the coordinateSystem argument to set the target coordinate system if you want to transform. If you want to apply the criteria to a subset of the features, use MgFeatureService::SelectAggregate. public MgFeatureReader SelectFeatures(MgResourceIdentifier resource, string className, MgFeatureQueryOptions options, string coordinateSystem) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class from which the properties of interest are selected. options MgFeatureQueryOptions (MgFeatureQueryOptions) MgFeatureQueryOptions instance containing all required filters for this select operation. coordinateSystem string (String/string) The name of the coordinate system to transform to. Returns MgFeatureReader Returns an MgFeatureReader containing the set of selected features. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> SetLongTransaction(MgResourceIdentifier, string) Set the active long transaction name for a feature source. public bool SetLongTransaction(MgResourceIdentifier featureSourceId, string longTransactionName) Parameters featureSourceId MgResourceIdentifier (MgResourceIdentifier) A resource identifier identifying a feature source in the repository. longTransactionName string (String/string) The long transaction name to set. Returns bool Returns true if the name was successfully set; otherwise returns false. Exceptions MgException MgNullArgumentException\"> MgException MgInvalidResourceTypeException\"> MgException MgSessionNotFoundException\"> TestConnection(MgResourceIdentifier) Connects to the feature source specified by the resource identifier and verifies that the feature source has been correctly configured and installed in the resource public bool TestConnection(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource identifier for the feature source. Returns bool Returns true if connection was successful; otherwise returns false. Exceptions MgException MgFdoException\"> TestConnection(string, string) Connects to the Feature Provider specified in the connection public bool TestConnection(string providerName, string connectionString) Parameters providerName string (String/string) The name of the Fdo feature provider. Permissible connectionString string (String/string) Connection string for Feature Provider. Connection property names that appear in the connection string as keys can be obtained from the output of GetFeatureProviders method. Look at the //FeatureProviderRegistry/FeatureProvider/ConnectionProperties/ConnectionProperty/Name elements. Returns bool Returns true if the connection was successful; otherwise returns false. Exceptions MgException MgFdoException\"> UpdateFeatures(MgResourceIdentifier, MgFeatureCommandCollection, MgTransaction) Executes the MgDeleteFeatures, MgInsertFeatures, MgUpdateFeatures, OSGeo.MapGuide.MgLockFeatures or OSGeo.MapGuide.MgUnlockFeatures commands contained in the given MgFeatureCommandCollection object within the given transaction. public MgPropertyCollection UpdateFeatures(MgResourceIdentifier resource, MgFeatureCommandCollection commands, MgTransaction transaction) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. commands MgFeatureCommandCollection (MgFeatureCommandCollection) A collection of feature commands to be executed. transaction MgTransaction (MgTransaction) The MgTransaction instance on which the commands will be executed. Returns MgPropertyCollection Returns an MgPropertyCollection object. Each property in the collection corresponds to a command in the MgFeatureCommandCollection argument. The property name is the index of the command in the feature command collection. <ul> <li>If the command is of type MgDeleteFeatures, the property type is an MgPropertyType::Int32, and its value is the number of features deleted.</li> <li>If the command is of type MgInsertFeatures, the property type is an MgPropertyType::Feature, and its value is a MgFeatureReader object. The feature reader object contains the set of properties inserted into the datastore by the insert command.</li> <li>If the command is of type MgUpdateFeatures, the property type is MgPropertyType::Int32, and its value is the number of features updated.</li> <li>If the command is of type OSGeo.MapGuide.MgLockFeatures, the property type is MgPropertyType::Feature, and its value is the number of features locked.</li> <li>If the command is of type OSGeo.MapGuide.MgUnlockFeatures, the property type is MgPropertyType::Int32, and its value is the number of features unlocked.</li> <li>For any of the above commands, if the property type is MgPropertyType::String, it indicates an exception had occurred for that particular command, and its value is the exception message. This only applies when the operation is not using a transaction</li> </ul> Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> UpdateFeatures(MgResourceIdentifier, MgFeatureCommandCollection, bool) Executes the MgDeleteFeatures, MgInsertFeatures, MgUpdateFeatures, OSGeo.MapGuide.MgLockFeatures or OSGeo.MapGuide.MgUnlockFeatures commands contained in the given MgFeatureCommandCollection object. public MgPropertyCollection UpdateFeatures(MgResourceIdentifier resource, MgFeatureCommandCollection commands, bool useTransaction) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. commands MgFeatureCommandCollection (MgFeatureCommandCollection) A collection of feature commands to be executed. useTransaction bool (boolean/bool) If true and transactions are supported by the Fdo provider, execute all commands inside a transaction. If false, do not use a transaction. Returns MgPropertyCollection Returns an MgPropertyCollection object. Each property in the collection corresponds to a command in the MgFeatureCommandCollection argument. The property name is the index of the command in the feature command collection. <ul> <li>If the command is of type MgDeleteFeatures, the property type is an MgPropertyType::Int32, and its value is the number of features deleted.</li> <li>If the command is of type MgInsertFeatures, the property type is an MgPropertyType::Feature, and its value is a MgFeatureReader object. The feature reader object contains the set of properties inserted into the datastore by the insert command.</li> <li>If the command is of type MgUpdateFeatures, the property type is MgPropertyType::Int32, and its value is the number of features updated.</li> <li>If the command is of type OSGeo.MapGuide.MgLockFeatures, the property type is MgPropertyType::Feature, and its value is the number of features locked.</li> <li>If the command is of type OSGeo.MapGuide.MgUnlockFeatures, the property type is MgPropertyType::Int32, and its value is the number of features unlocked.</li> <li>For any of the above commands, if the property type is MgPropertyType::String, it indicates an exception had occurred for that particular command, and its value is the exception message. This only applies when the operation is not using a transaction</li> </ul> Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> UpdateMatchingFeatures(MgResourceIdentifier, string, MgPropertyCollection, string) Updates all features that match the given filter with the specified property values public int UpdateMatchingFeatures(MgResourceIdentifier resource, string className, MgPropertyCollection properties, string filter) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the update operation is performed. properties MgPropertyCollection (MgBatchPropertyCollection) The property values to update matching features with filter string (String/string) The FDO filter string that detemines what features will be updated Returns int Returns the number of features updated by this operation Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> UpdateMatchingFeatures(MgResourceIdentifier, string, MgPropertyCollection, string, MgTransaction) Updates all features that match the given filter with the specified property values public int UpdateMatchingFeatures(MgResourceIdentifier resource, string className, MgPropertyCollection properties, string filter, MgTransaction trans) Parameters resource MgResourceIdentifier (MgResourceIdentifier) A resource identifier for the feature source. className string (String/string) The name of the feature class on which the update operation is performed. properties MgPropertyCollection (MgBatchPropertyCollection) The property values to update matching features with filter string (String/string) The FDO filter string that detemines what features will be updated trans MgTransaction (MgTransaction) The transaction to execute this operation under Returns int Returns the number of features updated by this operation Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> XmlToSchema(string) Creates an MgFeatureSchemaCollection object using the XML schema provided public MgFeatureSchemaCollection XmlToSchema(string xml) Parameters xml string (String/string) A string containing schema definitions in XML format. Returns MgFeatureSchemaCollection Returns an MgFeatureSchemaCollection object. Exceptions MgException MgNullArgumentException\"> MgException MgFdoException\">"
  },
  "api/OSGeo.MapGuide.MgFeatureSourceParams.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureSourceParams.html",
    "title": "Class MgFeatureSourceParams | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureSourceParams Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Is a virtual base class for feature source parameters used with OSGeo.MapGuide.MgFeatureSource::CreateFeatureSource. This class cannot be instantiated directly. public class MgFeatureSourceParams : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureSourceParams Implements IDisposable Derived MgFileFeatureSourceParams MgPortableRdbmsFeatureSourceParams Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgFeatureSpatialOperations.html": {
    "href": "api/OSGeo.MapGuide.MgFeatureSpatialOperations.html",
    "title": "Class MgFeatureSpatialOperations | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFeatureSpatialOperations Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Is a set of constants used to type spatial operations. public class MgFeatureSpatialOperations Inheritance object MgFeatureSpatialOperations Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Contains TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Contains = 0 Field Value int CoveredBy TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int CoveredBy = 8 Field Value int Crosses TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Crosses = 1 Field Value int Disjoint TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Disjoint = 2 Field Value int EnvelopeIntersects TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int EnvelopeIntersects = 10 Field Value int Equals TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Equals = 3 Field Value int Inside TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Inside = 9 Field Value int Intersects TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Intersects = 4 Field Value int Overlaps TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Overlaps = 5 Field Value int Touches TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Touches = 6 Field Value int Within TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const int Within = 7 Field Value int"
  },
  "api/OSGeo.MapGuide.MgFileFeatureSourceParams.html": {
    "href": "api/OSGeo.MapGuide.MgFileFeatureSourceParams.html",
    "title": "Class MgFileFeatureSourceParams | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgFileFeatureSourceParams Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Contains the parameters used to create a file-based feature source. public class MgFileFeatureSourceParams : MgFeatureSourceParams, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureSourceParams MgFileFeatureSourceParams Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgFileFeatureSourceParams() Constructs an empty MgFileFeatureSourceParams object. public MgFileFeatureSourceParams() MgFileFeatureSourceParams(string) Constructs an MgFileFeatureSourceParams object with the specified FDO provider name. public MgFileFeatureSourceParams(string providerName) Parameters providerName string (String/string) The FDO provider name of the feature source without version number. For example, OSGeo.SDF. MgFileFeatureSourceParams(string, string, string, MgFeatureSchema) Constructs an MgFileFeatureSourceParams object with the supplied parameters. public MgFileFeatureSourceParams(string providerName, string spatialContextName, string srsWkt, MgFeatureSchema featureSchema) Parameters providerName string (String/string) The FDO provider name of the feature source without version number. For example, OSGeo.SDF. spatialContextName string (String/string) The name of the spatial context. This is a user defined spatial context for the feature source. Only one spatial context is supported. srsWkt string (String/string) An OGC WKT string representing the coordinate system for the feature source. featureSchema MgFeatureSchema (MgFeatureSchema) The schema definition for the feature source. Properties CoordinateSystemWkt public string CoordinateSystemWkt { get; set; } Property Value string FeatureSchema public MgFeatureSchema FeatureSchema { get; set; } Property Value MgFeatureSchema FileName public string FileName { get; set; } Property Value string ProviderName public string ProviderName { get; set; } Property Value string SpatialContextDescription public string SpatialContextDescription { get; set; } Property Value string SpatialContextName public string SpatialContextName { get; set; } Property Value string XYTolerance public double XYTolerance { get; set; } Property Value double ZTolerance public double ZTolerance { get; set; } Property Value double Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinateSystemWkt() Gets the well-known text description of the coordinate system. public string GetCoordinateSystemWkt() Returns string Returns the OGC WKT description of the coordinate system. GetFeatureSchema() Gets the feature schema definition. public MgFeatureSchema GetFeatureSchema() Returns MgFeatureSchema Returns a feature schema definition object. GetFileName() Gets the file name to be created. For SHP FDO provider, it is used to get path name because multiple files will be created if there are multiple feature classes in the specified featue schame. public string GetFileName() Returns string Returns the file name to be created. GetProviderName() Gets the FDO provider name of the feature source. public string GetProviderName() Returns string Returns the FDO provider name of the feature source. GetSpatialContextDescription() Gets the spatial context description. public string GetSpatialContextDescription() Returns string Returns the spatial context description. GetSpatialContextName() Gets the user-defined spatial context name. public string GetSpatialContextName() Returns string Returns the name of the spatial context. GetXYTolerance() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetXYTolerance() Returns double Returns the tolerance used for the X and Y ordinates. GetZTolerance() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetZTolerance() Returns double Returns the tolerance for the Z ordinate. SetCoordinateSystemWkt(string) Sets the well-know text string representing the coordinate system. public void SetCoordinateSystemWkt(string srsWkt) Parameters srsWkt string (String/string) The OGC WKT string representing the coordinate system. SetFeatureSchema(MgFeatureSchema) Sets the feature schema definition. public void SetFeatureSchema(MgFeatureSchema featureSchema) Parameters featureSchema MgFeatureSchema (MgFeatureSchema) The feature schema definition. SetFileName(string) Sets the file name to be created. For SHP FDO provider, it is used to set path name because multiple files will be created if there are multiple feature classes in the specified featue schame. public void SetFileName(string name) Parameters name string (String/string) The file name to be created. SetProviderName(string) Sets the FDO provider name of the feature source. public void SetProviderName(string name) Parameters name string (String/string) The FDO provider name of the feature source without version number. For example, OSGeo.SDF. SetSpatialContextDescription(string) Sets the spatial context description. public void SetSpatialContextDescription(string description) Parameters description string (String/string) The description of the spatial context. SetSpatialContextName(string) Sets the user-defined spatial context name. public void SetSpatialContextName(string name) Parameters name string (String/string) The name of the spatial context SetXYTolerance(double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetXYTolerance(double tolerance) Parameters tolerance double (double) The tolerance for the X and Y ordinates. SetZTolerance(double) Sets the tolerance for the Z ordinate. public void SetZTolerance(double tolerance) Parameters tolerance double (double) The tolerance for the Z ordinate."
  },
  "api/OSGeo.MapGuide.MgGeoJsonWriter.html": {
    "href": "api/OSGeo.MapGuide.MgGeoJsonWriter.html",
    "title": "Class MgGeoJsonWriter | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeoJsonWriter Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll A helper class to output GeoJSON from feature readers public class MgGeoJsonWriter : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgGeoJsonWriter Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgGeoJsonWriter() Constructs a MgGeoJsonWriter object public MgGeoJsonWriter() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool FeatureToGeoJson(MgFeatureReader, MgTransform) Converts the current feature in the given feature reader to GeoJSON public string FeatureToGeoJson(MgFeatureReader featureReader, MgTransform transform) Parameters featureReader MgFeatureReader (MgFeatureReader) The feature reader transform MgTransform (MgTransform) An optional transform Returns string Returns the GeoJSON output as a string. FeatureToGeoJson(MgReader, MgTransform, string, string) Converts the current feature in the given feature reader to GeoJSON public string FeatureToGeoJson(MgReader reader, MgTransform transform, string idPropertyName, string geomPropName) Parameters reader MgReader transform MgTransform (MgTransform) An optional transform idPropertyName string (String/string) The name of the id property. The value of the property specified will be written to the top-level &quot;id\" property of the GeoJSON geomPropName string (String/string) The name of the geometry property. The value of the property specified will be written to the top-level &quot;geometry\" property of the GeoJSON. If this property is not specified, no geometry is written. Returns string Returns the GeoJSON output as a string. GetPrecision() Gets the decimal precision to use when writing out coordinates public int GetPrecision() Returns int Returns the current precision IsPrecisionEnabled() Gets whether coordinate precision is enabled public bool IsPrecisionEnabled() Returns bool True if coordinate precision is enabled. False otherwise SetPrecision(int) Sets the decimal precision to use when writing out coordinates. If you do not call this method, the default precision used is 7 decimal places. Precision must be enabled in order for this setting to have any effect public void SetPrecision(int precision) Parameters precision int (int) The decimal precision to write out coordinates SetPrecisionEnabled(bool) Sets whether to apply coordinate precision when writing out GeoJSON coordinates public void SetPrecisionEnabled(bool enabled) Parameters enabled bool (bool) If true, enables coordinate precision. Otherwise disables it"
  },
  "api/OSGeo.MapGuide.MgGeometricEntity.html": {
    "href": "api/OSGeo.MapGuide.MgGeometricEntity.html",
    "title": "Class MgGeometricEntity | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometricEntity Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometricEntity is an abstract base class that is the root of all geometry and geometry component classes. public class MgGeometricEntity : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity Implements IDisposable Derived MgGeometry MgGeometryComponent Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Area public double Area { get; } Property Value double Centroid public MgPoint Centroid { get; } Property Value MgPoint Dimension public int Dimension { get; } Property Value int Length public double Length { get; } Property Value double Methods Copy() Returns a copy of this geometric entity. public MgGeometricEntity Copy() Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Envelope() Gets this geometric entity's bounding box. public MgEnvelope Envelope() Returns MgEnvelope Returns an MgEnvelope object representing the bounding box. GetArea() Returns the area for this geometric entity or zero for MgLineString and MgPoint objects. Calculates the area for each MgPolygon in an MgMultiPolygon or for each MgCurvePolygon in an MgMultiCurvePolygon and returns the sum of areas. public double GetArea() Returns double The area of this geometric entity. GetCentroid() Calculates and returns the centroid of this geometric entity. public MgPoint GetCentroid() Returns MgPoint A centroid point GetDimension() Gets the geometric dimension of this entity, indicating whether the entity is defined by points, curves, or regions, that is, is zero, one, or two dimensional. public int GetDimension() Returns int Returns one of the values defined in OSGeo.MapGuide.MgGeometricDimension. GetLength() Calculates and returns the length for this geometric entity. Defaults to zero for MgPoint objects. public double GetLength() Returns double Length of this geometric entity IsClosed() Tests whether the entity's boundary encloses an area. public bool IsClosed() Returns bool True if the geometry is closed, false otherwise. IsEmpty() Tests whether this entity is empty or not. public bool IsEmpty() Returns bool True if the geometry is empty, false otherwise. IsSimple() Tests whether this entity is simple or not. Simple entities do not contain any points of self-tangency or self intersection. public bool IsSimple() Returns bool True if the geometry is simple, false otherwise. IsValid() Tests whether the coordinates given to construct the entity represent a valid Geometry or GeometryComponent. Note: Optional for MapGuide. public bool IsValid() Returns bool True if the geometry is valid, false otherwise. Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgGeometricPathInstructionType.html": {
    "href": "api/OSGeo.MapGuide.MgGeometricPathInstructionType.html",
    "title": "Class MgGeometricPathInstructionType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometricPathInstructionType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometricPathInstructionType defines enumerated values used to specify the instructions contained in a geometric path. See OSGeo.MapGuide.MgGeometricPathIterator for a definition of a geometric path. public class MgGeometricPathInstructionType Inheritance object MgGeometricPathInstructionType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Close (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Defines a line from the current coordinate in the geometric path back to the last OSGeo.MapGuide.MgGeometricPathInstruction.MoveTo, which is the beginning of the last segment in the path. public const int Close = 4 Field Value int LineTo (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Defines a straight line from the last coordinate in the geometric path to the coordinate included with this instruction. public const int LineTo = 1 Field Value int MoveTo (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Defines the beginning coordinate of a new segment in a geometric path. public const int MoveTo = 0 Field Value int QuadTo (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Defines a quadratic curve from the last coordinate in the geometric path using the first coordinate of this instruction as the end point and the second coordinate as the control point. public const int QuadTo = 2 Field Value int"
  },
  "api/OSGeo.MapGuide.MgGeometricPropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MgGeometricPropertyDefinition.html",
    "title": "Class MgGeometricPropertyDefinition | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometricPropertyDefinition Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines a geometric property belonging to a feature class. public class MgGeometricPropertyDefinition : MgPropertyDefinition, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgPropertyDefinition MgGeometricPropertyDefinition Implements IDisposable Inherited Members MgPropertyDefinition.getCPtr(MgPropertyDefinition) MgPropertyDefinition.swigRelease(MgPropertyDefinition) MgPropertyDefinition.PropertyType MgPropertyDefinition.Description MgPropertyDefinition.QualifiedName MgPropertyDefinition.GetPropertyType() MgPropertyDefinition.SetDescription(string) MgPropertyDefinition.GetDescription() MgPropertyDefinition.SetQualifiedName(string) MgPropertyDefinition.GetQualifiedName() MgPropertyDefinition.Delete() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgGeometricPropertyDefinition(string) Constructs an MgGeometricPropertyDefinition object public MgGeometricPropertyDefinition(string name) Parameters name string (String/string) The name of the property. Properties GeometryTypes public int GeometryTypes { get; set; } Property Value int HasElevation public bool HasElevation { get; set; } Property Value bool HasMeasure public bool HasMeasure { get; set; } Property Value bool ReadOnly public bool ReadOnly { get; set; } Property Value bool SpatialContextAssociation public string SpatialContextAssociation { get; set; } Property Value string SpecificGeometryTypes public MgGeometryTypeInfo SpecificGeometryTypes { get; set; } Property Value MgGeometryTypeInfo Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetGeometryTypes() Gets the MgFeatureGeometricType types which specify the categories of the geometries (point, line, surface, solid) that can be stored in this geometric property. public int GetGeometryTypes() Returns int Returns the bit-wise OR combination of one or more of the MgFeatureGeometricType constants. GetHasElevation() Gets a Boolean value that indicates whether the points in the geometry contained in this property include elevation (Z-coordinate) values. public bool GetHasElevation() Returns bool Returns a Boolean value that indicates whether the points in the geometry contained in this property includes elevation (Z-coordinate) values GetHasMeasure() Gets a Boolean value that indicates whether the points in the geometry contained in this property includes measurement values (M-ordinates). public bool GetHasMeasure() Returns bool Returns true if the points in the geometry contained in this property include measurement values (M-ordinates); otherwise returns false. GetReadOnly() Gets a Boolean value that indicates whether this geometric property is read-only. public bool GetReadOnly() Returns bool Returns a Boolean value that indicates whether this geometric property is read-only. GetSpatialContextAssociation() Gets the Spatial Context name associated with this geometric property. public string GetSpatialContextAssociation() Returns string Returns a String value representing the Spatial Context name. If the value is empty then the geometric property is associated with all the spatial contexts in the datastore. GetSpecificGeometryTypes() Gets the specific geometry types that can be stored in this geometric property. The returned value is a list of geometry types that are supported. The caller does NOT own the array of types and should not free its memory. public MgGeometryTypeInfo GetSpecificGeometryTypes() Returns MgGeometryTypeInfo Returns a list of geometry types that are supported. SetGeometryTypes(int) Sets the categories of geometries (point, line, surface, solid) that can be stored in this geometric property. public void SetGeometryTypes(int types) Parameters types int (int) One or more of the MgFeatureGeometricType constants combined by a bit-wise OR operation. SetHasElevation(bool) Determines whether the geometry contained in this property can include elevation values, that is, whether the coordinates in the geometry contain Z-ordinates. public void SetHasElevation(bool hasElevation) Parameters hasElevation bool (boolean/bool) True configures this property so that it can contain a geometry whose coordinates have elevation values (Z-ordinates), and false configures it so that the points in the geometry cannot take an elevation value. SetHasMeasure(bool) Determines whether the points in the geometry contained in this property can include a measurement value (M-ordinate). public void SetHasMeasure(bool hasMeasure) Parameters hasMeasure bool (boolean/bool) True configures the property to take geometries whose coordinates have an M-ordinate and false configures it so that M-ordinates are not permissible. SetReadOnly(bool) Determines whether this geometric property is read-only. public void SetReadOnly(bool value) Parameters value bool (boolean/bool) True configures the property to be read-only and false configures it to be user settable. SetSpatialContextAssociation(string) Sets a Spatial Context association for this geometric property. public void SetSpatialContextAssociation(string spatialContextName) Parameters spatialContextName string (String/string) The Spatial Context name to be set. SetSpecificGeometryTypes(MgGeometryTypeInfo) Sets the specific list of geometry types that can be stored in this geometric property. The provided value is a list of geometry types that are supported. public void SetSpecificGeometryTypes(MgGeometryTypeInfo typeInfo) Parameters typeInfo MgGeometryTypeInfo (MgGeometryTypeInfo) The specific set of geometry types that can be stored in this geometric property."
  },
  "api/OSGeo.MapGuide.MgGeometry.html": {
    "href": "api/OSGeo.MapGuide.MgGeometry.html",
    "title": "Class MgGeometry | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometry Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometry is an abstract base class for all of the geometry types. public class MgGeometry : MgGeometricEntity, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry Implements IDisposable Derived MgAggregateGeometry MgCurve MgPoint MgRegion Inherited Members MgGeometricEntity.Dimension MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.GetDimension() MgGeometricEntity.IsEmpty() MgGeometricEntity.IsSimple() MgGeometricEntity.IsClosed() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.Copy() MgGeometricEntity.Transform(MgTransform) MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GeometryType public int GeometryType { get; } Property Value int Methods Boundary() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometry Boundary() Returns MgGeometry An MgGeometry that represents this geometric entity's boundary. <h2>'Mod 2' Union Rule</h2> Buffer(double, MgMeasure) Returns a geometry that represents all points whose distance from this geometric entity is less than or equal to a given distance. By default, the distance computation is done using a linear algorithm unless a custom measure is supplied. public MgGeometry Buffer(double distance, MgMeasure measure) Parameters distance double (double) The distance from the geometry in units. This value cannot be zero. measure MgMeasure (MgMeasure) The MgMeasure instance to use when computing the buffer. If null, a linear distance algorithm is used. Returns MgGeometry An MgGeometry that represents the geometric entity's buffer, or NULL if the geometry cannot be buffered. Contains(MgGeometry) This is a convenience method. Given 2 geometries a and b, a.Contains(b) is true if and only if b.MgGeometry::Within(a) is true. public bool Contains(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if the other geometry is within this geometry, false otherwise. ConvexHull() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometry ConvexHull() Returns MgGeometry An MgGeometry that represents the convex hull of the geometric entity. Crosses(MgGeometry) Given 2 geometries a and b, a.Crosses(b) is true if and only if the dimension of the intersection of the interior of a and the interior of b is less than the greater of the dimension of the interior of a and the dimension of the interior of b and the intersection of a and b is neither a nor b. public bool Crosses(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry spatially crosses the other geometry, false otherwise. Difference(MgGeometry) public MgGeometry Difference(MgGeometry other) Parameters other MgGeometry Returns MgGeometry Disjoint(MgGeometry) Given 2 geometries a and b, a.Disjoint(b)is true if and only if the intersection of a and b is empty. public bool Disjoint(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry is spatially disjoint from the other geometry, false otherwise. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Distance(MgGeometry, MgMeasure) Returns the shortest distance between this geometry and another. By default distance computation is done using a linear algorithm unless a custom measure is supplied. public double Distance(MgGeometry other, MgMeasure measure) Parameters other MgGeometry (MgGeometry) The MgGeometry to determine the distance to. measure MgMeasure (MgMeasure) The MgMeasure instance to use when computing the distance. If null, a linear distance algorithm is used. Returns double A double value representing the shortest distance between two geometries. Equals(MgGeometry) Given 2 geometries a and b, a.Equals(b) is true if the 2 geometries are spatially equal public bool Equals(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry is spatially equal to the other geometry, false otherwise. GetGeometryType() Gets the type of this geometry. public int GetGeometryType() Returns int Returns the value defined in MgGeometryType corresponding to this geometry. Intersection(MgGeometry) Returns a geometry that represents the point set intersection of this geometry and another. public MgGeometry Intersection(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to compute the intersection with this one. Returns MgGeometry An MgGeometry that represents the intersection. Intersects(MgGeometry) This is a convenience method. Given 2 geometries a and b, public bool Intersects(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry is not disjoint with respect to the other geometry, false otherwise. Overlaps(MgGeometry) Given 2 geometries a and b, a.Overlaps(b) is true if and only if the dimension of the interior of a equals the dimension of the interior of b equals the dimension of the intersection of the interior of a and the interior of b and the intersection of a and b is neither a nor b. public bool Overlaps(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry spatially overlaps the other geometry, false otherwise. Prepare() Returns a prepared version of this geometry that is optimized for repeated evaluation of spatial predicate operations public MgPreparedGeometry Prepare() Returns MgPreparedGeometry An MgPreparedGeometry representing the prepared version of this geometry SymetricDifference(MgGeometry) public MgGeometry SymetricDifference(MgGeometry other) Parameters other MgGeometry Returns MgGeometry Tessellate() Returns a tessellated version of this geometry. A tessellated version of this geometry will have all arc/curve geometry components approximated with line strings. Thus, this method is only applicable for curve geometries and has no effect on non-curve geometries. public MgGeometry Tessellate() Returns MgGeometry A tesellated version of this geometry. If this geometry is not curve-based, the operation does nothing and this method returns itself. Touches(MgGeometry) Given 2 geometries a and b, a.Touches(b) is true if and only if the intersection of the interior of a and the interior of b is empty and the intersection of a and b is not empty. public bool Touches(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry spatially touches the other geometry, false otherwise. Union(MgGeometry) Returns a geometry that represents the point set union of this geometry with another. public MgGeometry Union(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to union with this one. Returns MgGeometry An MgGeometry representing the union of the two geometries. Within(MgGeometry) Given 2 geometries a and b, a.Within(b) is true if and only if the intersection of a and b is a and the intersection of the interior of a and the interior of b is not empty. public bool Within(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry is spatially within the other geometry, false otherwise."
  },
  "api/OSGeo.MapGuide.MgGeometryCollection.html": {
    "href": "api/OSGeo.MapGuide.MgGeometryCollection.html",
    "title": "Class MgGeometryCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometryCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometryCollection provides support for defining an ordered set of geometry objects. public class MgGeometryCollection : MgGuardDisposable, IDisposable, IList<MgGeometry>, ICollection<MgGeometry>, IEnumerable<MgGeometry>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgGeometryCollection Implements IDisposable IList<MgGeometry> ICollection<MgGeometry> IEnumerable<MgGeometry> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgGeometryCollection() Construct a MgGeometryCollection object public MgGeometryCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgGeometry this[int index] { get; set; } Parameters index int Property Value MgGeometry Methods Add(MgGeometry) Adds the specified object to the end of the collection. public void Add(MgGeometry value) Parameters value MgGeometry (MgGeometry) Object to add to the collection. Clear() Removes all objects from the collection. public void Clear() Contains(MgGeometry) public virtual bool Contains(MgGeometry value) Parameters value MgGeometry Returns bool CopyTo(MgGeometry[], int) public void CopyTo(MgGeometry[] array, int arrayIndex) Parameters array MgGeometry[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgGeometry> GetEnumerator() Returns IEnumerator<MgGeometry> GetItem(int) public virtual MgGeometry GetItem(int index) Parameters index int Returns MgGeometry IndexOf(MgGeometry) public virtual int IndexOf(MgGeometry value) Parameters value MgGeometry Returns int Insert(int, MgGeometry) Inserts the specified object at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgGeometry value) Parameters index int (int) Index at which to insert the object. value MgGeometry (MgGeometry) Object to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgGeometry) Removes the specified object from the collection. Returns true if removal was successful. public bool Remove(MgGeometry value) Parameters value MgGeometry (MgGeometry) Object reference to remove. Returns bool Returns true if object was removed. RemoveAt(int) Removes the object at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the object to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgGeometry) Sets the object in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgGeometry value) Parameters index int (int) Index of the object to set. value MgGeometry (MgGeometry) Object to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgGeometryComponent.html": {
    "href": "api/OSGeo.MapGuide.MgGeometryComponent.html",
    "title": "Class MgGeometryComponent | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometryComponent Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometryComponent is the base class for all of the geometry component types, namely, MgArcSegment, MgCurveRing, MgLinearRing, and MgLinearSegment. public class MgGeometryComponent : MgGeometricEntity, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometryComponent Implements IDisposable Derived MgCurveSegment MgRing Inherited Members MgGeometricEntity.Dimension MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.GetDimension() MgGeometricEntity.IsEmpty() MgGeometricEntity.IsSimple() MgGeometricEntity.IsClosed() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.Copy() MgGeometricEntity.Transform(MgTransform) MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ComponentType public int ComponentType { get; } Property Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetComponentType() Gets the type of this geometry component. public int GetComponentType() Returns int Returns one of the values defined in MgGeometryComponentType."
  },
  "api/OSGeo.MapGuide.MgGeometryComponentType.html": {
    "href": "api/OSGeo.MapGuide.MgGeometryComponentType.html",
    "title": "Class MgGeometryComponentType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometryComponentType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometryComponentType defines a set of integer constants used to signify the type of a geometry component instance. public class MgGeometryComponentType Inheritance object MgGeometryComponentType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ArcSegment Specifies the geometry component is an MgArcSegment. public const int ArcSegment = 130 Field Value int CurveRing Specifies the geometry component is an MgCurveRing. public const int CurveRing = 132 Field Value int LinearRing Specifies the geometry component is a MgLinearRing. public const int LinearRing = 129 Field Value int LinearSegment Specifies the geometry component is an MgLinearSegment. public const int LinearSegment = 131 Field Value int"
  },
  "api/OSGeo.MapGuide.MgGeometryEntityType.html": {
    "href": "api/OSGeo.MapGuide.MgGeometryEntityType.html",
    "title": "Class MgGeometryEntityType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometryEntityType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometryEntityType defines two integer constants which signify whether an MgGeometricEntity is a geometry or a geometry component. public class MgGeometryEntityType Inheritance object MgGeometryEntityType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Geometry (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Specifies that the geometric entity is a geometry. public const int Geometry = 1 Field Value int GeometryComponent (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Specifies that the geometric entity is a geometry component. public const int GeometryComponent = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgGeometryFactory.html": {
    "href": "api/OSGeo.MapGuide.MgGeometryFactory.html",
    "title": "Class MgGeometryFactory | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometryFactory Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll The MgGeometryFactory class is used to construct objects whose classes are derived from MgGeometry. public class MgGeometryFactory : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgGeometryFactory Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgGeometryFactory() Creates an MgGeometryFactory object public MgGeometryFactory() Methods CreateArcSegment(MgCoordinate, MgCoordinate, MgCoordinate) Creates an arc segment from start, end, and control coordinates. public MgArcSegment CreateArcSegment(MgCoordinate start, MgCoordinate end, MgCoordinate control) Parameters start MgCoordinate (MgCoordinate) The MgCoordinate that specifies the start point of the arc. end MgCoordinate (MgCoordinate) The MgCoordinate that specifies the end point of the arc. control MgCoordinate (MgCoordinate) The MgCoordinate that specifies the control point of the arc. Returns MgArcSegment An instance of MgArcSegment. CreateCoordinateXY(double, double) Creates an MgCoordinate object with Dimension = XY, X = x, Y = y. public MgCoordinate CreateCoordinateXY(double x, double y) Parameters x double (double) X value for the coordinate. y double (double) Y value for the coordinate. Returns MgCoordinate An initialized MgCoordinate instance. CreateCoordinateXYM(double, double, double) Creates an MgCoordinate object with Dimension = XYM, X = x, Y = y, M = m. public MgCoordinate CreateCoordinateXYM(double x, double y, double m) Parameters x double (double) X value for the coordinate. y double (double) Y value for the coordinate. m double (double) M value for the coordinate. Returns MgCoordinate An initialized MgCoordinate instance. CreateCoordinateXYZ(double, double, double) Creates an MgCoordinate object with Dimension = XYZ, X = x, Y = y, Z = z. public MgCoordinate CreateCoordinateXYZ(double x, double y, double z) Parameters x double (double) X value for the coordinate. y double (double) Y value for the coordinate. z double (double) Z value for the coordinate. Returns MgCoordinate An initialized MgCoordinate instance. CreateCoordinateXYZM(double, double, double, double) Creates an MgCoordinate object with Dimension = XYZM, X = x, Y = y, Z = z, M = m. public MgCoordinate CreateCoordinateXYZM(double x, double y, double z, double m) Parameters x double (double) X value for the coordinate. y double (double) Y value for the coordinate. z double (double) Z value for the coordinate. m double (double) M value for the coordinate. Returns MgCoordinate An initialized MgCoordinate instance. CreateCurvePolygon(MgCurveRing, MgCurveRingCollection) Creates a curve polygon from an outer ring and a collection of inner rings. public MgCurvePolygon CreateCurvePolygon(MgCurveRing outerRing, MgCurveRingCollection innerRings) Parameters outerRing MgCurveRing (MgCurveRing) An MgCurveRing that specifies the polygons outer boundary. innerRings MgCurveRingCollection (MgCurveRingCollection) An MgCurveRingCollection that specifies the polygons holes. This parameter may be null. Returns MgCurvePolygon An instance of MgCurvePolygon. CreateCurveRing(MgCurveSegmentCollection) Creates a curve ring from a collection of curve segments. public MgCurveRing CreateCurveRing(MgCurveSegmentCollection curveSegments) Parameters curveSegments MgCurveSegmentCollection (MgCurveSegmentCollection) An MgCurveSegmentCollection that specifies the segments of the curve ring. The segments in the collection must form a closed shape. See the example php code for details about the construction of the segments so that the resulting shape is closed. Returns MgCurveRing An instance of MgCurveRing. CreateCurveString(MgCurveSegmentCollection) Creates a curve string from a collection of curve segments. public MgCurveString CreateCurveString(MgCurveSegmentCollection curveSegments) Parameters curveSegments MgCurveSegmentCollection (MgCurveSegmentCollection) An MgCurveSegmentCollection that specifies the segments of the curve string. The collection must contain at least one segment. Returns MgCurveString An instance of MgCurveString. CreateLineString(MgCoordinateCollection) Creates a line string from a collection of coordinates. public MgLineString CreateLineString(MgCoordinateCollection coordinates) Parameters coordinates MgCoordinateCollection (MgCoordinateCollection) An MgCoordinateCollection that specifies the coordinates of the line string. The collection must contain at least two coordinates. Returns MgLineString An instance of MgLineString. CreateLinearRing(MgCoordinateCollection) Creates a linear ring from a collection of coordinates. public MgLinearRing CreateLinearRing(MgCoordinateCollection coordinates) Parameters coordinates MgCoordinateCollection (MgCoordinateCollection) An MgCoordinateCollection that specifies the coordinates of the linear ring. The collection must contain at least three coordinates. Returns MgLinearRing An instance of MgLinearRing. CreateLinearSegment(MgCoordinateCollection) Creates a linear segment from a collection of coordinates. public MgLinearSegment CreateLinearSegment(MgCoordinateCollection coordinates) Parameters coordinates MgCoordinateCollection (MgCoordinateCollection) An MgCoordinateCollection that specifies the coordinates of the linear segment. The collection must contain at least two coordinates. Returns MgLinearSegment An instance of MgLinearSegment. CreateMultiCurvePolygon(MgCurvePolygonCollection) Creates a multi curve polygon aggregate geometry from a collection of curve polygons. public MgMultiCurvePolygon CreateMultiCurvePolygon(MgCurvePolygonCollection polygons) Parameters polygons MgCurvePolygonCollection (MgCurvePolygonCollection) An MgGeometryCollection that specifies the curve polygons. All geometry objects in this collection must be of type MgCurvePolygon. Returns MgMultiCurvePolygon An instance of MgMultiCurvePolygon. CreateMultiCurveString(MgCurveStringCollection) Creates a multi curve string aggregate geometry from a collection of curve strings. public MgMultiCurveString CreateMultiCurveString(MgCurveStringCollection curveStrings) Parameters curveStrings MgCurveStringCollection (MgCurveStringCollection) An MgGeometryCollection that specifies the curve strings. All geometry objects in this collection must be of type MgCurveString. Returns MgMultiCurveString An instance of MgMultiCurveString. CreateMultiGeometry(MgGeometryCollection) Creates an aggregate geometry from a collection of geometry objects. public MgMultiGeometry CreateMultiGeometry(MgGeometryCollection geometries) Parameters geometries MgGeometryCollection (MgGeometryCollection) An MgGeometryCollection that specifies the geometries. Returns MgMultiGeometry An instance of MgMultiGeometry. CreateMultiLineString(MgLineStringCollection) Creates a multi line string aggregate geometry from a collection of line strings. public MgMultiLineString CreateMultiLineString(MgLineStringCollection lineStrings) Parameters lineStrings MgLineStringCollection (MgLineStringCollection) An MgGeometryCollection that specifies the line strings. All geometry objects in this collection must be of type MgLineString. Returns MgMultiLineString An instance of MgMultiLineString. CreateMultiPoint(MgPointCollection) Creates a multi point aggregate geometry from a collection of points. public MgMultiPoint CreateMultiPoint(MgPointCollection points) Parameters points MgPointCollection (MgPointCollection) An MgGeometryCollection that specifies the points. All geometry objects in this collection must be of type MgPoint. Returns MgMultiPoint An instance of MgMultiPoint. CreateMultiPolygon(MgPolygonCollection) Creates a multi polygon aggregate geometry from a collection of polygons. public MgMultiPolygon CreateMultiPolygon(MgPolygonCollection polygons) Parameters polygons MgPolygonCollection (MgPolygonCollection) An MgGeometryCollection that specifies the polygons. All geometry objects in this collection must be of type MgPolygon. Returns MgMultiPolygon An instance of MgMultiPolygon. CreatePoint(MgCoordinate) Creates a point from a coordinate. public MgPoint CreatePoint(MgCoordinate coordinate) Parameters coordinate MgCoordinate (MgCoordinate) An MgCoordinate that specifies the location of this point. Returns MgPoint An instance of MgPoint. CreatePolygon(MgLinearRing, MgLinearRingCollection) Creates a polygon from an outer ring and a collection of inner rings. public MgPolygon CreatePolygon(MgLinearRing outerRing, MgLinearRingCollection innerRings) Parameters outerRing MgLinearRing (MgLinearRing) An MgLinearRing that specifies the polygons outer boundary. innerRings MgLinearRingCollection (MgLinearRingCollection) An MgLinearRingCollection that specifies the polygons holes. This parameter may be null. Returns MgPolygon An instance of MgPolygon. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgGeometryProperty.html": {
    "href": "api/OSGeo.MapGuide.MgGeometryProperty.html",
    "title": "Class MgGeometryProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometryProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores MgByteReader data with an associated key name. public class MgGeometryProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgGeometryProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgGeometryProperty(string, MgByteReader) Constructs an MgGeometryProperty object. public MgGeometryProperty(string name, MgByteReader value) Parameters name string (String/string) The name of the property. value MgByteReader (MgByteReader) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public MgByteReader Value { get; set; } Property Value MgByteReader Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Geometry. GetValue() Gets the property value. public MgByteReader GetValue() Returns MgByteReader Returns the property value. SetValue(MgByteReader) Sets the property value. public void SetValue(MgByteReader value) Parameters value MgByteReader (MgByteReader) The value of the property."
  },
  "api/OSGeo.MapGuide.MgGeometrySimplificationAlgorithmType.html": {
    "href": "api/OSGeo.MapGuide.MgGeometrySimplificationAlgorithmType.html",
    "title": "Class MgGeometrySimplificationAlgorithmType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometrySimplificationAlgorithmType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometrySimplificationAlgorithmType defines constants indicating the various simplification algorithms available for simplifying geometry instances public class MgGeometrySimplificationAlgorithmType Inheritance object MgGeometrySimplificationAlgorithmType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DouglasPeucker Specifies that the Douglas-Peucker algorithm be used for simplification. public const int DouglasPeucker = 0 Field Value int TopologyPreserving Specifies that the Topology Preserving algorithm be used for simplification public const int TopologyPreserving = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgGeometrySimplifier.html": {
    "href": "api/OSGeo.MapGuide.MgGeometrySimplifier.html",
    "title": "Class MgGeometrySimplifier | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometrySimplifier Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll The MgGeometrySimplifier class provides the ability to simplify MgGeometry instances. public class MgGeometrySimplifier : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgGeometrySimplifier Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgGeometrySimplifier() Creates an MgGeometrySimplifier object public MgGeometrySimplifier() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Simplify(MgGeometry, double, int) Simplifies the given geometry using the specified algorithm and tolerance public MgGeometry Simplify(MgGeometry geom, double tolerance, int algorithm) Parameters geom MgGeometry (MgGeometry) The geometry instance to be simplified tolerance double (double) The tolerance factor to simplify by algorithm int (int) The simplification algorithm to use. Use any value from MgGeometrySimplificationAlgorithmType Returns MgGeometry A simplified MgGeometry instance or null if simpification results in an empty geometry"
  },
  "api/OSGeo.MapGuide.MgGeometryType.html": {
    "href": "api/OSGeo.MapGuide.MgGeometryType.html",
    "title": "Class MgGeometryType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometryType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgGeometryType defines integer constants used to signify the derived type of an MgGeometry instance. public class MgGeometryType Inheritance object MgGeometryType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CurvePolygon Specifies that the geometry is a CurvePolygon. public const int CurvePolygon = 11 Field Value int CurveString Specifies that the geometry is a CurveString. public const int CurveString = 10 Field Value int LineString Specifies that the geometry is a LineString. public const int LineString = 2 Field Value int MultiCurvePolygon Specifies the geometry is a MultiPolygon. public const int MultiCurvePolygon = 13 Field Value int MultiCurveString Specifies that the geometry is a MultiLineString. public const int MultiCurveString = 12 Field Value int MultiGeometry Specifies that the geometry is a MultiGeometry. In OpenGIS this is referred to as a GeometryCollection. public const int MultiGeometry = 7 Field Value int MultiLineString Specifies that the geometry is a MultiLineString. public const int MultiLineString = 5 Field Value int MultiPoint Specifies that the geometry is a MultiPoint. public const int MultiPoint = 4 Field Value int MultiPolygon Specifies that the geometry is a MultiPolygon. public const int MultiPolygon = 6 Field Value int Point Specifies that the geometry is a Point. public const int Point = 1 Field Value int Polygon Specifies that the geometry is a Polygon. public const int Polygon = 3 Field Value int"
  },
  "api/OSGeo.MapGuide.MgGeometryTypeInfo.html": {
    "href": "api/OSGeo.MapGuide.MgGeometryTypeInfo.html",
    "title": "Class MgGeometryTypeInfo | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGeometryTypeInfo Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines a list of geometric types. This is typically used for geometric property description. public class MgGeometryTypeInfo : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometryTypeInfo Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgGeometryTypeInfo() Constructs an MgGeometryTypeInfo object public MgGeometryTypeInfo() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the count of geometry types in the list. public int GetCount() Returns int GetType(int) Gets the MgGeometryType value which specifies one of the types of FGF geometry (Point, LineString, CurveString, ...) public int GetType(int index) Parameters index int (int) The index value of the type to get. This must be in the range of zero to MgGeometryTypeInfo::GetCount()-1. Returns int SetTypes(MgIntCollection) Sets the geometry type value list. Elements must be integers as defined by MgGeometryType. public void SetTypes(MgIntCollection types) Parameters types MgIntCollection (MgIntCollection*) The collection of types. There must be no more than MG_MAX_GEOMETRY_TYPE_SIZE elements."
  },
  "api/OSGeo.MapGuide.MgGroup.html": {
    "href": "api/OSGeo.MapGuide.MgGroup.html",
    "title": "Class MgGroup | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGroup Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll MapGuide groups. public class MgGroup Inheritance object MgGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Everyone public const string Everyone = \"Everyone\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgGuardDisposable.html": {
    "href": "api/OSGeo.MapGuide.MgGuardDisposable.html",
    "title": "Class MgGuardDisposable | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGuardDisposable Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll MgGuardDisposable is the base interface for all classes that implement this standard interface for thread-safe reference counting and object destruction. public class MgGuardDisposable : MgDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable Implements IDisposable Derived MgAgfReaderWriter MgByteSink MgByteSource MgCoordinateCollection MgCoordinateIterator MgCoordinateSystem MgCoordinateSystemCatalog MgCoordinateSystemCategory MgCoordinateSystemDatum MgCoordinateSystemDictionaryBase MgCoordinateSystemDictionaryUtility MgCoordinateSystemEllipsoid MgCoordinateSystemEnum MgCoordinateSystemEnumInteger32 MgCoordinateSystemFactory MgCoordinateSystemFilter MgCoordinateSystemFilterInteger32 MgCoordinateSystemFormatConverter MgCoordinateSystemGeodeticPath MgCoordinateSystemGeodeticPathElement MgCoordinateSystemGeodeticTransformDef MgCoordinateSystemGeodeticTransformDefParams MgCoordinateSystemGeodeticTransformGridFile MgCoordinateSystemGeodeticTransformation MgCoordinateSystemGridBase MgCoordinateSystemGridBoundary MgCoordinateSystemGridLine MgCoordinateSystemGridLineCollection MgCoordinateSystemGridRegion MgCoordinateSystemGridRegionCollection MgCoordinateSystemGridSpecification MgCoordinateSystemGridTick MgCoordinateSystemGridTickCollection MgCoordinateSystemMathComparator MgCoordinateSystemProjectionInformation MgCoordinateSystemUnitInformation MgCurvePolygonCollection MgCurveRingCollection MgCurveSegmentCollection MgCurveStringCollection MgGeoJsonWriter MgGeometryCollection MgGeometryFactory MgGeometrySimplifier MgHttpHeader MgHttpPrimitiveValue MgHttpRequest MgHttpRequestMetadata MgHttpRequestParam MgHttpResponse MgHttpResult MgLayerCollection MgLayerGroupCollection MgLineStringCollection MgLinearRingCollection MgMapCollection MgMeasure MgPointCollection MgPolygonCollection MgPortableServiceFactory MgPreparedGeometry MgReadOnlyLayerCollection MgSerializable MgServerAdmin MgService MgSite MgSiteConnection MgTransform MgWebCommandCollection MgWebLayout MgWebUiPane MgWebWidget MgWebWidgetCollection MgWktReaderWriter Inherited Members MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgGuardDisposable(IntPtr, bool) protected MgGuardDisposable(IntPtr cPtr, bool cMemoryOwn) Parameters cPtr IntPtr cMemoryOwn bool Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool getCPtr(MgGuardDisposable) public static HandleRef getCPtr(MgGuardDisposable obj) Parameters obj MgGuardDisposable Returns HandleRef swigRelease(MgGuardDisposable) public static HandleRef swigRelease(MgGuardDisposable obj) Parameters obj MgGuardDisposable Returns HandleRef"
  },
  "api/OSGeo.MapGuide.MgGwsFeatureReader.html": {
    "href": "api/OSGeo.MapGuide.MgGwsFeatureReader.html",
    "title": "Class MgGwsFeatureReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgGwsFeatureReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides a forward-only, read-only iterator for reading data returned by a call to GwsQueryEngine. public class MgGwsFeatureReader : MgFeatureReader, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgReader MgFeatureReader MgGwsFeatureReader Implements IDisposable Inherited Members MgFeatureReader.GetClassDefinition() MgFeatureReader.GetFeatureObject(string) MgFeatureReader.GetFeatureObject(int) MgReader.ReadNext() MgReader.GetPropertyCount() MgReader.GetPropertyName(int) MgReader.GetPropertyType(string) MgReader.GetPropertyType(int) MgReader.IsNull(string) MgReader.GetBoolean(string) MgReader.GetByte(string) MgReader.GetDateTime(string) MgReader.GetSingle(string) MgReader.GetDouble(string) MgReader.GetInt16(string) MgReader.GetInt32(string) MgReader.GetInt64(string) MgReader.GetString(string) MgReader.GetBLOB(string) MgReader.GetCLOB(string) MgReader.GetGeometry(string) MgReader.GetRaster(string) MgReader.GetPropertyIndex(string) MgReader.IsNull(int) MgReader.GetBoolean(int) MgReader.GetByte(int) MgReader.GetDateTime(int) MgReader.GetSingle(int) MgReader.GetDouble(int) MgReader.GetInt16(int) MgReader.GetInt32(int) MgReader.GetInt64(int) MgReader.GetString(int) MgReader.GetBLOB(int) MgReader.GetCLOB(int) MgReader.GetGeometry(int) MgReader.GetRaster(int) MgReader.Close() MgReader.GetReaderType() MgReader.ToXml() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgHttpHeader.html": {
    "href": "api/OSGeo.MapGuide.MgHttpHeader.html",
    "title": "Class MgHttpHeader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgHttpHeader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgHttpHeader : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgHttpHeader Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgHttpHeader() public MgHttpHeader() Methods AddHeader(string, string) public bool AddHeader(string name, string value) Parameters name string value string Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDateHeader(string) public int GetDateHeader(string name) Parameters name string Returns int GetHeaderNames() public MgStringCollection GetHeaderNames() Returns MgStringCollection GetHeaderValue(string) public string GetHeaderValue(string name) Parameters name string Returns string GetHeaders(string) public MgStringCollection GetHeaders(string name) Parameters name string Returns MgStringCollection GetIntHeader(string) public int GetIntHeader(string name) Parameters name string Returns int RemoveHeader(string) public bool RemoveHeader(string name) Parameters name string Returns bool SetHeaderValue(string, string) public bool SetHeaderValue(string name, string value) Parameters name string value string Returns bool"
  },
  "api/OSGeo.MapGuide.MgHttpPrimitiveValue.html": {
    "href": "api/OSGeo.MapGuide.MgHttpPrimitiveValue.html",
    "title": "Class MgHttpPrimitiveValue | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgHttpPrimitiveValue Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgHttpPrimitiveValue : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgHttpPrimitiveValue Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MgHttpPrimitiveValue(bool) public MgHttpPrimitiveValue(bool value) Parameters value bool MgHttpPrimitiveValue(int) public MgHttpPrimitiveValue(int value) Parameters value int MgHttpPrimitiveValue(string) public MgHttpPrimitiveValue(string value) Parameters value string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBoolValue() public bool GetBoolValue() Returns bool GetIntegerValue() public int GetIntegerValue() Returns int GetStringValue() public string GetStringValue() Returns string GetType() public int GetType() Returns int ToString() public string ToString() Returns string"
  },
  "api/OSGeo.MapGuide.MgHttpRequest.html": {
    "href": "api/OSGeo.MapGuide.MgHttpRequest.html",
    "title": "Class MgHttpRequest | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgHttpRequest Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgHttpRequest : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgHttpRequest Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgHttpRequest(string) public MgHttpRequest(string agentUri) Parameters agentUri string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Execute() public MgHttpResponse Execute() Returns MgHttpResponse GetAgentUri() public string GetAgentUri() Returns string GetHeader() public MgHttpHeader GetHeader() Returns MgHttpHeader GetRequestMetadata() public MgHttpRequestMetadata GetRequestMetadata() Returns MgHttpRequestMetadata GetRequestParam() public MgHttpRequestParam GetRequestParam() Returns MgHttpRequestParam"
  },
  "api/OSGeo.MapGuide.MgHttpRequestMetadata.html": {
    "href": "api/OSGeo.MapGuide.MgHttpRequestMetadata.html",
    "title": "Class MgHttpRequestMetadata | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgHttpRequestMetadata Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgHttpRequestMetadata : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgHttpRequestMetadata Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgHttpRequestMetadata() public MgHttpRequestMetadata() Methods AddProperty(string, string) public bool AddProperty(string property, string value) Parameters property string value string Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyNames() public MgStringCollection GetPropertyNames() Returns MgStringCollection GetPropertyValue(string) public string GetPropertyValue(string property) Parameters property string Returns string RemoveProperty(string) public bool RemoveProperty(string property) Parameters property string Returns bool SetPropertyValue(string, string) public bool SetPropertyValue(string name, string value) Parameters name string value string Returns bool"
  },
  "api/OSGeo.MapGuide.MgHttpRequestParam.html": {
    "href": "api/OSGeo.MapGuide.MgHttpRequestParam.html",
    "title": "Class MgHttpRequestParam | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgHttpRequestParam Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgHttpRequestParam : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgHttpRequestParam Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgHttpRequestParam() public MgHttpRequestParam() Methods AddParameter(string, string) public bool AddParameter(string name, string value) Parameters name string value string Returns bool ContainsParameter(string) public bool ContainsParameter(string name) Parameters name string Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetParameterNames() public MgStringCollection GetParameterNames() Returns MgStringCollection GetParameterType(string) public string GetParameterType(string parameterName) Parameters parameterName string Returns string GetParameterValue(string) public string GetParameterValue(string parameterName) Parameters parameterName string Returns string RemoveParameter(string) public bool RemoveParameter(string name) Parameters name string Returns bool SetParameterType(string, string) public bool SetParameterType(string name, string value) Parameters name string value string Returns bool SetParameterValue(string, string) public bool SetParameterValue(string name, string value) Parameters name string value string Returns bool"
  },
  "api/OSGeo.MapGuide.MgHttpResponse.html": {
    "href": "api/OSGeo.MapGuide.MgHttpResponse.html",
    "title": "Class MgHttpResponse | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgHttpResponse Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgHttpResponse : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgHttpResponse Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgHttpResponse() public MgHttpResponse() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetHeader() public MgHttpHeader GetHeader() Returns MgHttpHeader GetResult() public MgHttpResult GetResult() Returns MgHttpResult"
  },
  "api/OSGeo.MapGuide.MgHttpResult.html": {
    "href": "api/OSGeo.MapGuide.MgHttpResult.html",
    "title": "Class MgHttpResult | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgHttpResult Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgHttpResult : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgHttpResult Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDetailedErrorMessage() public string GetDetailedErrorMessage() Returns string GetErrorMessage() public string GetErrorMessage() Returns string GetHttpStatusMessage() public string GetHttpStatusMessage() Returns string GetResultContentType() public string GetResultContentType() Returns string GetResultObject() public MgDisposable GetResultObject() Returns MgDisposable GetStatusCode() public int GetStatusCode() Returns int SetDetailedErrorMessage(string) public void SetDetailedErrorMessage(string errorMsg) Parameters errorMsg string SetErrorMessage(string) public void SetErrorMessage(string errorMsg) Parameters errorMsg string SetHttpStatusMessage(string) public void SetHttpStatusMessage(string errorMsg) Parameters errorMsg string SetResultObject(MgDisposable, string) public void SetResultObject(MgDisposable resultObject, string contentType) Parameters resultObject MgDisposable contentType string SetStatusCode(int) public void SetStatusCode(int status) Parameters status int"
  },
  "api/OSGeo.MapGuide.MgImageFormats.html": {
    "href": "api/OSGeo.MapGuide.MgImageFormats.html",
    "title": "Class MgImageFormats | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgImageFormats Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Image formats supported by the rendering service. public class MgImageFormats Inheritance object MgImageFormats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Gif Gif format public const string Gif = \"GIF\" Field Value string Jpeg Jpeg format public const string Jpeg = \"JPG\" Field Value string Meta Meta format for rfc90 meta tiling public const string Meta = \"META\" Field Value string Png Png format public const string Png = \"PNG\" Field Value string Png8 Png format public const string Png8 = \"PNG8\" Field Value string Raw Raw format public const string Raw = \"RAW\" Field Value string Tiff Tiff format public const string Tiff = \"TIF\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgInsertFeatures.html": {
    "href": "api/OSGeo.MapGuide.MgInsertFeatures.html",
    "title": "Class MgInsertFeatures | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgInsertFeatures Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Creates an insert feature data command. You must add this command to an MgFeatureCommandCollection object and pass the latter in a call to MgFeatureService::UpdateFeatures. public class MgInsertFeatures : MgFeatureCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureCommand MgInsertFeatures Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgInsertFeatures(string, MgBatchPropertyCollection) Constructs an insert command containing many features. public MgInsertFeatures(string className, MgBatchPropertyCollection propertyValueCollection) Parameters className string (String/string) The name of the class in the schema definition in the feature source used to create the feature instances to be inserted. propertyValueCollection MgBatchPropertyCollection (MgBatchPropertyCollection) The collection of property collections to be inserted into the feature source. Each collection contains the property values for one feature. &lt;!-- Example (PHP) --&gt; MgInsertFeatures(string, MgPropertyCollection) Constructs an insert command containing one feature. public MgInsertFeatures(string className, MgPropertyCollection propertyValues) Parameters className string (String/string) The name of the class in the feature source into which the collection of property values is to be inserted. propertyValues MgPropertyCollection (MgPropertyCollection) The collection of property values to be inserted into the feature source. &lt;!-- Example (PHP) --&gt; Properties CommandType public int CommandType { get; } Property Value int FeatureClassName public string FeatureClassName { get; } Property Value string PropertyValues public MgPropertyCollection PropertyValues { get; } Property Value MgPropertyCollection Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCommandType() public override int GetCommandType() Returns int GetFeatureClassName() public string GetFeatureClassName() Returns string GetPropertyValues() public MgPropertyCollection GetPropertyValues() Returns MgPropertyCollection"
  },
  "api/OSGeo.MapGuide.MgInt16Property.html": {
    "href": "api/OSGeo.MapGuide.MgInt16Property.html",
    "title": "Class MgInt16Property | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgInt16Property Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores Int16 data with an associated key name. public class MgInt16Property : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgInt16Property Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgInt16Property(string, short) Constructs an MgInt16Property object. public MgInt16Property(string name, short value) Parameters name string (String/string) The name of the property. value short (short/int) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public short Value { get; set; } Property Value short Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Int16. GetValue() Gets the property value. public short GetValue() Returns short Returns the property value. SetValue(short) Sets the property value. public void SetValue(short value) Parameters value short (short/int) The value of the property."
  },
  "api/OSGeo.MapGuide.MgInt32Property.html": {
    "href": "api/OSGeo.MapGuide.MgInt32Property.html",
    "title": "Class MgInt32Property | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgInt32Property Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores Int32 data with an associated key name. public class MgInt32Property : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgInt32Property Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgInt32Property(string, int) Constructs an MgInt32Property object. public MgInt32Property(string name, int value) Parameters name string (String/string) The name of the property. value int (int) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public int Value { get; set; } Property Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Int32. GetValue() Gets the property value. public int GetValue() Returns int Returns the property value. SetValue(int) Sets the property value. public void SetValue(int value) Parameters value int (int) The value of the property."
  },
  "api/OSGeo.MapGuide.MgInt64Property.html": {
    "href": "api/OSGeo.MapGuide.MgInt64Property.html",
    "title": "Class MgInt64Property | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgInt64Property Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores Int64 data with an associated key name. public class MgInt64Property : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgInt64Property Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgInt64Property(string, long) Constructs an MgInt64Property object. public MgInt64Property(string name, long value) Parameters name string (String/string) The name of the property. value long (long/string) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public long Value { get; set; } Property Value long Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Int64. GetValue() Gets the property value. public long GetValue() Returns long Returns the property value. SetValue(long) Sets the property value. public void SetValue(long value) Parameters value long (long/string) The value of the property."
  },
  "api/OSGeo.MapGuide.MgIntCollection.html": {
    "href": "api/OSGeo.MapGuide.MgIntCollection.html",
    "title": "Class MgIntCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgIntCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll This class represents a collection of integers. The integers are owned and managed by the collection. public class MgIntCollection : MgCollection, IDisposable, IList<int>, ICollection<int>, IEnumerable<int>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgIntCollection Implements IDisposable IList<int> ICollection<int> IEnumerable<int> IEnumerable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgIntCollection() Constructs a StringCollection. Collection is initially empty. public MgIntCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public int this[int index] { get; set; } Parameters index int Property Value int Methods Add(int) Adds the specified item to the end of the collection. public void Add(int value) Parameters value int (int) Input value Exceptions MgException with code (MgDuplicateObjectException) if it is duplicate Clear() Removes all items from the collection. public void Clear() Contains(int) Returns true if the collection contains the specified item, false otherwise. public bool Contains(int value) Parameters value int (int) Input value Returns bool Returns true if the collection contains the specified item, false otherwise CopyTo(int[], int) public void CopyTo(int[] array, int arrayIndex) Parameters array int[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetEnumerator() public IEnumerator<int> GetEnumerator() Returns IEnumerator<int> GetItem(int) public virtual int GetItem(int index) Parameters index int Returns int IndexOf(int) Returns the index of the specified item in the collection or -1 if the item does not exist. public int IndexOf(int value) Parameters value int (int) Input value Returns int Returns the index of the specified item in the collection or -1 if the item does not exist Insert(int, int) Inserts the specified item at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, int value) Parameters index int (int) Input index value int (int) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range MgException with code (MgDuplicateObjectException) if it is duplicate Remove(int) Removes the specified item from the collection. public bool Remove(int value) Parameters value int (int) Input value Returns bool Returns true if removal was successful RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range SetItem(int, int) Sets the item in the collection at the specified index to the specified value. public void SetItem(int index, int value) Parameters index int (int) Input index value int (int) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range MgException with code (MgDuplicateObjectException) if it is duplicate ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. Order of properties in XML would be same as order of properties in collection. It starts with item zero to length of collection. TODO: Add a snippet of XML here? public MgByteReader ToXml() Returns MgByteReader Pointer to an MgByteReader object"
  },
  "api/OSGeo.MapGuide.MgKmlService.html": {
    "href": "api/OSGeo.MapGuide.MgKmlService.html",
    "title": "Class MgKmlService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgKmlService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll This class provides services to retrieve KML documents public class MgKmlService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgKmlService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetFeaturesKml(MgLayer, MgEnvelope, int, int, double, int, string) Returns a layer definition in KML format public MgByteReader GetFeaturesKml(MgLayer layer, MgEnvelope extents, int width, int height, double dpi, int drawOrder, string format) Parameters layer MgLayer Input layer object for which to generate KML. extents MgEnvelope Input required spatial data extents. The extents must be in LL84 coordinates width int Input map width in pixels height int Input map height in pixels dpi double Input resolution in dots per inch drawOrder int Input the draw order for the layer containing these features format string Input requested response format Returns MgByteReader A byte reader containing the generated KML. GetFeaturesKml(MgLayer, MgEnvelope, int, int, double, int, string, string) Returns a layer definition in KML format public MgByteReader GetFeaturesKml(MgLayer layer, MgEnvelope extents, int width, int height, double dpi, int drawOrder, string agentUri, string format) Parameters layer MgLayer Input layer object for which to generate KML. extents MgEnvelope Input required spatial data extents. The extents must be in LL84 coordinates width int Input map width in pixels height int Input map height in pixels dpi double Input resolution in dots per inch drawOrder int Input the draw order for the layer containing these features agentUri string Input URI of map agent that issued request format string Input requested response format Returns MgByteReader A byte reader containing the generated KML. GetLayerKml(MgLayer, MgEnvelope, int, int, double, int, string, string) Returns a layer definition in KML format public MgByteReader GetLayerKml(MgLayer layer, MgEnvelope extents, int width, int height, double dpi, int drawOrder, string agentUri, string format) Parameters layer MgLayer Input layer object for which to generate KML. extents MgEnvelope Input required spatial data extents. The extents must be in LL84 coordinates width int Input map width in pixels height int Input map height in pixels dpi double Input resolution in dots per inch drawOrder int Input the draw order for this layer agentUri string Input URI of map agent that issued request format string Input requested response format Returns MgByteReader A byte reader containing the generated KML. GetMapKml(MgMap, double, string, string) Returns a map definition in KML format public MgByteReader GetMapKml(MgMap map, double dpi, string agentUri, string format) Parameters map MgMap Input map object for which to generate KML. dpi double Input resolution in dots per inch agentUri string Input URI of map agent that issued request format string Input requested response format Returns MgByteReader A byte reader containing the generated KML."
  },
  "api/OSGeo.MapGuide.MgLayer.html": {
    "href": "api/OSGeo.MapGuide.MgLayer.html",
    "title": "Class MgLayer | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLayer Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Gets and sets properties of a layer. public class MgLayer : MgLayerBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgLayerBase MgLayer Implements IDisposable Inherited Members MgLayerBase.Name MgLayerBase.LayerType MgLayerBase.Group MgLayerBase.Visible MgLayerBase.Selectable MgLayerBase.LayerDefinition MgLayerBase.DisplayInLegend MgLayerBase.ExpandInLegend MgLayerBase.LegendLabel MgLayerBase.FeatureSourceId MgLayerBase.FeatureClassName MgLayerBase.Filter MgLayerBase.FeatureGeometryName MgLayerBase.GetName() MgLayerBase.SetName(string) MgLayerBase.GetObjectId() MgLayerBase.GetLayerType() MgLayerBase.GetGroup() MgLayerBase.SetGroup(MgLayerGroup) MgLayerBase.NeedsRefresh() MgLayerBase.ForceRefresh() MgLayerBase.GetVisible() MgLayerBase.SetVisible(bool) MgLayerBase.IsVisible() MgLayerBase.GetSelectable() MgLayerBase.SetSelectable(bool) MgLayerBase.GetLayerDefinition() MgLayerBase.SetLayerDefinition(MgResourceIdentifier, MgResourceService) MgLayerBase.GetDisplayInLegend() MgLayerBase.SetDisplayInLegend(bool) MgLayerBase.GetExpandInLegend() MgLayerBase.GetLegendLabel() MgLayerBase.SetLegendLabel(string) MgLayerBase.GetFeatureSourceId() MgLayerBase.GetFeatureClassName() MgLayerBase.GetFilter() MgLayerBase.GetFeatureGeometryName() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgLayer(MgResourceIdentifier, MgResourceService) Creates a MgLayer object from a layer definition. public MgLayer(MgResourceIdentifier layerDefinition, MgResourceService resourceService) Parameters layerDefinition MgResourceIdentifier (MgResourceIdentifier) Identifier of the layer definition in a repository. resourceService MgResourceService (MgResourceService) An MgResourceService that can be used to retrieve the layer definition. Methods BeginTransaction() Starts a transaction on the this layer. The FDO provider indicated by the layer's Feature Source must support transactions. public MgTransaction BeginTransaction() Returns MgTransaction Returns an MgTransaction instance (or NULL). Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> DeleteFeatures(string, MgTransaction) Deletes all features that match the given filter public int DeleteFeatures(string filter, MgTransaction transaction) Parameters filter string (String/string) The FDO filter string that detemines what features will be deleted transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns int Returns the number of features deleted by this operation Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GenerateLegendImage(double, int, int, string, int, int) Returns the legend image for the specified geometry type and theme category public MgByteReader GenerateLegendImage(double scale, int width, int height, string format, int geomType, int themeCategory) Parameters scale double (double) Input The scale at which the symbolization is requested. width int (int) Input The requested image width in pixels. height int (int) Input The requested image height in pixels. format string (String/string) Input Image format, from MgImageFormats. Example: PNG, JPG, PNG8, etc geomType int (int) Input The type of symbolization required: 1=Point, 2=Line, 3=Area, 4=Composite themeCategory int (int) Input The value indicating which theme category swatch to return. Used when there is a theme defined at this scale. An exception will be thrown if a requested them category doesn&apos;t exist. Returns MgByteReader Returns a stream representing the legend image. The default returned image format will be PNG8 unless a different supported format is requested. An exception will be thrown if an unsupported image format is requested. Exceptions MgException MgArgumentOutOfRangeException\"> MgException MgInvalidResourceTypeException\"> MgException MgNullArgumentException\"> MgException MgInvalidImageFormatException\"> GenerateLegendImage(int, int, string, int, int) Returns the legend image for the specified geometry type and theme category public MgByteReader GenerateLegendImage(int width, int height, string format, int geomType, int themeCategory) Parameters width int (int) Input The requested image width in pixels. height int (int) Input The requested image height in pixels. format string (String/string) Input Image format, from MgImageFormats. Example: PNG, JPG, PNG8, etc geomType int (int) Input The type of symbolization required: 1=Point, 2=Line, 3=Area, 4=Composite themeCategory int (int) Input The value indicating which theme category swatch to return. Used when there is a theme defined at this scale. An exception will be thrown if a requested them category doesn&apos;t exist. Returns MgByteReader Returns a stream representing the legend image. The default returned image format will be PNG8 unless a different supported format is requested. An exception will be thrown if an unsupported image format is requested. Exceptions MgException MgArgumentOutOfRangeException\"> MgException MgInvalidResourceTypeException\"> MgException MgNullArgumentException\"> MgException MgInvalidImageFormatException\"> GetClassDefinition() Gets the class definition for the feature class of the layer. If the feature class of the layer is extended with properties from other feature classes, then all those properties are also contained in the returned public MgClassDefinition GetClassDefinition() Returns MgClassDefinition Returns an MgClassDefinition instance for the feature class of the layer. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> GetCompositeThemeCategoryCount(double, int) Gets the number of composite theme categories for this layer at the map's current scale for the given composite style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale public int GetCompositeThemeCategoryCount(double scale, int compositeOffset) Parameters scale double (double) The scale at which to count the number of applicable theme categories compositeOffset int (int) The zero-based index denoting the particular composite style to count from. 0 = 1st composite style, 1 = 2nd composite style Returns int The number of theme categories for this layer at the map's current scale for the given composite style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale GetCompositeThemeCategoryCount(int) Gets the number of composite theme categories for this layer at the map's current scale for the given composite style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale public int GetCompositeThemeCategoryCount(int compositeOffset) Parameters compositeOffset int (int) The zero-based index denoting the particular composite style to count from. 0 = 1st composite style, 1 = 2nd composite style Returns int The number of theme categories for this layer at the map's current scale for the given composite style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale GetGeometryTypeStyles() Gets the list of geometry type styles for this layer at the map's current scale. Returns NULL if there are no applicable geometry types public MgIntCollection GetGeometryTypeStyles() Returns MgIntCollection The list of geometry type styles for this layer at the map's current scale. Returns NULL if there are no applicable geometry types GetGeometryTypeStyles(double) Gets the list of geometry type styles for this layer at the map's current scale. Returns NULL if there are no applicable geometry types public MgIntCollection GetGeometryTypeStyles(double scale) Parameters scale double (double) The scale at which to retrive the list of applicable geometry types Returns MgIntCollection The list of geometry type styles for this layer at the map's current scale. Returns NULL if there are no applicable geometry types GetSpatialContexts(bool) Gets all of the spatial contexts available in the layer or just the active one public MgSpatialContextReader GetSpatialContexts(bool bActiveOnly) Parameters bActiveOnly bool (boolean/bool) This flag is obsolete and no longer used. Returns MgSpatialContextReader Returns an MgSpatialContextReader object. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> GetThemeCategoryCount(double, int) Gets the number of theme categories for this layer at the map's current scale for the given geometry type style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale public int GetThemeCategoryCount(double scale, int geomType) Parameters scale double (double) The scale at which to count the number of applicable theme categories geomType int (int) The geometry type Returns int The number of theme categories for this layer at the map's current scale for the given geometry type style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale GetThemeCategoryCount(int) Gets the number of theme categories for this layer at the map's current scale for the given geometry type style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale public int GetThemeCategoryCount(int geomType) Parameters geomType int (int) The geometry type Returns int The number of theme categories for this layer at the map's current scale for the given geometry type style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale InsertFeatures(MgBatchPropertyCollection, MgTransaction) Inserts a set of new features into the specified feature class of the specified Feature Source public MgFeatureReader InsertFeatures(MgBatchPropertyCollection properties, MgTransaction transaction) Parameters properties MgBatchPropertyCollection (MgBatchPropertyCollection) The collection of property values to insert. Each MgPropertyCollection within this collection represents property values for a single feature to insert transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns MgFeatureReader Returns a feature reader object that contains the set of properties inserted into the datastore by the insert command. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> InsertFeatures(MgPropertyCollection, MgTransaction) Inserts a new feature into the specified feature class of the specified Feature Source public MgFeatureReader InsertFeatures(MgPropertyCollection properties, MgTransaction transaction) Parameters properties MgPropertyCollection (MgPropertyCollection) The collection of property values to insert transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns MgFeatureReader Returns a feature reader object that contains the set of properties inserted into the datastore by the insert command. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> SelectAggregate(MgFeatureAggregateOptions) Selects groups of features from a feature source and applies filters to each of the groups according to the criteria set in the MgFeatureAggregateOptions argument. If you want to apply the criteria to all features without grouping them, use public MgDataReader SelectAggregate(MgFeatureAggregateOptions options) Parameters options MgFeatureAggregateOptions (MgFeatureAggregateOptions) An MgFeatureAggregateOptions instance containing all the criteria and filters required for this select operation. Returns MgDataReader Returns an MgDataReader containing the group values. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> SelectFeatures(MgFeatureQueryOptions) Selects features from a feature source according to the criteria set in the MgFeatureQueryOptions argument The criteria are applied to all of the features in the feature source. If you want to apply the criteria to a subset of the public MgFeatureReader SelectFeatures(MgFeatureQueryOptions options) Parameters options MgFeatureQueryOptions (MgFeatureQueryOptions) MgFeatureQueryOptions instance containing all required filters for this select operation. Returns MgFeatureReader Returns an MgFeatureReader containing the set of selected features. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> SelectFeatures(MgFeatureQueryOptions, string) Selects features from a feature source according to the criteria set in the MgFeatureQueryOptions argument The criteria are applied to all of the features in the feature source. If you want to apply the criteria to a subset of the public MgFeatureReader SelectFeatures(MgFeatureQueryOptions options, string coordinateSystem) Parameters options MgFeatureQueryOptions (MgFeatureQueryOptions) MgFeatureQueryOptions instance containing all required filters for this select operation. coordinateSystem string (String/string) The WKT string of the coordinate system to transform features to Returns MgFeatureReader Returns an MgFeatureReader containing the set of selected features. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> UpdateFeatures(MgFeatureCommandCollection) Executes the MgDeleteFeatures, MgInsertFeatures, MgUpdateFeatures, OSGeo.MapGuide.MgLockFeatures or OSGeo.MapGuide.MgUnlockFeatures commands contained in the given MgFeatureCommandCollection object. public MgPropertyCollection UpdateFeatures(MgFeatureCommandCollection commands) Parameters commands MgFeatureCommandCollection (MgFeatureCommandCollection) A collection of feature commands to be executed. Returns MgPropertyCollection Returns an MgPropertyCollection object. Each property in the collection corresponds to a command in the MgFeatureCommandCollection argument. The property name is the index of the command in the feature command collection. <ul> <li>If the command is of type MgDeleteFeatures, the property type is an MgPropertyType::Int32, and its value is the number of features deleted.</li> <li>If the command is of type MgInsertFeatures, the property type is an MgPropertyType::Feature, and its value is a MgFeatureReader object. The feature reader object contains the set of properties inserted into the datastore by the insert command.</li> <li>If the command is of type MgUpdateFeatures, the property type is MgPropertyType::Int32, and its value is the number of features updated.</li> <li>If the command is of type OSGeo.MapGuide.MgLockFeatures, the property type is MgPropertyType::Feature, and its value is the number of features locked.</li> <li>If the command is of type OSGeo.MapGuide.MgUnLockFeatures, the property type is MgPropertyType::Int32, and its value is the number of features unlocked.</li> <li>For any of the above commands, if the property type is MgPropertyType::String, it indicates an exception had occurred for that particular command, and its value is the exception message. This only applies when the operation is not using a transaction</li> </ul> Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> UpdateFeatures(MgFeatureCommandCollection, MgTransaction) Executes the MgDeleteFeatures, MgInsertFeatures, MgUpdateFeatures, OSGeo.MapGuide.MgLockFeatures or OSGeo.MapGuide.MgUnlockFeatures commands contained in the given MgFeatureCommandCollection object. public MgPropertyCollection UpdateFeatures(MgFeatureCommandCollection commands, MgTransaction transaction) Parameters commands MgFeatureCommandCollection (MgFeatureCommandCollection) A collection of feature commands to be executed. transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns MgPropertyCollection Returns an MgPropertyCollection object. Each property in the collection corresponds to a command in the MgFeatureCommandCollection argument. The property name is the index of the command in the feature command collection. <ul> <li>If the command is of type MgDeleteFeatures, the property type is an MgPropertyType::Int32, and its value is the number of features deleted.</li> <li>If the command is of type MgInsertFeatures, the property type is an MgPropertyType::Feature, and its value is a MgFeatureReader object. The feature reader object contains the set of properties inserted into the datastore by the insert command.</li> <li>If the command is of type MgUpdateFeatures, the property type is MgPropertyType::Int32, and its value is the number of features updated.</li> <li>If the command is of type OSGeo.MapGuide.MgLockFeatures, the property type is MgPropertyType::Feature, and its value is the number of features locked.</li> <li>If the command is of type OSGeo.MapGuide.MgUnLockFeatures, the property type is MgPropertyType::Int32, and its value is the number of features unlocked.</li> </ul> Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> UpdateMatchingFeatures(MgPropertyCollection, string, MgTransaction) Updates all features that match the given filter with the specified property values public int UpdateMatchingFeatures(MgPropertyCollection properties, string filter, MgTransaction transaction) Parameters properties MgPropertyCollection (MgBatchPropertyCollection) The property values to update matching features with filter string (String/string) The FDO filter string that detemines what features will be updated transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns int Returns the number of features updated by this operation Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\">"
  },
  "api/OSGeo.MapGuide.MgLayerBase.html": {
    "href": "api/OSGeo.MapGuide.MgLayerBase.html",
    "title": "Class MgLayerBase | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLayerBase Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Gets and sets properties of a layer. public class MgLayerBase : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgLayerBase Implements IDisposable Derived MgLayer MgPortableLayer Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgLayerBase(MgResourceIdentifier, MgResourceService) Creates an MgLayerBase object from a layer definition. public MgLayerBase(MgResourceIdentifier layerDefinition, MgResourceService resourceService) Parameters layerDefinition MgResourceIdentifier (MgResourceIdentifier) Identifier of the layer definition in a repository. resourceService MgResourceService (MgResourceService) An MgResourceService that can be used to retrieve the layer definition. Properties DisplayInLegend public bool DisplayInLegend { get; set; } Property Value bool ExpandInLegend public bool ExpandInLegend { get; } Property Value bool FeatureClassName public string FeatureClassName { get; } Property Value string FeatureGeometryName public string FeatureGeometryName { get; } Property Value string FeatureSourceId public string FeatureSourceId { get; } Property Value string Filter public string Filter { get; } Property Value string Group public MgLayerGroup Group { get; set; } Property Value MgLayerGroup LayerDefinition public MgResourceIdentifier LayerDefinition { get; } Property Value MgResourceIdentifier LayerType public int LayerType { get; } Property Value int LegendLabel public string LegendLabel { get; set; } Property Value string Name public string Name { get; set; } Property Value string Selectable public bool Selectable { get; set; } Property Value bool Visible public bool Visible { get; set; } Property Value bool Methods BeginTransaction() Starts a transaction on the this layer. The FDO provider indicated by the layer's Feature Source must support transactions. public MgTransaction BeginTransaction() Returns MgTransaction Returns an MgTransaction instance (or NULL). Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> DeleteFeatures(string, MgTransaction) Deletes all features that match the given filter public int DeleteFeatures(string filter, MgTransaction transaction) Parameters filter string (String/string) The FDO filter string that detemines what features will be deleted transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns int Returns the number of features deleted by this operation Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool ForceRefresh() Forces the data for this layer to be refreshed during the next map update. public void ForceRefresh() GetClassDefinition() Gets the class definition for the feature class of the layer. If the feature class of the layer is extended with properties from other feature classes, then all those properties are also contained in the returned public MgClassDefinition GetClassDefinition() Returns MgClassDefinition Returns an MgClassDefinition instance for the feature class of the layer. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> GetDisplayInLegend() Determines whether an entry for the layer should appear in the legend. public bool GetDisplayInLegend() Returns bool Returns true if the layer should appear in the legend, or false otherwise. GetExpandInLegend() Determines whether the entry for the layer should initially be expanded in the legend, if possible. public bool GetExpandInLegend() Returns bool Returns true if the layer should initially be expanded in the legend, or false otherwise. GetFeatureClassName() Gets the feature class name associated with this layer public string GetFeatureClassName() Returns string Returns the feature class name or an empty string if this layer is not a feature layer false otherwise. GetFeatureGeometryName() Gets the geometry name associated with this layer which is part of class definition public string GetFeatureGeometryName() Returns string Returns the feature geometry name or an empty string if this layer is not a feature layer GetFeatureSourceId() Gets the feature source associated with this layer public string GetFeatureSourceId() Returns string Returns the feature source or an empty string if this layer is not a feature layer false otherwise. GetFilter() Gets the filter associated with this layer public string GetFilter() Returns string Returns the filter or an empty string if this layer is not a feature layer or doesn't have filter. GetGroup() Gets the group this layer is organized within. public MgLayerGroup GetGroup() Returns MgLayerGroup Returns an MgLayerGroup representing the parent group, or NULL if the layer does not belong to a group. GetLayerDefinition() Gets the layer's definition. public MgResourceIdentifier GetLayerDefinition() Returns MgResourceIdentifier Returns the resource identifier of the layer's definition. GetLayerType() Gets the type of the layer. public int GetLayerType() Returns int Returns the type of the layer. GetLegendLabel() Gets the label to be displayed for the layer in the legend. public string GetLegendLabel() Returns string Returns the legend label as a string. GetName() Gets the name of the layer. public string GetName() Returns string Returns the name of the layer as a string. GetObjectId() Gets a unique identifier for this layer. public string GetObjectId() Returns string Returns the unique identifier of this map as a string. GetSelectable() Determines whether features on the layer are selectable. public bool GetSelectable() Returns bool Returns true if features are selectable on this layer, or false otherwise. GetSpatialContexts(bool) Gets all of the spatial contexts available in the layer or just the active one public MgSpatialContextReader GetSpatialContexts(bool bActiveOnly) Parameters bActiveOnly bool (boolean/bool) This flag is obsolete and no longer used. Returns MgSpatialContextReader Returns an MgSpatialContextReader object. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> GetVisible() Determines whether the layer is potentially visible. public bool GetVisible() Returns bool Returns true if the layer is potentially visible, or false otherwise. InsertFeatures(MgBatchPropertyCollection, MgTransaction) Inserts a set of new features into the specified feature class of the specified Feature Source public MgFeatureReader InsertFeatures(MgBatchPropertyCollection properties, MgTransaction transaction) Parameters properties MgBatchPropertyCollection (MgBatchPropertyCollection) The collection of property values to insert. Each MgPropertyCollection within this collection represents property values for a single feature to insert transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns MgFeatureReader Returns a feature reader object that contains the set of properties inserted into the datastore by the insert command. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> InsertFeatures(MgPropertyCollection, MgTransaction) Inserts a new feature into the specified feature class of the specified Feature Source public MgFeatureReader InsertFeatures(MgPropertyCollection properties, MgTransaction transaction) Parameters properties MgPropertyCollection (MgPropertyCollection) The collection of property values to insert transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns MgFeatureReader Returns a feature reader object that contains the set of properties inserted into the datastore by the insert command. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> IsVisible() Returns the actual visibility of the layer. public bool IsVisible() Returns bool Returns true if the layer is actually visible, or false otherwise. NeedsRefresh() Determines whether the data for this layer will be refreshed during the next map update. public bool NeedsRefresh() Returns bool Returns true if the layer will be refreshed, or false otherwise. SelectAggregate(MgFeatureAggregateOptions) Selects groups of features from a feature source and applies filters to each of the groups according to the criteria set in the MgFeatureAggregateOptions argument. If you want to apply the criteria to all features without grouping them, use public MgDataReader SelectAggregate(MgFeatureAggregateOptions options) Parameters options MgFeatureAggregateOptions (MgFeatureAggregateOptions) An MgFeatureAggregateOptions instance containing all the criteria and filters required for this select operation. Returns MgDataReader Returns an MgDataReader containing the group values. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> SelectFeatures(MgFeatureQueryOptions) Selects features from a feature source according to the criteria set in the MgFeatureQueryOptions argument The criteria are applied to all of the features in the feature source. If you want to apply the criteria to a subset of the public MgFeatureReader SelectFeatures(MgFeatureQueryOptions options) Parameters options MgFeatureQueryOptions (MgFeatureQueryOptions) MgFeatureQueryOptions instance containing all required filters for this select operation. Returns MgFeatureReader Returns an MgFeatureReader containing the set of selected features. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> SelectFeatures(MgFeatureQueryOptions, string) Selects features from a feature source according to the criteria set in the MgFeatureQueryOptions argument The criteria are applied to all of the features in the feature source. If you want to apply the criteria to a subset of the public MgFeatureReader SelectFeatures(MgFeatureQueryOptions options, string coordinateSystem) Parameters options MgFeatureQueryOptions (MgFeatureQueryOptions) MgFeatureQueryOptions instance containing all required filters for this select operation. coordinateSystem string (String/string) The WKT string of the coordinate system to transform features to Returns MgFeatureReader Returns an MgFeatureReader containing the set of selected features. Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgFdoException\"> SetDisplayInLegend(bool) Specifies whether an entry for the layer should appear in the legend. public void SetDisplayInLegend(bool displayInLegend) Parameters displayInLegend bool (boolean/bool) True if the layer should appear in the legend, false otherwise. SetGroup(MgLayerGroup) Specifies which group this layer is organized within. public void SetGroup(MgLayerGroup group) Parameters group MgLayerGroup (MgLayerGroup) Group this layer is organized within, or NULL to have the layer not belong to any group. SetLayerDefinition(MgResourceIdentifier, MgResourceService) Sets the the layer definition for this layer. public void SetLayerDefinition(MgResourceIdentifier layerDefinition, MgResourceService resourceService) Parameters layerDefinition MgResourceIdentifier (MgResourceIdentifier) Identifier of the layer definition in a resource repository resourceService MgResourceService (MgResourceService) An MgResourceService that can be used to retrieve the layer definition. SetLegendLabel(string) Sets the label to be displayed for the layer in the legend. public void SetLegendLabel(string legendLabel) Parameters legendLabel string (String/string) Legend label string. SetName(string) Sets the name of the layer. public void SetName(string name) Parameters name string (String/string) Layer name. SetSelectable(bool) Specifies whether features on the layer are selectable. public void SetSelectable(bool selectable) Parameters selectable bool (boolean/bool) True if features should be selectable on this layer, false otherwise. SetVisible(bool) Sets the layer's potential visibility. public void SetVisible(bool visible) Parameters visible bool (boolean/bool) True if the layer should be visible, false otherwise. UpdateFeatures(MgFeatureCommandCollection) Executes the MgDeleteFeatures, MgInsertFeatures, MgUpdateFeatures, OSGeo.MapGuide.MgLockFeatures or OSGeo.MapGuide.MgUnlockFeatures commands contained in the given MgFeatureCommandCollection object. public MgPropertyCollection UpdateFeatures(MgFeatureCommandCollection commands) Parameters commands MgFeatureCommandCollection (MgFeatureCommandCollection) A collection of feature commands to be executed. Returns MgPropertyCollection Returns an MgPropertyCollection object. Each property in the collection corresponds to a command in the MgFeatureCommandCollection argument. The property name is the index of the command in the feature command collection. <ul> <li>If the command is of type MgDeleteFeatures, the property type is an MgPropertyType::Int32, and its value is the number of features deleted.</li> <li>If the command is of type MgInsertFeatures, the property type is an MgPropertyType::Feature, and its value is a MgFeatureReader object. The feature reader object contains the set of properties inserted into the datastore by the insert command.</li> <li>If the command is of type MgUpdateFeatures, the property type is MgPropertyType::Int32, and its value is the number of features updated.</li> <li>If the command is of type OSGeo.MapGuide.MgLockFeatures, the property type is MgPropertyType::Feature, and its value is the number of features locked.</li> <li>If the command is of type OSGeo.MapGuide.MgUnLockFeatures, the property type is MgPropertyType::Int32, and its value is the number of features unlocked.</li> </ul> Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> UpdateFeatures(MgFeatureCommandCollection, MgTransaction) Executes the MgDeleteFeatures, MgInsertFeatures, MgUpdateFeatures, OSGeo.MapGuide.MgLockFeatures or OSGeo.MapGuide.MgUnlockFeatures commands contained in the given MgFeatureCommandCollection object. public MgPropertyCollection UpdateFeatures(MgFeatureCommandCollection commands, MgTransaction transaction) Parameters commands MgFeatureCommandCollection (MgFeatureCommandCollection) A collection of feature commands to be executed. transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns MgPropertyCollection Returns an MgPropertyCollection object. Each property in the collection corresponds to a command in the MgFeatureCommandCollection argument. The property name is the index of the command in the feature command collection. <ul> <li>If the command is of type MgDeleteFeatures, the property type is an MgPropertyType::Int32, and its value is the number of features deleted.</li> <li>If the command is of type MgInsertFeatures, the property type is an MgPropertyType::Feature, and its value is a MgFeatureReader object. The feature reader object contains the set of properties inserted into the datastore by the insert command.</li> <li>If the command is of type MgUpdateFeatures, the property type is MgPropertyType::Int32, and its value is the number of features updated.</li> <li>If the command is of type OSGeo.MapGuide.MgLockFeatures, the property type is MgPropertyType::Feature, and its value is the number of features locked.</li> <li>If the command is of type OSGeo.MapGuide.MgUnLockFeatures, the property type is MgPropertyType::Int32, and its value is the number of features unlocked.</li> </ul> Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\"> UpdateMatchingFeatures(MgPropertyCollection, string, MgTransaction) Updates all features that match the given filter with the specified property values public int UpdateMatchingFeatures(MgPropertyCollection properties, string filter, MgTransaction transaction) Parameters properties MgPropertyCollection (MgBatchPropertyCollection) The property values to update matching features with filter string (String/string) The FDO filter string that detemines what features will be updated transaction MgTransaction (MgTransaction) An optional transaction to execute this operation under Returns int Returns the number of features updated by this operation Exceptions MgException MgFeatureServiceException\"> MgException MgInvalidArgumentException\"> MgException MgInvalidOperationException\"> MgException MgFdoException\">"
  },
  "api/OSGeo.MapGuide.MgLayerCollection.html": {
    "href": "api/OSGeo.MapGuide.MgLayerCollection.html",
    "title": "Class MgLayerCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLayerCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Manipulates collections of MgLayerBase objects. public class MgLayerCollection : MgGuardDisposable, IDisposable, IList<MgLayerBase>, ICollection<MgLayerBase>, IEnumerable<MgLayerBase>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgLayerCollection Implements IDisposable IList<MgLayerBase> ICollection<MgLayerBase> IEnumerable<MgLayerBase> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgLayerBase this[int index] { get; set; } Parameters index int Property Value MgLayerBase Methods Add(MgLayerBase) Adds a layer to the end of the collection. public void Add(MgLayerBase value) Parameters value MgLayerBase (MgLayerBase) Layer to be added. Clear() Removes all layers from the collection. public void Clear() Contains(MgLayerBase) Determines if the collection contains the specified layer. public bool Contains(MgLayerBase value) Parameters value MgLayerBase (MgLayerBase) MgLayerBase to search for. Returns bool Returns true if the collection contains the specified item, or false otherwise. Contains(string) Determines if the collection contains the specified layer. public bool Contains(string name) Parameters name string (String/string) Name of the layer to search for. Returns bool Returns true if the collection contains the specified item, or false otherwise. CopyTo(MgLayerBase[], int) public void CopyTo(MgLayerBase[] array, int arrayIndex) Parameters array MgLayerBase[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the number of layers in the collection. public int GetCount() Returns int Returns the number of layers. GetEnumerator() public IEnumerator<MgLayerBase> GetEnumerator() Returns IEnumerator<MgLayerBase> GetItem(int) Gets the layer at the specified index. public MgLayerBase GetItem(int index) Parameters index int (int) Index of the layer to get. Returns MgLayerBase Returns the layer. Exceptions MgException with code (MgIndexOutOfRangeException) if the specified index is out of range. GetItem(string) Returns the layer with the specified name. public MgLayerBase GetItem(string name) Parameters name string (String/string) Name of the layer to get. Returns MgLayerBase Returns the layer. Exceptions MgException with code (MgObjectNotFoundException) if the name does not exist. IndexOf(MgLayerBase) Gets the index of the specified layer in the collection. public int IndexOf(MgLayerBase value) Parameters value MgLayerBase (MgLayerBase) MgLayerBase to search for. Returns int Returns the layer's index if the collection contains the specified layer, or false (-1) otherwise. IndexOf(string) Gets the index of the specified layer in the collection. public int IndexOf(string name) Parameters name string (String/string) Name of the layer to search for. Returns int Returns the layer's index if the collection contains the specified layer, or false (-1) otherwise. Insert(int, MgLayerBase) Inserts a layer at a specified location in the collection. public void Insert(int index, MgLayerBase value) Parameters index int (int) Position in the collection to insert the layer. value MgLayerBase (MgLayerBase) Layer to be inserted in the collection. Exceptions MgException with code (MgIndexOutOfRangeException) if the specified index is out of range. Remove(MgLayerBase) Removes a layer from the collection. public bool Remove(MgLayerBase value) Parameters value MgLayerBase (MgLayerBase) Layer to be removed. Returns bool Returns true if removal was successful. RemoveAt(int) Removes a layer from the collection at the specified index. public void RemoveAt(int index) Parameters index int (int) Index of the layer to be removed. Exceptions MgException with code (MgIndexOutOfRangeException) if the specified index is out of range. SetItem(int, MgLayerBase) Sets the layer in the collection at the specified index to the specified value. public void SetItem(int index, MgLayerBase value) Parameters index int (int) Position in the collection to set the layer. value MgLayerBase (MgLayerBase) MgLayerBase to be set in the collection. Exceptions MgException with code (MgIndexOutOfRangeException) if the specified index is out of range."
  },
  "api/OSGeo.MapGuide.MgLayerGroup.html": {
    "href": "api/OSGeo.MapGuide.MgLayerGroup.html",
    "title": "Class MgLayerGroup | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLayerGroup Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Manipulates the properties of a layer group. public class MgLayerGroup : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgLayerGroup Implements IDisposable Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgLayerGroup(string) Constructs an MgLayerGroup object with the specified name. public MgLayerGroup(string name) Parameters name string (String/string) Name of the group Properties DisplayInLegend public bool DisplayInLegend { get; set; } Property Value bool ExpandInLegend public bool ExpandInLegend { get; } Property Value bool Group public MgLayerGroup Group { get; set; } Property Value MgLayerGroup LayerGroupType public int LayerGroupType { get; } Property Value int LegendLabel public string LegendLabel { get; set; } Property Value string Name public string Name { get; } Property Value string Visible public bool Visible { get; set; } Property Value bool Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDisplayInLegend() Determines whether an entry for the group should appear in the legend. public bool GetDisplayInLegend() Returns bool Returns true if the group should appear in the legend, or false otherwise. GetExpandInLegend() Determines whether the entry for the group should initially be expanded in the legend, if possible. public bool GetExpandInLegend() Returns bool Returns true if the group should initially be expanded in the legend, or false otherwise. GetGroup() Gets the group this group is organized within. public MgLayerGroup GetGroup() Returns MgLayerGroup Returns the parent group, or NULL if the group is at the top level of the hierarchy. GetLayerGroupType() Gets the type of the layer group. public int GetLayerGroupType() Returns int Returns the type of the layer group. GetLegendLabel() Gets the label to be displayed for the group in the legend. public string GetLegendLabel() Returns string Returns the legend label as a string. GetName() Gets the group name. public string GetName() Returns string Returns the group name as a string. GetObjectId() Gets a unique identifier for this layer group. public string GetObjectId() Returns string Returns the unique identifier as a string. GetVisible() Determines if the layer group is potentially visible. public bool GetVisible() Returns bool Returns true if the layer group is potentially visible, or false otherwise. IsVisible() Determines the actual visibility of the group. public bool IsVisible() Returns bool Returns true if the layer group is visible, or false otherwise. SetDisplayInLegend(bool) Specifies whether an entry for the group should appear in the legend. public void SetDisplayInLegend(bool displayInLegend) Parameters displayInLegend bool (boolean/bool) True if the group should appear in the legend, or false otherwise. SetExpandInLegend(bool) Specifies whether the entry for the group should initially be expanded in the legend, if possible. public void SetExpandInLegend(bool expandInLegend) Parameters expandInLegend bool (boolean/bool) Indicates whether this group is expanded in the legend SetGroup(MgLayerGroup) Changes the group this group is organized within. public void SetGroup(MgLayerGroup group) Parameters group MgLayerGroup (MgLayerGroup) Group for this group to belong to, or NULL if the group should not belong to any group. SetLegendLabel(string) Sets the label to be displayed for the group in the legend. public void SetLegendLabel(string legendLabel) Parameters legendLabel string (String/string) Legend label. SetVisible(bool) Alters the group potential visibility. public void SetVisible(bool visible) Parameters visible bool (boolean/bool) True if the group should be visible, or false otherwise."
  },
  "api/OSGeo.MapGuide.MgLayerGroupCollection.html": {
    "href": "api/OSGeo.MapGuide.MgLayerGroupCollection.html",
    "title": "Class MgLayerGroupCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLayerGroupCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Manipulates collections of MgLayerGroup objects. public class MgLayerGroupCollection : MgGuardDisposable, IDisposable, IList<MgLayerGroup>, ICollection<MgLayerGroup>, IEnumerable<MgLayerGroup>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgLayerGroupCollection Implements IDisposable IList<MgLayerGroup> ICollection<MgLayerGroup> IEnumerable<MgLayerGroup> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgLayerGroup this[int index] { get; set; } Parameters index int Property Value MgLayerGroup Methods Add(MgLayerGroup) Adds a layer group to the end of the collection. public void Add(MgLayerGroup value) Parameters value MgLayerGroup (MgLayerGroup) Layer group to be added. Clear() Removes all layer groups from the collection. public void Clear() Contains(MgLayerGroup) Determines if the collection contains the specified layer group. public bool Contains(MgLayerGroup value) Parameters value MgLayerGroup (MgLayerGroup) MgLayerGroup to search for. Returns bool Returns true if the collection contains the specified item, or false otherwise. Contains(string) Determines if the collection contains the specified layer group. public bool Contains(string name) Parameters name string (String/string) Name of the layer group to search for. Returns bool Returns true if the collection contains the specified item, or false otherwise. CopyTo(MgLayerGroup[], int) public void CopyTo(MgLayerGroup[] array, int arrayIndex) Parameters array MgLayerGroup[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the number of layer groups in the collection. public int GetCount() Returns int Returns the number of layer groups. GetEnumerator() public IEnumerator<MgLayerGroup> GetEnumerator() Returns IEnumerator<MgLayerGroup> GetItem(int) Gets the layer group at the specified index. public MgLayerGroup GetItem(int index) Parameters index int (int) Index of the layer group to get. Returns MgLayerGroup Returns the layer group. Exceptions MgException with code (MgIndexOutOfRangeException) if the specified index is out of range. GetItem(string) Returns the layer group with the specified name. public MgLayerGroup GetItem(string name) Parameters name string (String/string) Name of the layer group to get. Returns MgLayerGroup Returns the layer group. Exceptions MgException with code (MgObjectNotFoundException) if the name does not exist. IndexOf(MgLayerGroup) Gets the index of the specified layer group in the collection. public int IndexOf(MgLayerGroup value) Parameters value MgLayerGroup (MgLayerBase) MgLayerGroup to search for. Returns int Returns the layer group's index if the collection contains the specified layer group, or false (-1) otherwise. IndexOf(string) Gets the index of the specified layer group in the collection. public int IndexOf(string name) Parameters name string (String/string) Name of the layer group to search for. Returns int Returns the layer group's index if the collection contains the specified layer group, or false (-1) otherwise. Insert(int, MgLayerGroup) Inserts a layer group at a specified location in the collection. public void Insert(int index, MgLayerGroup value) Parameters index int (int) Position in the collection to insert the layer group. value MgLayerGroup (MgLayerGroup) Layer group to be inserted in the collection. Exceptions MgException with code (MgIndexOutOfRangeException) if the specified index is out of range. Remove(MgLayerGroup) Removes a layer group from the collection. public bool Remove(MgLayerGroup value) Parameters value MgLayerGroup (MgLayerGroup) Layer group to be removed. Returns bool Returns true if removal was successful. RemoveAt(int) Removes a layer group from the collection at the specified index. public void RemoveAt(int index) Parameters index int (int) Index of the layer group to be removed. Exceptions MgException with code (MgIndexOutOfRangeException) if the specified index is out of range. SetItem(int, MgLayerGroup) Sets the layer group in the collection at the specified index to the specified value. public void SetItem(int index, MgLayerGroup value) Parameters index int (int) Position in the collection to set the layer group. value MgLayerGroup (MgLayerGroup) MgLayerGroup to be set in the collection. Exceptions MgException with code (MgIndexOutOfRangeException) if the specified index is out of range."
  },
  "api/OSGeo.MapGuide.MgLayerGroupType.html": {
    "href": "api/OSGeo.MapGuide.MgLayerGroupType.html",
    "title": "Class MgLayerGroupType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLayerGroupType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll MgLayerGroupType defines integer constants used to identify the type of a layer group. public class MgLayerGroupType Inheritance object MgLayerGroupType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BaseMap Specifies that the layer is a base map layer group (i.e. it contains base map layers). public const int BaseMap = 2 Field Value int BaseMapFromTileSet Specifies that the layer is a base map layer from a TileSetDefinition resource. public const int BaseMapFromTileSet = 3 Field Value int Normal Specifies that the layer group is a normal layer group. public const int Normal = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgLayerType.html": {
    "href": "api/OSGeo.MapGuide.MgLayerType.html",
    "title": "Class MgLayerType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLayerType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll MgLayerType defines integer constants used to identify the type of a layer. public class MgLayerType Inheritance object MgLayerType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BaseMap Specifies that the layer is a base map layer. public const int BaseMap = 2 Field Value int Dynamic Specifies that the layer is a dynamic layer. public const int Dynamic = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgLayout.html": {
    "href": "api/OSGeo.MapGuide.MgLayout.html",
    "title": "Class MgLayout | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLayout Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Specifies the ResourceId of the PrintLayout to use for a particular map, the title and the type of units to use in the layout. public class MgLayout : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgLayout Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgLayout(MgResourceIdentifier, string, string) Initializes a new MgLayout object given a layout definition, title and unit type. public MgLayout(MgResourceIdentifier layoutDefinition, string title, string unitType) Parameters layoutDefinition MgResourceIdentifier (MgResourceIdentifier) An MgResourceIdentifier that specifies the location of the print layout definition in a resource repository. title string (String/string) The title to use in the print layout unitType string (String/string) The type of units to use in the print layout Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetLayout() Get the Layout to use when generating the EPlot DWF. If not specified, then the plotted map will fill the space within the page margins. public MgResourceIdentifier GetLayout() Returns MgResourceIdentifier The resource identifier for the layout definition. GetTitle() Gets the layout title. public string GetTitle() Returns string Returns the title for the plot. GetUnitType() Gets the layout scale units (US/English or metric units). This value determines the units used in the scale bar definition. This value is ignored if a layout is not specified. public string GetUnitType() Returns string The layout scale units. SetLayout(MgResourceIdentifier) Set the Layout to use when generating the EPlot DWF. If not specified, then the plotted map will fill the space within the page margins. public void SetLayout(MgResourceIdentifier plotLayout) Parameters plotLayout MgResourceIdentifier (MgResourceIdentifier) An MgResourceIdentifier that specifies the location of the print layout definition in a resource repository. SetTitle(string) Sets the layout title. public void SetTitle(string title) Parameters title string (String/string) The title for the layout. SetUnitType(string) Gets the layout scale units (US/English or metric units). This value determines the units used in the scale bar definition. This value is ignored if a layout is not specified. public void SetUnitType(string unitType) Parameters unitType string (String/string) The layout scale units"
  },
  "api/OSGeo.MapGuide.MgLineString.html": {
    "href": "api/OSGeo.MapGuide.MgLineString.html",
    "title": "Class MgLineString | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLineString Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgLineString is a curve with linear interpolation between points. public class MgLineString : MgCurve, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgCurve MgLineString Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dimension public int Dimension { get; } Property Value int EndCoordinate public MgCoordinate EndCoordinate { get; } Property Value MgCoordinate GeometryType public int GeometryType { get; } Property Value int StartCoordinate public MgCoordinate StartCoordinate { get; } Property Value MgCoordinate Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinates() Returns an iterator that can be used to enumerate each of the line strings coordinates. public MgCoordinateIterator GetCoordinates() Returns MgCoordinateIterator An MgCoordinateIterator over the coordinates. GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetEndCoordinate() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinate GetEndCoordinate() Returns MgCoordinate GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int GetStartCoordinate() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinate GetStartCoordinate() Returns MgCoordinate IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgLineStringCollection.html": {
    "href": "api/OSGeo.MapGuide.MgLineStringCollection.html",
    "title": "Class MgLineStringCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLineStringCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgLineStringCollection provides support for defining an ordered set of line strings. public class MgLineStringCollection : MgGuardDisposable, IDisposable, IList<MgLineString>, ICollection<MgLineString>, IEnumerable<MgLineString>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgLineStringCollection Implements IDisposable IList<MgLineString> ICollection<MgLineString> IEnumerable<MgLineString> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgLineStringCollection() Construct a MgLineStringCollection object public MgLineStringCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgLineString this[int index] { get; set; } Parameters index int Property Value MgLineString Methods Add(MgLineString) Adds the specified coordinate to the end of the collection. public void Add(MgLineString value) Parameters value MgLineString (MgLineString) line string to add to the collection. Clear() Removes all line strings from the collection. public void Clear() Contains(MgLineString) public virtual bool Contains(MgLineString value) Parameters value MgLineString Returns bool CopyTo(MgLineString[], int) public void CopyTo(MgLineString[] array, int arrayIndex) Parameters array MgLineString[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgLineString> GetEnumerator() Returns IEnumerator<MgLineString> GetItem(int) public virtual MgLineString GetItem(int index) Parameters index int Returns MgLineString IndexOf(MgLineString) public virtual int IndexOf(MgLineString value) Parameters value MgLineString Returns int Insert(int, MgLineString) Inserts the specified line string at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgLineString value) Parameters index int (int) Index at which to insert the coordinate. value MgLineString (MgLineString) line string to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgLineString) Removes the specified line string from the collection. public bool Remove(MgLineString value) Parameters value MgLineString (MgLineString) line string reference to remove. Returns bool Returns true if removal was successful. RemoveAt(int) Removes the line string at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the line string to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgLineString) Sets the line string in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgLineString value) Parameters index int (int) Index of the coordinate to set. value MgLineString (MgLineString) line string to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgLinearRing.html": {
    "href": "api/OSGeo.MapGuide.MgLinearRing.html",
    "title": "Class MgLinearRing | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLinearRing Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgLinearRing is a geometry component. public class MgLinearRing : MgRing, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometryComponent MgRing MgLinearRing Implements IDisposable Inherited Members MgRing.PointInRing MgRing.Coordinates MgRing.GetPointInRing() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ComponentType public int ComponentType { get; } Property Value int Dimension public int Dimension { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetComponentType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetComponentType() Returns int GetCoordinates() Returns an iterator that can be used to enumerate each of the linear rings coordinates. public MgCoordinateIterator GetCoordinates() Returns MgCoordinateIterator An MgCoordinateIterator over the rings coordinates. GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgLinearRingCollection.html": {
    "href": "api/OSGeo.MapGuide.MgLinearRingCollection.html",
    "title": "Class MgLinearRingCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLinearRingCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgLinearRingCollection provides support for defining an ordered set of linear rings. public class MgLinearRingCollection : MgGuardDisposable, IDisposable, IList<MgLinearRing>, ICollection<MgLinearRing>, IEnumerable<MgLinearRing>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgLinearRingCollection Implements IDisposable IList<MgLinearRing> ICollection<MgLinearRing> IEnumerable<MgLinearRing> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgLinearRingCollection() Construct a MgLinearRingCollection object public MgLinearRingCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgLinearRing this[int index] { get; set; } Parameters index int Property Value MgLinearRing Methods Add(MgLinearRing) Adds the specified coordinate to the end of the collection. public void Add(MgLinearRing value) Parameters value MgLinearRing (MgLinearRing) linear ring to add to the collection. Clear() Removes all linear rings from the collection. public void Clear() Contains(MgLinearRing) public virtual bool Contains(MgLinearRing value) Parameters value MgLinearRing Returns bool CopyTo(MgLinearRing[], int) public void CopyTo(MgLinearRing[] array, int arrayIndex) Parameters array MgLinearRing[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgLinearRing> GetEnumerator() Returns IEnumerator<MgLinearRing> GetItem(int) public virtual MgLinearRing GetItem(int index) Parameters index int Returns MgLinearRing IndexOf(MgLinearRing) public virtual int IndexOf(MgLinearRing value) Parameters value MgLinearRing Returns int Insert(int, MgLinearRing) Inserts the specified linear ring at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgLinearRing value) Parameters index int (int) Index at which to insert the coordinate. value MgLinearRing (MgLinearRing) linear ring to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgLinearRing) Removes the specified linear ring from the collection. Returns true if removal was successful. public bool Remove(MgLinearRing value) Parameters value MgLinearRing (MgLinearRing) linear ring reference to remove. Returns bool Returns true if successful. RemoveAt(int) Removes the linear ring at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the linear ring to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgLinearRing) Sets the linear ring in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgLinearRing value) Parameters index int (int) Index of the coordinate to set. value MgLinearRing (MgLinearRing) linear ring to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgLinearSegment.html": {
    "href": "api/OSGeo.MapGuide.MgLinearSegment.html",
    "title": "Class MgLinearSegment | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLinearSegment Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgLinearSegment is a geometry component used in the construction of MgCurveString geometries and MgCurveRing geometry components. public class MgLinearSegment : MgCurveSegment, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometryComponent MgCurveSegment MgLinearSegment Implements IDisposable Inherited Members MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ComponentType public int ComponentType { get; } Property Value int Dimension public int Dimension { get; } Property Value int EndCoordinate public MgCoordinate EndCoordinate { get; } Property Value MgCoordinate StartCoordinate public MgCoordinate StartCoordinate { get; } Property Value MgCoordinate Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetComponentType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetComponentType() Returns int GetCoordinates() Returns an iterator that can be used to enumerate each of the linear segments coordinates. public MgCoordinateIterator GetCoordinates() Returns MgCoordinateIterator An MgCoordinateIterator over the segments coordinates. GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetEndCoordinate() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinate GetEndCoordinate() Returns MgCoordinate GetStartCoordinate() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgCoordinate GetStartCoordinate() Returns MgCoordinate IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgLocalizer.html": {
    "href": "api/OSGeo.MapGuide.MgLocalizer.html",
    "title": "Class MgLocalizer | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLocalizer Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll public class MgLocalizer Inheritance object MgLocalizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields english protected static string english Field Value string languages protected static Hashtable languages Field Value Hashtable localizationPath protected static string localizationPath Field Value string Methods GetString(string, string) public static string GetString(string id, string locale) Parameters id string locale string Returns string GetStringBundle(string) protected static Hashtable GetStringBundle(string locale) Parameters locale string Returns Hashtable Localize(string, string, int) public static string Localize(string text, string locale, int os) Parameters text string locale string os int Returns string SetLocalizedFilesPath(string) public static void SetLocalizedFilesPath(string path) Parameters path string"
  },
  "api/OSGeo.MapGuide.MgLogFileType.html": {
    "href": "api/OSGeo.MapGuide.MgLogFileType.html",
    "title": "Class MgLogFileType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLogFileType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Types of log files public class MgLogFileType Inheritance object MgLogFileType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Access public const string Access = \"AccessLog\" Field Value string Admin public const string Admin = \"AdminLog\" Field Value string Authentication public const string Authentication = \"AuthenticationLog\" Field Value string Error public const string Error = \"ErrorLog\" Field Value string Session public const string Session = \"SessionLog\" Field Value string Trace public const string Trace = \"TraceLog\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgLongTransactionReader.html": {
    "href": "api/OSGeo.MapGuide.MgLongTransactionReader.html",
    "title": "Class MgLongTransactionReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgLongTransactionReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides forward-only, read-only functionality for describing a set of long transactions that exist in the feature source. public class MgLongTransactionReader : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgLongTransactionReader Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Children public MgLongTransactionReader Children { get; } Property Value MgLongTransactionReader CreationDate public MgDateTime CreationDate { get; } Property Value MgDateTime Description public string Description { get; } Property Value string Name public string Name { get; } Property Value string Owner public string Owner { get; } Property Value string Parents public MgLongTransactionReader Parents { get; } Property Value MgLongTransactionReader Methods Close() Closes the MgLongTransactionReader object, freeing any resources it may be holding. public void Close() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetChildren() Provides access to the direct descendant long transactions for the long transaction being currently read. public MgLongTransactionReader GetChildren() Returns MgLongTransactionReader Returns an MgLongTransactionReader instance containing the direct descendants for the long transaction currently being read. GetCreationDate() Gets the creation date of the long transaction currently being read. public MgDateTime GetCreationDate() Returns MgDateTime Returns an MgDateTime object containing the date when the long transaction was created. GetDescription() Gets the description of the long transaction currently being read. public string GetDescription() Returns string Returns the description of the long transaction. GetName() Gets the name of the long transaction currently being read. public string GetName() Returns string Returns the name of the long transaction. GetOwner() Gets the owner of the long transaction currently being read. public string GetOwner() Returns string Returns the owner name. GetParents() Provides access to the direct ascendant long transactions for the long transaction being currently read. public MgLongTransactionReader GetParents() Returns MgLongTransactionReader Returns an MgLongTransactionReader instance containing the direct ascendants for the long transaction currently being read. IsActive() Specifies whether the long transaction currently being read is the active long transaction. public bool IsActive() Returns bool Returns true if the long transaction is active; otherwise returns false. IsFrozen() Specifies whether the long transaction currently being read is frozen. public bool IsFrozen() Returns bool Returns true if the long transaction is frozen; otherwise returns false. ReadNext() Advances the reader to the next long transaction. public bool ReadNext() Returns bool Returns true if there is a next item. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Serializes the long transactions in the reader to XML whose structure is governed by the FdoLongTransactionList schema. public MgByteReader ToXml() Returns MgByteReader Returns an MgByteReader object containing the contents of the long transaction reader in XML format."
  },
  "api/OSGeo.MapGuide.MgMap.WatermarkUsageType.html": {
    "href": "api/OSGeo.MapGuide.MgMap.WatermarkUsageType.html",
    "title": "Enum MgMap.WatermarkUsageType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Enum MgMap.WatermarkUsageType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll public enum MgMap.WatermarkUsageType Fields Viewer = 2 WMS = 1"
  },
  "api/OSGeo.MapGuide.MgMap.html": {
    "href": "api/OSGeo.MapGuide.MgMap.html",
    "title": "Class MgMap | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMap Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Defines the runtime state of a map. public class MgMap : MgMapBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgResource MgMapBase MgMap Implements IDisposable Inherited Members MgMapBase.Name MgMapBase.SessionId MgMapBase.MapDefinition MgMapBase.MapSRS MgMapBase.MapExtent MgMapBase.ViewCenter MgMapBase.ViewScale MgMapBase.DataExtent MgMapBase.DisplayDpi MgMapBase.DisplayWidth MgMapBase.DisplayHeight MgMapBase.FiniteDisplayScaleCount MgMapBase.GetName() MgMapBase.GetSessionId() MgMapBase.GetObjectId() MgMapBase.GetMapDefinition() MgMapBase.GetMapSRS() MgMapBase.GetMapExtent() MgMapBase.GetLayers() MgMapBase.GetLayerGroups() MgMapBase.Create(MgResourceService, MgResourceIdentifier, string) MgMapBase.Open(MgResourceService, string) MgMapBase.GetViewCenter() MgMapBase.GetViewScale() MgMapBase.GetDataExtent() MgMapBase.GetDisplayDpi() MgMapBase.SetDisplayDpi(int) MgMapBase.GetDisplayWidth() MgMapBase.GetDisplayHeight() MgMapBase.GetFiniteDisplayScaleCount() MgMapBase.GetFiniteDisplayScaleAt(int) MgMapBase.GetBackgroundColor() MgResource.GetResourceId() MgResource.Open(MgResourceService, MgResourceIdentifier) MgResource.Save(MgResourceService) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgMap(MgSiteConnection) Constructs an MgMap object that takes an MgSiteConnection instance. public MgMap(MgSiteConnection siteConnection) Parameters siteConnection MgSiteConnection An MgSiteConnection instance the MgMap object can use to allocate service instances. &lt;!-- Example (PHP) --&gt; Methods Create(MgResourceIdentifier, string) Initializes a new MgMap object given a map definition or tile set definition and a name for the map. This method is used for MapGuide Viewers or for offline map production. public void Create(MgResourceIdentifier resource, string mapName) Parameters resource MgResourceIdentifier An MgResourceIdentifier that specifies the location of the map definition in a resource repository. mapName string A string that specifies the name of the map. Create(MgResourceIdentifier, string, int, int, double, double, double, int) Initializes a new MgMap object given a map definition or tile set definition and a name for the map with initial display parameters set. This method is used for MapGuide Viewers or for offline map production. public void Create(MgResourceIdentifier resource, string mapName, int displayWidth, int displayheight, double x, double y, double scale, int dpi) Parameters resource MgResourceIdentifier An MgResourceIdentifier that specifies the location of the map definition in a resource repository. mapName string A string that specifies the name of the map. displayWidth int The display width to initially set for the map displayheight int x double The view center X coordinate to initially set for the map y double The view center Y coordinate to initially set for the map scale double The view scale to initially set for the map dpi int The display DPI to initially set for the map Create(string, MgEnvelope, string) Initializes a new Map object given a spatial reference system, spatial extent of the map, and a name for the map. This method is used for the WMS service implementation and creates a map without any layers. public void Create(string mapSRS, MgEnvelope mapExtent, string mapName) Parameters mapSRS string A string specifying the spatial reference system in OpenGIS WKT format. mapExtent MgEnvelope An MgEnvelope defining the overall extent of the map. mapName string A string that specifies the name of the map. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetTileFormat() Returns the tile content format for the tile set definition public string GetTileFormat() Returns string Returns the tile content format GetTilePixelRatio() Returns the tile pixel ratio for retina tiles. This is only applicable for XYZ tiles. public int GetTilePixelRatio() Returns int Returns the tile pixel ratio for retina tiles GetTileSetDefinition() Returns the resource id of the Tile Set Definition that created this map, or the Tile Set Definition linked from the Map Definition used to created this map. If it was created from a Map Definition and that does not link to a Tile Set Definition, then NULL is returned. public MgResourceIdentifier GetTileSetDefinition() Returns MgResourceIdentifier Returns the resource id of the Tile Set Definition. NULL if created from a Map Definition that does not link to a Tile Set GetTileSetProvider() Returns the provider name of the referenced tile set definition public string GetTileSetProvider() Returns string Returns the tile set provider name. Or an empty string if this map does not reference a tile set GetWatermarkUsage() Get the watermark usage public int GetWatermarkUsage() Returns int The integer value Open(string) Loads the map object from a session repository. public void Open(string mapName) Parameters mapName string A string that specifies the name of the map. This Save() Saves the Map. public void Save() Save(MgResourceService, MgResourceIdentifier) Saves the Map using the specified resource service and resource identifier. public void Save(MgResourceService resourceService, MgResourceIdentifier resourceId) Parameters resourceService MgResourceService Resource service to use to save the Map. resourceId MgResourceIdentifier Resource identifier."
  },
  "api/OSGeo.MapGuide.MgMapBase.html": {
    "href": "api/OSGeo.MapGuide.MgMapBase.html",
    "title": "Class MgMapBase | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMapBase Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines the runtime state of a map. public class MgMapBase : MgResource, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgResource MgMapBase Implements IDisposable Derived MgMap MgPortableMap Inherited Members MgResource.GetResourceId() MgResource.Open(MgResourceService, MgResourceIdentifier) MgResource.Save(MgResourceService) MgResource.Save(MgResourceService, MgResourceIdentifier) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgMapBase() Constructs an empty un-initialized MgMapBase object. public MgMapBase() Properties DataExtent public MgEnvelope DataExtent { get; } Property Value MgEnvelope DisplayDpi public int DisplayDpi { get; set; } Property Value int DisplayHeight public int DisplayHeight { get; } Property Value int DisplayWidth public int DisplayWidth { get; } Property Value int FiniteDisplayScaleCount public int FiniteDisplayScaleCount { get; } Property Value int MapDefinition public MgResourceIdentifier MapDefinition { get; } Property Value MgResourceIdentifier MapExtent public MgEnvelope MapExtent { get; } Property Value MgEnvelope MapSRS public string MapSRS { get; } Property Value string Name public string Name { get; } Property Value string SessionId public string SessionId { get; } Property Value string ViewCenter public MgPoint ViewCenter { get; } Property Value MgPoint ViewScale public double ViewScale { get; } Property Value double Methods Create(MgResourceService, MgResourceIdentifier, string) Initializes a new MgMapBase object given a resource service, map definition, and a name for the map. This method is used for MapGuide Viewers or for offline map production. public void Create(MgResourceService resourceService, MgResourceIdentifier mapDefinition, string mapName) Parameters resourceService MgResourceService An MgResourceService that can be used to retrieve the map definition. mapDefinition MgResourceIdentifier An MgResourceIdentifier that specifies the location of the map definition in a resource repository. mapName string A string that specifies the name of the map. Create(string, MgEnvelope, string) Initializes a new MgMapBase object given a spatial reference system, spatial extent of the map, and a name for the map. This method is used for the WMS service implementation and creates a map without any layers. public void Create(string mapSRS, MgEnvelope mapExtent, string mapName) Parameters mapSRS string A string specifying the spatial reference system in OpenGIS WKT format. mapExtent MgEnvelope An MgEnvelope defining the overall extent of the map. mapName string A string that specifies the name of the map. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBackgroundColor() Returns the background color for the map public string GetBackgroundColor() Returns string Background color. GetDataExtent() Returns the extent of the data to be generated for the map in the spatial reference system of the map. public MgEnvelope GetDataExtent() Returns MgEnvelope Returns an MgEnvelope that defines the current data extent. GetDisplayDpi() Returns the number of dots per inch of the map display. public int GetDisplayDpi() Returns int Returns the number of dots per inch of the map display. GetDisplayHeight() Returns the current height of the map display in pixels. public int GetDisplayHeight() Returns int Returns the height of the map display in pixels. GetDisplayWidth() Returns the current width of the map display in pixels. public int GetDisplayWidth() Returns int Returns the width of the map display in pixels. GetFiniteDisplayScaleAt(int) Gets the finite display scale at the specified index. public double GetFiniteDisplayScaleAt(int index) Parameters index int Index of the finite display scale to get. Returns double Returns the finite display scale. Exceptions MgException with code (MgOutOfRangeException) if the index is invalid. GetFiniteDisplayScaleCount() Gets the number of finite display scales in the map. public int GetFiniteDisplayScaleCount() Returns int Returns the number of finite display scales in the map. GetLayerGroups() Returns this map's layer groups. public MgLayerGroupCollection GetLayerGroups() Returns MgLayerGroupCollection Returns an MgLayerGroupCollection that contains the map layer groups. GetLayers() Returns this map's layers. public MgLayerCollection GetLayers() Returns MgLayerCollection Returns an MgLayerCollection that contains the map layers. GetMapDefinition() Returns the resource identifier that specifies the location of the map definition that was used to create this map. public MgResourceIdentifier GetMapDefinition() Returns MgResourceIdentifier Returns an MgResourceIdentifier that specifies the location of the map definition. NULL is returned if this map was created from a Tile Set Definition GetMapExtent() Returns the the overall extent of the map. public MgEnvelope GetMapExtent() Returns MgEnvelope Returns an MgEnvelope that defines the overall extent of the map. GetMapSRS() Gets the spatial reference system used to display this map. public string GetMapSRS() Returns string GetName() Gets the name of this map. public string GetName() Returns string Returns the name of the map as a string. GetObjectId() Gets an identifier that can be used to uniquely identify this map. public string GetObjectId() Returns string Returns the unique identifier of this map as a string. GetSessionId() Gets the identifier of the session associated with this map. public string GetSessionId() Returns string Returns the session id of the map as a string. GetViewCenter() Gets the current center point of the map, in the spatial reference system of the map. public MgPoint GetViewCenter() Returns MgPoint Returns an MgPoint that specifies the center of the map. GetViewScale() Gets the current scale of the map. public double GetViewScale() Returns double Returns a double that specifies the scale of the map. Open(MgResourceService, string) Loads the map object from a session repository. public void Open(MgResourceService resourceService, string mapName) Parameters resourceService MgResourceService An MgResourceService that can be used to retrieve the map. mapName string A string that specifies the name of the map. This SetDisplayDpi(int) Sets the number of dots per inch of the map display. public void SetDisplayDpi(int dpi) Parameters dpi int (int) Number of dots per inch of the map display"
  },
  "api/OSGeo.MapGuide.MgMapCollection.html": {
    "href": "api/OSGeo.MapGuide.MgMapCollection.html",
    "title": "Class MgMapCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMapCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Manipulates collections of MgMapBase objects. public class MgMapCollection : MgGuardDisposable, IDisposable, IList<MgMapBase>, ICollection<MgMapBase>, IEnumerable<MgMapBase>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgMapCollection Implements IDisposable IList<MgMapBase> ICollection<MgMapBase> IEnumerable<MgMapBase> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgMapCollection() Constructs an empty MgMapCollection object. public MgMapCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgMapBase this[int index] { get; set; } Parameters index int Property Value MgMapBase Methods Add(MgMapBase) Adds the specified map to the end of the collection. public void Add(MgMapBase value) Parameters value MgMapBase (MgMapBase) MgMapBase to be added to the collection. Clear() Removes all maps from the collection. public void Clear() Contains(MgMapBase) Determines if the collection contains the specified map. public bool Contains(MgMapBase value) Parameters value MgMapBase (MgMapBase) The MgMapBase to look for. Returns bool Returns true if the collection contains the specified map, or false otherwise. Contains(string) Determines if the collection contains the specified map. public bool Contains(string name) Parameters name string (String/string) Name of the map. Returns bool Returns true if the collection contains the specified map, or false otherwise. CopyTo(MgMapBase[], int) public void CopyTo(MgMapBase[] array, int arrayIndex) Parameters array MgMapBase[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the number of map in the collection. public int GetCount() Returns int Returns the number of maps. GetEnumerator() public IEnumerator<MgMapBase> GetEnumerator() Returns IEnumerator<MgMapBase> GetItem(int) Gets the map at the specified index. public MgMapBase GetItem(int index) Parameters index int (int) Index of the map to get. Returns MgMapBase Returns the specified MgMapBase object. Exceptions MgException with code (MgOutOfRangeException) if the index is invalid. GetItem(string) Gets the map with the specified name. public MgMapBase GetItem(string name) Parameters name string (String/string) Name of the map to get. Returns MgMapBase Returns the specified MgMapBase object. Exceptions MgException with code (MgInvalidArgumentException) if the name does not exist in IndexOf(MgMapBase) Gets the index of the specified map in the collection. public int IndexOf(MgMapBase value) Parameters value MgMapBase (MgMapBase) Value of the item to get the index of. Returns int Returns the map's index if the collection contains the specified map, or false (-1) otherwise. IndexOf(string) Gets the index of the specified map in the collection. public int IndexOf(string name) Parameters name string (String/string) Name of the map to get the index of. Returns int Returns the map's index if the collection contains the specified map, or false (-1) otherwise. Insert(int, MgMapBase) Inserts a map at a specified index within the collection. public void Insert(int index, MgMapBase value) Parameters index int (int) Position in the collection to insert the MgMapBase. value MgMapBase (MgMapBase) MgMapBase to be inserted in the collection. Exceptions MgException with code (MgOutOfRangeException) if the specified index is out of Remove(MgMapBase) Removes a map from the collection. public bool Remove(MgMapBase value) Parameters value MgMapBase (MgMapBase) MgMapBase to be removed Returns bool Returns true if removal was successful. RemoveAt(int) Removes a map from the collection at the specified index. public void RemoveAt(int index) Parameters index int (int) Index of the map to be removed. Exceptions MgException with code (MgOutOfRangeException) if the map does not exist in the SetItem(int, MgMapBase) Sets the map in the collection at the specified index to a specified value. public void SetItem(int index, MgMapBase value) Parameters index int (int) Position in the collection to set the MgMapBase. value MgMapBase (MgMapBase) MgMapBase to be set in the collection. Exceptions MgException with code (MgOutOfRangeException) if the index is out of range."
  },
  "api/OSGeo.MapGuide.MgMapPlot.html": {
    "href": "api/OSGeo.MapGuide.MgMapPlot.html",
    "title": "Class MgMapPlot | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMapPlot Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll The MgMapPlot class allows the developer to specify the map, the view of the map, the plot specification, and the layout for one sheet within a call to GenerateMultiPlot. public class MgMapPlot : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgMapPlot Implements IDisposable Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgMapPlot(MgMap, MgCoordinate, double, MgPlotSpecification, MgLayout) Create and initialize an MgMapPlot instance using the specified center and scale. Sets the MapPlotInstruction value appropriately. public MgMapPlot(MgMap map, MgCoordinate center, double scale, MgPlotSpecification plotSpec, MgLayout layout) Parameters map MgMap center MgCoordinate scale double plotSpec MgPlotSpecification layout MgLayout MgMapPlot(MgMap, MgEnvelope, bool, MgPlotSpecification, MgLayout) Create and initialize an MgMapPlot instance using the specified extents Sets the MapPlotInstruction value appropriately. public MgMapPlot(MgMap map, MgEnvelope extent, bool expandToFit, MgPlotSpecification plotSpec, MgLayout layout) Parameters map MgMap extent MgEnvelope expandToFit bool plotSpec MgPlotSpecification layout MgLayout MgMapPlot(MgMap, MgPlotSpecification, MgLayout) Create and initialize an MgMapPlot instance using the map center and scale. Sets the MapPlotInstruction value appropriately. public MgMapPlot(MgMap map, MgPlotSpecification plotSpec, MgLayout layout) Parameters map MgMap plotSpec MgPlotSpecification layout MgLayout Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCenter() Get view center public MgCoordinate GetCenter() Returns MgCoordinate The coordinates of the center of the view of map GetExpandToFit() Gets flag indicating whether extents of the view of the map should be expanded to fill the space within the page margins. public bool GetExpandToFit() Returns bool The expand to fit flag. GetExtent() Get extents of the view of the map. public MgEnvelope GetExtent() Returns MgEnvelope The extents of the view of the map. GetLayout() Get the layout. This value is optional; if null the map will fill the entire page area within the margins. public MgLayout GetLayout() Returns MgLayout The MgLayout. GetMap() Get the MgMap object to plot. public MgMap GetMap() Returns MgMap The MgMap object. GetMapPlotInstruction() Get the MapPlotInstruction, which defines how the view of the map to be plotted is defined. public int GetMapPlotInstruction() Returns int The MapPlotInstruction value. GetPlotSpecification() Gets the plot specification. public MgPlotSpecification GetPlotSpecification() Returns MgPlotSpecification The MgPlotSpecification. GetScale() Get view scale public double GetScale() Returns double The scale of the view of map SetCenterAndScale(MgCoordinate, double) Set the view center and scale of the map. public void SetCenterAndScale(MgCoordinate center, double scale) Parameters center MgCoordinate (MgCoordinate) The coordinates of the center of the view of the map. scale double (double) The scale of the view of the map. SetExtent(MgEnvelope, bool) Set the extents of the map. public void SetExtent(MgEnvelope extent, bool expandToFit) Parameters extent MgEnvelope (MgEnvelope) The extents of the map. expandToFit bool (boolean/bool) Flag indicating whether the extents should be expanded to fill the space within the page margins. SetLayout(MgLayout) Set the layout. public void SetLayout(MgLayout layout) Parameters layout MgLayout (MgLayout) The object defining the layout for the plot. SetMap(MgMap) Set the MgMap object to plot. public void SetMap(MgMap map) Parameters map MgMap (MgMap) The MgMap object to plot. SetMapPlotInstruction(int) Set the MapPlotInstruction, which defines how the view of the map to be plotted is defined. public void SetMapPlotInstruction(int plotInstruction) Parameters plotInstruction int (int) The enumeration value defining how the view of the map is defined. SetPlotSpecification(MgPlotSpecification) Set the plot specification. public void SetPlotSpecification(MgPlotSpecification plotSpec) Parameters plotSpec MgPlotSpecification (MgPlotSpecification) The plot specification."
  },
  "api/OSGeo.MapGuide.MgMapPlotCollection.html": {
    "href": "api/OSGeo.MapGuide.MgMapPlotCollection.html",
    "title": "Class MgMapPlotCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMapPlotCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Manipulates collections of MgMapPlot objects. public class MgMapPlotCollection : MgSerializable, IDisposable, IList<MgMapPlot>, ICollection<MgMapPlot>, IEnumerable<MgMapPlot>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgMapPlotCollection Implements IDisposable IList<MgMapPlot> ICollection<MgMapPlot> IEnumerable<MgMapPlot> IEnumerable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgMapPlotCollection() Constructs an empty MgMapPlotCollection object. public MgMapPlotCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgMapPlot this[int index] { get; set; } Parameters index int Property Value MgMapPlot Methods Add(MgMapPlot) Adds the specified MapPlot to the end of the collection. public void Add(MgMapPlot value) Parameters value MgMapPlot (MgMapPlot) MgMapPlot to be added to the collection. Clear() Removes all MapPlots from the collection. public void Clear() Contains(MgMapPlot) Determines if the collection contains the specified MapPlot. public bool Contains(MgMapPlot value) Parameters value MgMapPlot (MgMapPlot) The MgMapPlot to look for. Returns bool Returns true if the collection contains the specified MapPlot, or false otherwise. Contains(string) Determines if the collection contains the specified MapPlot. public bool Contains(string name) Parameters name string (String/string) Name of the MapPlot. Returns bool Returns true if the collection contains the specified map, or false otherwise. CopyTo(MgMapPlot[], int) public void CopyTo(MgMapPlot[] array, int arrayIndex) Parameters array MgMapPlot[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the number of MapPlots in the collection. public int GetCount() Returns int Returns the number of MapPlots. GetEnumerator() public IEnumerator<MgMapPlot> GetEnumerator() Returns IEnumerator<MgMapPlot> GetItem(int) Gets the MapPlot at the specified index. public MgMapPlot GetItem(int index) Parameters index int (int) Index of the map to get. Returns MgMapPlot Returns the specified MgMapPlot object. Exceptions MgException with code (MgOutOfRangeException) if the index is invalid. GetItem(string) Gets the MapPlot with the specified name. public MgMapPlot GetItem(string name) Parameters name string (String/string) Name of the MapPlot to get. Returns MgMapPlot Returns the specified MgMapPlot object. Exceptions MgException with code (MgInvalidArgumentException) if the name does not exist in IndexOf(MgMapPlot) Gets the index of the specified MapPlot in the collection. public int IndexOf(MgMapPlot value) Parameters value MgMapPlot (MgMapPlot) Value of the item to get the index of. Returns int Returns the MapPlot's index if the collection contains the specified MapPlot, or false (-1) otherwise. IndexOf(string) Gets the index of the specified MapPlot in the collection. public int IndexOf(string name) Parameters name string (String/string) Name of the MapPlot to get the index of. Returns int Returns the MapPlot's index if the collection contains the specified MapPlot, or false (-1) otherwise. Insert(int, MgMapPlot) Inserts a MapPlot at a specified index within the collection. public void Insert(int index, MgMapPlot value) Parameters index int (int) Position in the collection to insert the MgMapPlot. value MgMapPlot (MgMapPlot) MgMapPlot to be inserted in the collection. Exceptions MgException with code (MgOutOfRangeException) if the specified index is out of Remove(MgMapPlot) Removes a MapPlot from the collection. public bool Remove(MgMapPlot value) Parameters value MgMapPlot (MgMapPlot) MgMapPlot to be removed Returns bool Returns true if removal was successful. RemoveAt(int) Removes a MapPlot from the collection at the specified index. public void RemoveAt(int index) Parameters index int (int) Index of the map to be removed. Exceptions MgException with code (MgOutOfRangeException) if the MapPlot does not exist in the SetItem(int, MgMapPlot) Sets the MapPlot in the collection at the specified index to a specified value. public void SetItem(int index, MgMapPlot value) Parameters index int (int) Position in the collection to set the OSGeo.MapGuide.MgMapPot. value MgMapPlot (MgMapPlot) MgMapPlot to be set in the collection. Exceptions MgException with code (MgOutOfRangeException) if the index is out of range."
  },
  "api/OSGeo.MapGuide.MgMapPlotInstruction.html": {
    "href": "api/OSGeo.MapGuide.MgMapPlotInstruction.html",
    "title": "Class MgMapPlotInstruction | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMapPlotInstruction Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll MgMapPlotInstruction defines enumerated values used to indicate whether the plot should be based on the center and scale of the map, an overridden center and scale, or an overridden extent. public class MgMapPlotInstruction Inheritance object MgMapPlotInstruction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields UseMapCenterAndScale Specifies the plot should use the center and scale of the map public const int UseMapCenterAndScale = 0 Field Value int UseOverriddenCenterAndScale Specifies the plot should use the overridden center and scale of the map public const int UseOverriddenCenterAndScale = 1 Field Value int UseOverriddenExtent Specifies the plot should use the overridden extent public const int UseOverriddenExtent = 2 Field Value int"
  },
  "api/OSGeo.MapGuide.MgMappingService.html": {
    "href": "api/OSGeo.MapGuide.MgMappingService.html",
    "title": "Class MgMappingService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMappingService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Performs map related operations such as getting an eMap DWF representing a map or updates to a map, or querying features from maps or layers of a map. public class MgMappingService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgMappingService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateRuntimeMap(MgResourceIdentifier, string, int, int) Creates a new runtime map from the specified Map Definition resource id and returns an XML-based description of the runtime map public MgByteReader CreateRuntimeMap(MgResourceIdentifier mapDefinition, string sessionId, int requestedFeatures, int iconsPerScaleRange) Parameters mapDefinition MgResourceIdentifier (MgResourceIdentifier) MgResourceIdentifier object identifying the map definition resource. sessionId string (String/string) The session ID requestedFeatures int (int) A bitmask representing the desired information to return in the XML response: 1=Layer/Group structure, 2=Layer Icons, 4=Layer Feature Source Information iconsPerScaleRange int (int) The number of legend icons per scale range to render inline in the XML response as base64 strings. If a scale range contains a number of rules that exceeds this value, only the first and last rules of a type style in the scale range will have inline icons Returns MgByteReader Returns an XML-based description of the runtime map CreateRuntimeMap(MgResourceIdentifier, string, string, string, int, int, int, int) Creates a new runtime map from the specified Map Definition resource id and returns an XML-based description of the runtime map public MgByteReader CreateRuntimeMap(MgResourceIdentifier mapDefinition, string targetMapName, string sessionId, string iconFormat, int iconWidth, int iconHeight, int requestedFeatures, int iconsPerScaleRange) Parameters mapDefinition MgResourceIdentifier (MgResourceIdentifier) MgResourceIdentifier object identifying the map definition resource. targetMapName string (String/string) The desired name of the runtime map sessionId string (String/string) The session ID iconFormat string (String/string) The desired image format for icons (from MgImageFormats) iconWidth int (int) The width of each individual inline legend icons. Has no effect if icons was not requested in the response. iconHeight int (int) The height of each individual inline legend icons. Has no effect if icons was not requested in the response. requestedFeatures int (int) A bitmask representing the desired information to return in the XML response: 1=Layer/Group structure, 2=Layer Icons, 4=Layer Feature Source Information iconsPerScaleRange int (int) The number of legend icons per scale range to render inline in the XML response as base64 strings. If a scale range contains a number of rules that exceeds this value, only the first and last rules of a type style in the scale range will have inline icons Returns MgByteReader Returns an XML-based description of the runtime map Exceptions MgException MgInvalidArgumentException\"> MgException MgNullArgumentException\"> DescribeRuntimeMap(MgMap, int, int) Returns an XML-based description of the runtime map public MgByteReader DescribeRuntimeMap(MgMap map, int requestedFeatures, int iconsPerScaleRange) Parameters map MgMap (MgMap) The map to describe requestedFeatures int (int) A bitmask representing the desired information to return in the XML response: 1=Layer/Group structure, 2=Layer Icons, 4=Layer Feature Source Information iconsPerScaleRange int (int) The number of legend icons per scale range to render inline in the XML response as base64 strings. If a scale range contains a number of rules that exceeds this value, only the first and last rules of a type style in the scale range will have inline icons Returns MgByteReader Returns an XML-based description of the runtime map DescribeRuntimeMap(MgMap, string, int, int, int, int) Returns an XML-based description of the given runtime map public MgByteReader DescribeRuntimeMap(MgMap map, string iconFormat, int iconWidth, int iconHeight, int requestedFeatures, int iconsPerScaleRange) Parameters map MgMap (MgMap) The map to describe iconFormat string (String/string) The desired image format for icons (from MgImageFormats) iconWidth int (int) The width of each individual inline legend icons. Has no effect if icons was not requested in the response. iconHeight int (int) The height of each individual inline legend icons. Has no effect if icons was not requested in the response. requestedFeatures int (int) A bitmask representing the desired information to return in the XML response: 1=Layer/Group structure, 2=Layer Icons, 4=Layer Feature Source Information iconsPerScaleRange int (int) The number of legend icons per scale range to render inline in the XML response as base64 strings. If a scale range contains a number of rules that exceeds this value, only the first and last rules of a type style in the scale range will have inline icons Returns MgByteReader Returns an XML-based description of the runtime map Exceptions MgException MgInvalidArgumentException\"> MgException MgNullArgumentException\"> Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GenerateLegendImage(MgResourceIdentifier, double, int, int, string, int, int) GenerateLegendImage() returns the legend image for the specified layer. public MgByteReader GenerateLegendImage(MgResourceIdentifier resource, double scale, int width, int height, string format, int geomType, int themeCategory) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Input MgResourceIdentifier object identifying the layer definition resource. scale double (double) Input The scale at which the symbolization is requested. width int (int) Input The requested image width in pixels. height int (int) Input The requested image height in pixels. format string (String/string) Input Image format, from MgImageFormats. Example: PNG, JPG, PNG8, etc geomType int (int) Input The type of symbolization required: 1=Point, 2=Line, 3=Area, 4=Composite themeCategory int (int) Input The value indicating which theme category swatch to return. Used when there is a theme defined at this scale. An exception will be thrown if a requested them category doesn&apos;t exist. Returns MgByteReader Returns a stream representing the legend image. The default returned image format will be PNG8 unless a different supported format is requested. An exception will be thrown if an unsupported image format is requested. Exceptions MgException MgArgumentOutOfRangeException\"> MgException MgInvalidResourceTypeException\"> MgException MgNullArgumentException\"> MgException MgInvalidImageFormatException\"> GenerateMultiPlot(MgMapPlotCollection, MgDwfVersion) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GenerateMultiPlot(MgMapPlotCollection mapPlots, MgDwfVersion dwfVersion) Parameters mapPlots MgMapPlotCollection (MgMapPlotCollection) A collection of MapPlot objects. dwfVersion MgDwfVersion (MgDwfVersion) DWF specification required by the client. This determines the schema and file versions used to generate the DWFs sent back to the client. Returns MgByteReader Returns an MgByteReader object containing a DWF in ePlot format with multiple sheets, one for each map. Exceptions MgException MgNullArgumentException\"> GeneratePlot(MgMap, MgCoordinate, double, MgPlotSpecification, MgLayout, MgDwfVersion) Plot the map to an EPlot DWF using the specified center and scale. The extents will be computed to fill the space within the page margins. If the layout paramter is null, no adornments will be added to the page. public MgByteReader GeneratePlot(MgMap map, MgCoordinate center, double scale, MgPlotSpecification plotSpec, MgLayout layout, MgDwfVersion dwfVersion) Parameters map MgMap (MgMap) Map object describing current state of map. center MgCoordinate (MgCoordinate) The coordinates of the center of the map for the plot. scale double (double) The scale to use for the plot. plotSpec MgPlotSpecification (MgPlotSpecification) Plotting specifications for the generated plot. layout MgLayout (MgLayout) Layout specifications to use for the generated plot. dwfVersion MgDwfVersion (MgDwfVersion) DWF version required by the client. This determines the schema and file versions used to generate the DWFs sent back to the client. Returns MgByteReader Returns an MgByteReader object containing a DWF in ePlot format. Exceptions MgException MgNullArgumentException\"> GeneratePlot(MgMap, MgEnvelope, bool, MgPlotSpecification, MgLayout, MgDwfVersion) Plot the map to an EPlot DWF using the extent specified in the mapping coordinate space. The center and scale will be computed based on the extent specified. If expandToFit is true, then the extent specified will be expanded in the X or Y direction to fill the space within the page margins. If the layout paramter is null, no adornments will be added to the page. public MgByteReader GeneratePlot(MgMap map, MgEnvelope extents, bool expandToFit, MgPlotSpecification plotSpec, MgLayout layout, MgDwfVersion dwfVersion) Parameters map MgMap (MgMap) Map object describing current state of map. extents MgEnvelope (MgEnvelope) The extents of the map to be plotted.. expandToFit bool (boolean/bool) Flag indicating whether the extents should be expanded to fill the space withing the page margins. plotSpec MgPlotSpecification (MgPlotSpecification) Plotting specifications for the generated plot. layout MgLayout (MgLayout) Layout specifications to use for the generated plot. dwfVersion MgDwfVersion (MgDwfVersion) DWF version required by the client. This determines the schema and file versions used to generate the DWFs sent back to the client. Returns MgByteReader Returns an MgByteReader object containing a DWF in ePlot format. Exceptions MgException MgNullArgumentException\"> GeneratePlot(MgMap, MgPlotSpecification, MgLayout, MgDwfVersion) Plot The map to an EPlot DWF using the center and scale from the map. The extents will be computed to fill the space within the page margins. If the layout paramter is null, no adornments will be added to the page. public MgByteReader GeneratePlot(MgMap map, MgPlotSpecification plotSpec, MgLayout layout, MgDwfVersion dwfVersion) Parameters map MgMap (MgMap) Map object describing current state of map. plotSpec MgPlotSpecification (MgPlotSpecification) Plotting specifications for the generated plot. layout MgLayout (MgLayout) Layout specifications to use for the generated plot. dwfVersion MgDwfVersion (MgDwfVersion) DWF version required by the client. This determines the schema and file versions used to generate the DWFs sent back to the client. Returns MgByteReader Returns an MgByteReader object containing a DWF in ePlot format. Exceptions MgException MgNullArgumentException\"> QueryFeatures(MgMap, MgStringCollection, int, int, int, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Queries feature information for each feature visible at the specified point of interest, on a given set of layers. public MgByteReader QueryFeatures(MgMap map, MgStringCollection layerNames, int x, int y, int maxFeatures, string coordinateSpace) Parameters map MgMap Map object containing current view state of the map. layerNames MgStringCollection List of layers to return information from. Each layer must be in the specified MgMap object x int X coordinate for point of interest y int Y coordinate for point of interest maxFeatures int Maximum number of feature that should be returned for a given layer greater than 0, usually 1. If the number of features sharing the requested location is greater than maxFeatures the subset of features returned depends on the provider. coordinateSpace string Input specifies the coordinate system the geometry should be returned in. See MgCoordinateSpace Returns MgByteReader Returns a byte reader containing an XML document with the feature information described in GML (Geography Markup Language). GML is defined by the OpenGIS consortium. A specification for this language can be found at: /// https://portal.opengeospatial.org/files/?artifact_id=7174 QueryFeatures(MgMap, string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Queries and returns each of the visible features on the specified layer of the specified map. public MgByteReader QueryFeatures(MgMap map, string layerName, string coordinateSpace) Parameters map MgMap Input map object containing current viewed state of map. layerName string Input name of the layer to query properties for coordinateSpace string Input specifies the coordinate system the geometry should be returned in. See MgCoordinateSpace Returns MgByteReader A byte reader containing an XML document with the feature information described in GML (Geography Markup Language). GML is defined by the OpenGIS consortium. A specification for this language can be found at: /// https://portal.opengeospatial.org/files/?artifact_id=7174"
  },
  "api/OSGeo.MapGuide.MgMeasure.html": {
    "href": "api/OSGeo.MapGuide.MgMeasure.html",
    "title": "Class MgMeasure | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMeasure Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgMeasure is an abstract class that can be implemented to provide non-linear measurement for geometry operations. public class MgMeasure : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgMeasure Implements IDisposable Derived MgCoordinateSystemMeasure Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAzimuth(MgCoordinate, MgCoordinate) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the angle with respect to the north of a vector formed by two coordinates. public double GetAzimuth(MgCoordinate coord1, MgCoordinate coord2) Parameters coord1 MgCoordinate An MgCoordinate that specifies the first coordinate. coord2 MgCoordinate An MgCoordinate that specifies the second coordinate. Returns double The azimuth (Angle with respect to the North) of the vector formed by coord1 and coord2. GetCoordinate(MgCoordinate, double, double) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Computes a coordinate a given distance along a vector that is defined by a starting coordinate and an azimuth (Angle with respect to the North). public MgCoordinate GetCoordinate(MgCoordinate coord, double azimuth, double distance) Parameters coord MgCoordinate An MgCoordinate that represents the start of the vector. azimuth double An azimuth (Angle with respect to the North) that defines the direction of the vector. distance double The distance along the vector of the desired coordinate in Meters. Returns MgCoordinate An MgCoordinate that lies the given distance along the vector. GetDistance(MgCoordinate, MgCoordinate) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the distance between two coordinates. public double GetDistance(MgCoordinate coord1, MgCoordinate coord2) Parameters coord1 MgCoordinate An MgCoordinate that specifies the first coordinate. coord2 MgCoordinate An MgCoordinate that specifies the second coordinate. Returns double The distance between coord1 and coord2 as a double in Meters."
  },
  "api/OSGeo.MapGuide.MgMetatile.html": {
    "href": "api/OSGeo.MapGuide.MgMetatile.html",
    "title": "Class MgMetatile | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMetatile Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Defines a raw image frame buffer from the result of a meta-tile rendering operation public class MgMetatile : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgMetatile Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetHeight() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the height of this metatile public int GetHeight() Returns int GetImage() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the meta-tile content. If no meta-tiling is performed, this is the tile image. Otherwise, it is the raw image frame buffer (for sub-dividing into originally requested tile images) public MgByteReader GetImage() Returns MgByteReader GetMetaTilingFactor() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the meta-tiling factor. public int GetMetaTilingFactor() Returns int GetRequestedHeight() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the originally requested height of this tile public int GetRequestedHeight() Returns int GetRequestedWidth() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the originally requested width of this tile public int GetRequestedWidth() Returns int GetTileImageFormat() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the originally requested tile image format public string GetTileImageFormat() Returns string GetWidth() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the width of this metatile public int GetWidth() Returns int"
  },
  "api/OSGeo.MapGuide.MgMimeType.html": {
    "href": "api/OSGeo.MapGuide.MgMimeType.html",
    "title": "Class MgMimeType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMimeType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Mime types for data to be sent to clients. public class MgMimeType Inheritance object MgMimeType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Agf application/agf public const string Agf = \"application/agf\" Field Value string Binary application/octet-stream public const string Binary = \"application/octet-stream\" Field Value string Dwf model/vnd.dwf public const string Dwf = \"model/vnd.dwf\" Field Value string Gif image/gif public const string Gif = \"image/gif\" Field Value string Html text/html public const string Html = \"text/html\" Field Value string Jpeg image/jpeg public const string Jpeg = \"image/jpeg\" Field Value string Json application/json public const string Json = \"application/json\" Field Value string Kml application/vnd.google-earth.kml+xml public const string Kml = \"application/vnd.google-earth.kml+xml\" Field Value string Kmz application/vnd.google-earth.kmz public const string Kmz = \"application/vnd.google-earth.kmz\" Field Value string Meta application/metatile public const string Meta = \"application/metatile\" Field Value string Mvt application/vnd.mapbox-vector-tile public const string Mvt = \"application/vnd.mapbox-vector-tile\" Field Value string Png image/png public const string Png = \"image/png\" Field Value string Text text/plain public const string Text = \"text/plain\" Field Value string Tiff image/tiff public const string Tiff = \"image/tiff\" Field Value string Xml text/xml public const string Xml = \"text/xml\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgMultiCurvePolygon.html": {
    "href": "api/OSGeo.MapGuide.MgMultiCurvePolygon.html",
    "title": "Class MgMultiCurvePolygon | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMultiCurvePolygon Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgMultiCurvePolygon is a two-dimensional aggregate geometry whose elements are MgCurvePolygon geometries. public class MgMultiCurvePolygon : MgAggregateGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgAggregateGeometry MgMultiCurvePolygon Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Dimension public int Dimension { get; } Property Value int GeometryType public int GeometryType { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetCount() Returns int GetCurvePolygon(int) Gets the polygon at the specified index. The indexing starts at zero. public MgCurvePolygon GetCurvePolygon(int index) Parameters index int (int) An integer specifying the location of the curve polygon in the collection. Returns MgCurvePolygon The MgCurvePolygon at the specified index. GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgMultiCurveString.html": {
    "href": "api/OSGeo.MapGuide.MgMultiCurveString.html",
    "title": "Class MgMultiCurveString | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMultiCurveString Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgMultiCurveString is a one-dimensional aggregate geometry whose elements are MgCurveString geometries. public class MgMultiCurveString : MgAggregateGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgAggregateGeometry MgMultiCurveString Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Dimension public int Dimension { get; } Property Value int GeometryType public int GeometryType { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetCount() Returns int GetCurveString(int) Gets the curve string at the specified index. The indexing starts at zero. public MgCurveString GetCurveString(int index) Parameters index int (int) An integer specifying the location of the curve string in the collection. Returns MgCurveString The MgCurveString at the specified index. GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgMultiGeometry.html": {
    "href": "api/OSGeo.MapGuide.MgMultiGeometry.html",
    "title": "Class MgMultiGeometry | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMultiGeometry Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgMultiGeometry is a heterogeneous aggregate of one or more MgGeometry objects. public class MgMultiGeometry : MgAggregateGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgAggregateGeometry MgMultiGeometry Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Dimension public int Dimension { get; } Property Value int GeometryType public int GeometryType { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetCount() Returns int GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetGeometry(int) Gets the geometry at the specified index. The indexing starts at zero. public MgGeometry GetGeometry(int index) Parameters index int (int) An integer specifying the location of the geometry in the collection. Returns MgGeometry The MgGeometry at the specified index. GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgMultiLineString.html": {
    "href": "api/OSGeo.MapGuide.MgMultiLineString.html",
    "title": "Class MgMultiLineString | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMultiLineString Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgMultiLineString is a one-dimensional aggregate geometry whose elements are MgLineString geometries. public class MgMultiLineString : MgAggregateGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgAggregateGeometry MgMultiLineString Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Dimension public int Dimension { get; } Property Value int GeometryType public int GeometryType { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetCount() Returns int GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int GetLineString(int) Gets the line string at the specified index. The indexing starts at zero. public MgLineString GetLineString(int index) Parameters index int (int) An integer specifying the location of the line string in the collection. Returns MgLineString The MgLineString at the specified index. IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform Returns MgGeometricEntity"
  },
  "api/OSGeo.MapGuide.MgMultiPoint.html": {
    "href": "api/OSGeo.MapGuide.MgMultiPoint.html",
    "title": "Class MgMultiPoint | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMultiPoint Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgMultiPoint is a 0 dimensional aggregate geometry whose elements are MgPoint geometries. public class MgMultiPoint : MgAggregateGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgAggregateGeometry MgMultiPoint Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Dimension public int Dimension { get; } Property Value int GeometryType public int GeometryType { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetCount() Returns int GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int GetPoint(int) Gets the point at the specified index. The indexing starts at zero. public MgPoint GetPoint(int index) Parameters index int (int) An integer specifying the location of the point in the collection. Returns MgPoint The MgPoint at the specified index. IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgMultiPolygon.html": {
    "href": "api/OSGeo.MapGuide.MgMultiPolygon.html",
    "title": "Class MgMultiPolygon | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgMultiPolygon Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgMultiPolygon is a two-dimensional aggregate geometry whose elements are MgPolygon geometries. public class MgMultiPolygon : MgAggregateGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgAggregateGeometry MgMultiPolygon Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Coordinates public MgCoordinateIterator Coordinates { get; } Property Value MgCoordinateIterator Count public int Count { get; } Property Value int Dimension public int Dimension { get; } Property Value int GeometryType public int GeometryType { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinates() Returns an iterator over the coordinates included in this geometric entity. public MgCoordinateIterator GetCoordinates() Returns MgCoordinateIterator The coordinates of this geometric entity GetCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetCount() Returns int GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int GetPolygon(int) Gets the polygon at the specified index. The indexing starts at zero. public MgPolygon GetPolygon(int index) Parameters index int (int) An integer specifying the location of the polygon in the collection. Returns MgPolygon The MgPolygon at the specified index IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgNamedSerializable.html": {
    "href": "api/OSGeo.MapGuide.MgNamedSerializable.html",
    "title": "Class MgNamedSerializable | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgNamedSerializable Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Root class for all named serializable objects. public class MgNamedSerializable : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable Implements IDisposable Derived MgClassDefinition MgFeatureSchema MgLayerBase MgLayerGroup MgMapPlot MgParameter MgPortableMapPlot MgProperty MgResource MgWebCommand Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgNamedSerializable(IntPtr, bool) protected MgNamedSerializable(IntPtr cPtr, bool cMemoryOwn) Parameters cPtr IntPtr cMemoryOwn bool Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool getCPtr(MgNamedSerializable) public static HandleRef getCPtr(MgNamedSerializable obj) Parameters obj MgNamedSerializable Returns HandleRef swigRelease(MgNamedSerializable) public static HandleRef swigRelease(MgNamedSerializable obj) Parameters obj MgNamedSerializable Returns HandleRef"
  },
  "api/OSGeo.MapGuide.MgNullableProperty.html": {
    "href": "api/OSGeo.MapGuide.MgNullableProperty.html",
    "title": "Class MgNullableProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgNullableProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll This is the base class for all properties which can have NULL values. If a property value is NULL, there is no value, and a call to the GetValue() method throws an exception. public class MgNullableProperty : MgProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty Implements IDisposable Derived MgBlobProperty MgBooleanProperty MgByteProperty MgClobProperty MgDateTimeProperty MgDoubleProperty MgFeatureProperty MgGeometryProperty MgInt16Property MgInt32Property MgInt64Property MgRasterProperty MgSingleProperty MgStringProperty Inherited Members MgProperty.PropertyType MgProperty.Name MgProperty.GetPropertyType() MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgNullableProperty(IntPtr, bool) protected MgNullableProperty(IntPtr cPtr, bool cMemoryOwn) Parameters cPtr IntPtr cMemoryOwn bool Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool IsNull() Determines whether the GetValue and SetValue methods are enabled. public bool IsNull() Returns bool Returns true if the GetValue and SetValue methods are enabled; otherwise returns false. SetNull(bool) If set to true, disables the getting and setting of the property's value. It does not remove any existing value. Attempting to get or set the value causes an OSGeo.MapGuide.MgNullPropertyValueException. If set to false, reenables the getting and setting of the property's values. public void SetNull(bool bIsNull) Parameters bIsNull bool (boolean/bool) Set to true to disable the getting and setting of the property value. Set to false to reenable the getting and setting of the property value. getCPtr(MgNullableProperty) public static HandleRef getCPtr(MgNullableProperty obj) Parameters obj MgNullableProperty Returns HandleRef swigRelease(MgNullableProperty) public static HandleRef swigRelease(MgNullableProperty obj) Parameters obj MgNullableProperty Returns HandleRef"
  },
  "api/OSGeo.MapGuide.MgObject.html": {
    "href": "api/OSGeo.MapGuide.MgObject.html",
    "title": "Class MgObject | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgObject Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Root class of all non-exception objects public class MgObject : IDisposable Inheritance object MgObject Implements IDisposable Derived MgDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields swigCMemOwn protected bool swigCMemOwn Field Value bool Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~MgObject() protected ~MgObject()"
  },
  "api/OSGeo.MapGuide.MgObjectPropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MgObjectPropertyDefinition.html",
    "title": "Class MgObjectPropertyDefinition | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgObjectPropertyDefinition Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines a feature property which contains one or more objects whose type is a feature class. If there is more than one object, an identity property is defined that is used to select an object from the collection. public class MgObjectPropertyDefinition : MgPropertyDefinition, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgPropertyDefinition MgObjectPropertyDefinition Implements IDisposable Inherited Members MgPropertyDefinition.getCPtr(MgPropertyDefinition) MgPropertyDefinition.swigRelease(MgPropertyDefinition) MgPropertyDefinition.PropertyType MgPropertyDefinition.Description MgPropertyDefinition.QualifiedName MgPropertyDefinition.GetPropertyType() MgPropertyDefinition.SetDescription(string) MgPropertyDefinition.GetDescription() MgPropertyDefinition.SetQualifiedName(string) MgPropertyDefinition.GetQualifiedName() MgPropertyDefinition.Delete() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgObjectPropertyDefinition(string) Constructs a MgObjectPropertyDefinition object. public MgObjectPropertyDefinition(string name) Parameters name string (String/string) The name of the property. Properties ClassDefinition public MgClassDefinition ClassDefinition { get; set; } Property Value MgClassDefinition IdentityProperty public MgDataPropertyDefinition IdentityProperty { get; set; } Property Value MgDataPropertyDefinition ObjectType public int ObjectType { get; set; } Property Value int OrderType public int OrderType { get; set; } Property Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetClassDefinition() Gets an MgClassDefinition object that defines the type of this property. public MgClassDefinition GetClassDefinition() Returns MgClassDefinition Returns an MgClassDefinition object. GetIdentityProperty() Gets an MgDataPropertyDefinition object that defines the property used to identify an object property uniquely. public MgDataPropertyDefinition GetIdentityProperty() Returns MgDataPropertyDefinition Returns an MgDataPropertyDefinition object if the type of the object property is MgObjectPropertyType::Collection or MgObjectPropertyType::OrderedCollection. GetObjectType() Gets the type of this object property (value, collection, or ordered collection). public int GetObjectType() Returns int Returns an MgObjectPropertyType value. GetOrderType() Gets the MgOrderingOption value (ascending or descending) for this object property. public int GetOrderType() Returns int Returns an MgOrderingOption value. SetClassDefinition(MgClassDefinition) Sets a reference to the MgClassDefinition that defines the type of this property. public void SetClassDefinition(MgClassDefinition classDef) Parameters classDef MgClassDefinition (MgClassDefinition) The class definition used to create the object or objects that constitute the property. SetIdentityProperty(MgDataPropertyDefinition) Sets a reference to an MgDataPropertyDefinition used to create the identity properties that uniquely identify the objects that constitute the object property. public void SetIdentityProperty(MgDataPropertyDefinition propDef) Parameters propDef MgDataPropertyDefinition (MgDataPropertyDefinition) The data property definition used to create the identity properties for the object collection in this object property. SetObjectType(int) Sets the MgObjectPropertyType type (either value, collection, or ordered collection) of this object property. public void SetObjectType(int objType) Parameters objType int (int) The MgObjectPropertyType type of this object property. SetOrderType(int) Sets the MgOrderingOption type (either ascending or descending) for this object property. public void SetOrderType(int orderType) Parameters orderType int (int) The ordering option type of this object property."
  },
  "api/OSGeo.MapGuide.MgObjectPropertyType.html": {
    "href": "api/OSGeo.MapGuide.MgObjectPropertyType.html",
    "title": "Class MgObjectPropertyType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgObjectPropertyType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgObjectPropertyType Inheritance object MgObjectPropertyType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Collection Signifies that the object property contains more than one feature class object. The collection of objects is in no particular order relative to the identity property defined public const int Collection = 1 Field Value int OrderedCollection Signifies that the object property contains more than one feature class object in ascending or descending order relative to the identity property defined for the collection. public const int OrderedCollection = 2 Field Value int Value Signifies that the object property contains a single feature class object. public const int Value = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgOrderingOption.html": {
    "href": "api/OSGeo.MapGuide.MgOrderingOption.html",
    "title": "Class MgOrderingOption | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgOrderingOption Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines a type used to specify the order in which features are returned by MgFeatureService::SelectFeatures. This type is used as an argument to the MgFeatureQueryOptions::SetOrderingFilter. public class MgOrderingOption Inheritance object MgOrderingOption Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Ascending Signifies that the features are returned in ascending order relative to the properties specified in the first argument of MgFeatureQueryOptions::SetOrderingFilter. public const int Ascending = 0 Field Value int Descending Signifies that the features are returned in descending order relative to the properties specified in the first argument of MgFeatureQueryOptions::SetOrderingFilter. public const int Descending = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgPackageStatusInformation.html": {
    "href": "api/OSGeo.MapGuide.MgPackageStatusInformation.html",
    "title": "Class MgPackageStatusInformation | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPackageStatusInformation Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll This class manages resource package status information. public class MgPackageStatusInformation : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgPackageStatusInformation Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPackageStatusInformation() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Constructs the object. public MgPackageStatusInformation() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetApiName() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the name of the package API. public string GetApiName() Returns string The package API name. GetAverageOperationTime() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the average time (in milliseconds) per operation. public double GetAverageOperationTime() Returns double The average operation time. GetEndTime() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the end time of the package. public MgDateTime GetEndTime() Returns MgDateTime The package's end time. GetErrorMessage() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the error message. public string GetErrorMessage() Returns string The error message. GetOperationsFailed() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the number of failed operations encountered by the package API. public int GetOperationsFailed() Returns int The number of failed operations. GetOperationsReceived() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the number of operations received from the package API. public int GetOperationsReceived() Returns int The total number of operations. GetPackageDate() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the modification date of the package. public MgDateTime GetPackageDate() Returns MgDateTime The package's modification date. GetPackageDescription() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the description of the package. public string GetPackageDescription() Returns string The package description. GetPackageName() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the name of the package. public string GetPackageName() Returns string The package name. GetPackageSize() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the size (in bytes) of the package. public long GetPackageSize() Returns long The package size. GetServerAddress() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the IP address of the Site server on which the package API is performed. public string GetServerAddress() Returns string The server name. GetServerName() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the name of the Site server on which the package API is performed. public string GetServerName() Returns string The server name. GetStackTrace() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the stack trace. public string GetStackTrace() Returns string The stack trace. GetStartTime() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the start time of the package. public MgDateTime GetStartTime() Returns MgDateTime The package's start time. GetStatusCode() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the status code of the package. public string GetStatusCode() Returns string The package status code GetStatusMessage() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the package status message. public string GetStatusMessage() Returns string The package status message. GetUserName() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the name of the user who performed the package API. public string GetUserName() Returns string The user name. SetApiName(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the name of the package API. public void SetApiName(string apiName) Parameters apiName string Name of the package API. SetEndTime(MgDateTime) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the end time of the package. public void SetEndTime(MgDateTime endTime) Parameters endTime MgDateTime End time of the package. SetErrorMessage(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the error message. public void SetErrorMessage(string errorMessage) Parameters errorMessage string Error message. SetOperationsFailed(int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the number of failed operations encountered by the package API. public void SetOperationsFailed(int opsFailed) Parameters opsFailed int Number of failed operations. SetOperationsReceived(int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the number of operations received by the package API. public void SetOperationsReceived(int opsReceived) Parameters opsReceived int Total number of operations. SetPackageDate(MgDateTime) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the modification date of the package. public void SetPackageDate(MgDateTime packageDate) Parameters packageDate MgDateTime Modification date of the package. SetPackageDescription(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the description of the package. public void SetPackageDescription(string packageDescription) Parameters packageDescription string Description of the package. SetPackageName(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the name of the package. public void SetPackageName(string packageName) Parameters packageName string Name of the package. SetPackageSize(long) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the size (in bytes) of the package. public void SetPackageSize(long packageSize) Parameters packageSize long Size of the package. SetServerAddress(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the IP address of the Site server on which the package API is performed. public void SetServerAddress(string serverAddress) Parameters serverAddress string IP address of the server. SetServerName(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the name of the Site server on which the package API is performed. public void SetServerName(string serverName) Parameters serverName string Name of the server. SetStackTrace(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the stack trace. public void SetStackTrace(string stackTrace) Parameters stackTrace string Stack trace. SetStartTime(MgDateTime) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the start time of the package. public void SetStartTime(MgDateTime startTime) Parameters startTime MgDateTime Start time of the package. SetStatusCode(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the status code of the package. public void SetStatusCode(string statusCode) Parameters statusCode string Status code of the package. SetUserName(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the name of the user who performed the package API. public void SetUserName(string userName) Parameters userName string Name of the user."
  },
  "api/OSGeo.MapGuide.MgPageUnitsType.html": {
    "href": "api/OSGeo.MapGuide.MgPageUnitsType.html",
    "title": "Class MgPageUnitsType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPageUnitsType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Defines page size units for the Mapping Service. public class MgPageUnitsType Inheritance object MgPageUnitsType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Inches Page units are in inches. public const string Inches = \"in\" Field Value string Millimeters Page units are in millimeters. public const string Millimeters = \"mm\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgParameter.html": {
    "href": "api/OSGeo.MapGuide.MgParameter.html",
    "title": "Class MgParameter | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgParameter Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll The MgParameter class specifies a value for a particular parameter. Instances of this class are used to specify a value to bind to a parameter when a command is executed. Typically, it is used to bind parameters to the SQL command. public class MgParameter : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgParameter Implements IDisposable Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgParameter(MgNullableProperty) Constructs an MgParameter object. The default parameter direction is input. public MgParameter(MgNullableProperty prop) Parameters prop MgNullableProperty (MgNullableProperty) An MgNullableProperty instance which contains the name and value of the parameter. MgParameter(MgNullableProperty, int) Constructs an MgParameter object with the specified parameter name, value, and direction. public MgParameter(MgNullableProperty prop, int direction) Parameters prop MgNullableProperty (MgNullableProperty) An MgNullableProperty instance which contains the name and value of the parameter. direction int (int) The function direction of the parameter value. Properties Name public string Name { get; set; } Property Value string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDirection() Gets the function direction value of the the command parameter, which is defined in MgParameterDirection. public int GetDirection() Returns int Returns the direction value defined in MgParameterDirection. GetName() Gets the parameter name. public string GetName() Returns string Returns the parameter name. GetProperty() Gets the name and value of the parameter. public MgNullableProperty GetProperty() Returns MgNullableProperty Returns an MgNullableProperty instance which contains the name and value of the parameter. SetDirection(int) Sets the function direction of the parameter value, which is defined in MgParameterDirection. public void SetDirection(int value) Parameters value int Input the direction value. SetName(string) Sets the parameter name. public void SetName(string name) Parameters name string (String/string) The name of parameter. SetProperty(MgNullableProperty) Sets the name and value of the parameter. public void SetProperty(MgNullableProperty prop) Parameters prop MgNullableProperty (MgNullableProperty) Input an MgNullableProperty instance which contains the name and value of the parameter."
  },
  "api/OSGeo.MapGuide.MgParameterCollection.html": {
    "href": "api/OSGeo.MapGuide.MgParameterCollection.html",
    "title": "Class MgParameterCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgParameterCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll MgParameterCollection represents a collection of parameters. All parameters contained in an instance of a parameter collection are objects whose base class is MgParameter. A call to a parameter object's GetType() method returns one of the integer constants defined in class MgPropertyType. This collection does not allow duplicate key names. public class MgParameterCollection : MgCollection, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgParameterCollection Implements IDisposable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgParameterCollection() Constructs a MgParameterCollection. The collection is initially empty. public MgParameterCollection() Methods Add(MgParameter) Adds the specified item to the end of the collection. public void Add(MgParameter value) Parameters value MgParameter (MgParameter) Input value. Exceptions MgException with code (MgDuplicateObjectException) if the index is a duplicate. Clear() Removes all items from the collection. public void Clear() Contains(MgParameter) public bool Contains(MgParameter value) Parameters value MgParameter Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetItem(int) public MgParameter GetItem(int index) Parameters index int Returns MgParameter IndexOf(MgParameter) public int IndexOf(MgParameter value) Parameters value MgParameter Returns int Insert(int, MgParameter) Inserts the specified item at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, MgParameter value) Parameters index int (int) Input index value MgParameter (MgParameter) Input value. Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. MgException with code (MgDuplicateObjectException) if it is a duplicate. Remove(MgParameter) Removes the specified item from the collection. public bool Remove(MgParameter value) Parameters value MgParameter (MgParameter) Input value. Returns bool Returns true if removal was successful. RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgParameter) Sets the item in the collection at the specified index to the specified value. public void SetItem(int index, MgParameter value) Parameters index int (int) Input index. value MgParameter (MgParameter) Input value. Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. MgException with code (MgDuplicateObjectException) if it is a duplicate. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgParameterDirection.html": {
    "href": "api/OSGeo.MapGuide.MgParameterDirection.html",
    "title": "Class MgParameterDirection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgParameterDirection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll The MgParameterDirection defines integer constants used to signify the direction in which a parameter value will be used within the context of a FDO Command. public class MgParameterDirection Inheritance object MgParameterDirection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Input Specifies that the parameter is an input parameter. public const int Input = 0 Field Value int InputOutput Specifies that the parameter is an input and output parameter. public const int InputOutput = 2 Field Value int Output Specifies that the parameter is an output parameter. public const int Output = 1 Field Value int Ret Specifies that the parameter is a return parameter. public const int Ret = 3 Field Value int"
  },
  "api/OSGeo.MapGuide.MgPlotSpecification.html": {
    "href": "api/OSGeo.MapGuide.MgPlotSpecification.html",
    "title": "Class MgPlotSpecification | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPlotSpecification Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPlotSpecification : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgPlotSpecification Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPlotSpecification(float, float, string) Specifications for the plot. public MgPlotSpecification(float paperWidth, float paperHeight, string pageUnits) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPageUnitsType for valid units of measure MgPlotSpecification(float, float, string, float) Specifications for the plot. public MgPlotSpecification(float paperWidth, float paperHeight, string pageUnits, float left) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPageUnitsType for valid units of measure left float (float) Input The left margin between the plot and the page edge. MgPlotSpecification(float, float, string, float, float) Specifications for the plot. public MgPlotSpecification(float paperWidth, float paperHeight, string pageUnits, float left, float top) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPageUnitsType for valid units of measure left float (float) Input The left margin between the plot and the page edge. top float (float) Input The top margin between the plot and the page edge. MgPlotSpecification(float, float, string, float, float, float) Specifications for the plot. public MgPlotSpecification(float paperWidth, float paperHeight, string pageUnits, float left, float top, float right) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPageUnitsType for valid units of measure left float (float) Input The left margin between the plot and the page edge. top float (float) Input The top margin between the plot and the page edge. right float (float) Input The right margin between the plot and the page edge. MgPlotSpecification(float, float, string, float, float, float, float) Specifications for the plot. public MgPlotSpecification(float paperWidth, float paperHeight, string pageUnits, float left, float top, float right, float bottom) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPageUnitsType for valid units of measure left float (float) Input The left margin between the plot and the page edge. top float (float) Input The top margin between the plot and the page edge. right float (float) Input The right margin between the plot and the page edge. bottom float (float) Input The bottom margin between the plot and the page edge. Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetMarginBottom() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public float GetMarginBottom() Returns float GetMarginLeft() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public float GetMarginLeft() Returns float GetMarginRight() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public float GetMarginRight() Returns float GetMarginTop() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public float GetMarginTop() Returns float GetPageSizeUnits() Gets the units of measure for the page. public string GetPageSizeUnits() Returns string Returns the units of measure for the page as a string. 'in' = inches, 'mm' = millimeters. GetPaperHeight() Gets the paper height. public float GetPaperHeight() Returns float Returns the paper height in the current page units. GetPaperWidth() Gets the paper width. public float GetPaperWidth() Returns float Returns the paper width in the current page units. SetMargins(float, float, float, float) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetMargins(float left, float top, float right, float bottom) Parameters left float top float right float bottom float SetPageSizeUnits(string) Set the units of measure for the page. public void SetPageSizeUnits(string pageUnits) Parameters pageUnits string (String/string) Units of measure for page. See MgPageUnitsType for valid units. SetPaperHeight(float) Sets the paper height. public void SetPaperHeight(float height) Parameters height float (float) Paper height in the current page units. SetPaperWidth(float) Sets the paper width. public void SetPaperWidth(float width) Parameters width float (float) Paper width in the current page units."
  },
  "api/OSGeo.MapGuide.MgPoint.html": {
    "href": "api/OSGeo.MapGuide.MgPoint.html",
    "title": "Class MgPoint | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPoint Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgPoint is a 0-dimensional geometry and represents a single location in coordinate space. public class MgPoint : MgGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgPoint Implements IDisposable Inherited Members MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Coordinate public MgCoordinate Coordinate { get; } Property Value MgCoordinate Coordinates public MgCoordinateIterator Coordinates { get; } Property Value MgCoordinateIterator Dimension public int Dimension { get; } Property Value int GeometryType public int GeometryType { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinate() Gets the coordinate that defines this point. public MgCoordinate GetCoordinate() Returns MgCoordinate The MgCoordinate that defines this point. GetCoordinates() Returns an iterator over the coordinates included in this geometric entity. public MgCoordinateIterator GetCoordinates() Returns MgCoordinateIterator The coordinates of this geometric entity GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgPointCollection.html": {
    "href": "api/OSGeo.MapGuide.MgPointCollection.html",
    "title": "Class MgPointCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPointCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgPointCollection provides support for defining an ordered set of points. public class MgPointCollection : MgGuardDisposable, IDisposable, IList<MgPoint>, ICollection<MgPoint>, IEnumerable<MgPoint>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgPointCollection Implements IDisposable IList<MgPoint> ICollection<MgPoint> IEnumerable<MgPoint> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPointCollection() Construct a MgPointCollection object public MgPointCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgPoint this[int index] { get; set; } Parameters index int Property Value MgPoint Methods Add(MgPoint) Adds the specified coordinate to the end of the collection. public void Add(MgPoint value) Parameters value MgPoint (MgPoint) point to add to the collection. Clear() Removes all points from the collection. public void Clear() Contains(MgPoint) public virtual bool Contains(MgPoint value) Parameters value MgPoint Returns bool CopyTo(MgPoint[], int) public void CopyTo(MgPoint[] array, int arrayIndex) Parameters array MgPoint[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgPoint> GetEnumerator() Returns IEnumerator<MgPoint> GetItem(int) public virtual MgPoint GetItem(int index) Parameters index int Returns MgPoint IndexOf(MgPoint) public virtual int IndexOf(MgPoint value) Parameters value MgPoint Returns int Insert(int, MgPoint) Inserts the specified point at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgPoint value) Parameters index int (int) Index at which to insert the coordinate. value MgPoint (MgPoint) point to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgPoint) Removes the specified point from the collection. public bool Remove(MgPoint value) Parameters value MgPoint (MgPoint) point reference to remove. Returns bool Returns true if removal was successful. RemoveAt(int) Removes the point at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the point to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgPoint) Sets the point in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgPoint value) Parameters index int (int) Index of the coordinate to set. value MgPoint (MgPoint) point to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgPolygon.html": {
    "href": "api/OSGeo.MapGuide.MgPolygon.html",
    "title": "Class MgPolygon | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPolygon Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll An MgPolygon is a region, defined by 1 exterior boundary and 0 or more interior boundaries. public class MgPolygon : MgRegion, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgRegion MgPolygon Implements IDisposable Inherited Members MgRegion.PointInRegion MgRegion.Coordinates MgRegion.GetPointInRegion() MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.IsSimple() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dimension public int Dimension { get; } Property Value int ExteriorRing public MgLinearRing ExteriorRing { get; } Property Value MgLinearRing GeometryType public int GeometryType { get; } Property Value int InteriorRingCount public int InteriorRingCount { get; } Property Value int Methods Copy() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgGeometricEntity Copy() Returns MgGeometricEntity Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinates() Returns an iterator over the coordinates included in this geometric entity. public MgCoordinateIterator GetCoordinates() Returns MgCoordinateIterator The coordinates of this geometric entity GetDimension() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDimension() Returns int GetExteriorRing() Gets the exterior ring of the polygon. public MgLinearRing GetExteriorRing() Returns MgLinearRing An MgLinearRing that defines the exterior ring of the polygon. GetGeometryType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetGeometryType() Returns int GetInteriorRing(int) Gets the interior ring at the specified index. The indexing starts at zero. public MgLinearRing GetInteriorRing(int index) Parameters index int (int) An integer specifying the location of the interior ring in the collection. Returns MgLinearRing The MgLinearRing at the specified index. GetInteriorRingCount() Gets the number of interior rings in this polygon. public int GetInteriorRingCount() Returns int The number of interior rings. IsClosed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsClosed() Returns bool IsEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsEmpty() Returns bool Transform(MgTransform) Returns a transformed copy of this geometric entity. public MgGeometricEntity Transform(MgTransform transform) Parameters transform MgTransform (MgTransform) The MgTransform to use in constructing a copy of this geometric entity. Returns MgGeometricEntity An MgGeometricEntity that is a copy of this one with each coordinate transformed."
  },
  "api/OSGeo.MapGuide.MgPolygonCollection.html": {
    "href": "api/OSGeo.MapGuide.MgPolygonCollection.html",
    "title": "Class MgPolygonCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPolygonCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgPolygonCollection provides support for defining an ordered set of polygons. public class MgPolygonCollection : MgGuardDisposable, IDisposable, IList<MgPolygon>, ICollection<MgPolygon>, IEnumerable<MgPolygon>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgPolygonCollection Implements IDisposable IList<MgPolygon> ICollection<MgPolygon> IEnumerable<MgPolygon> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPolygonCollection() Construct a MgPolygonCollection object public MgPolygonCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgPolygon this[int index] { get; set; } Parameters index int Property Value MgPolygon Methods Add(MgPolygon) Adds the specified coordinate to the end of the collection. public void Add(MgPolygon value) Parameters value MgPolygon (MgPolygon) polygon to add to the collection. Clear() Removes all polygons from the collection. public void Clear() Contains(MgPolygon) public virtual bool Contains(MgPolygon value) Parameters value MgPolygon Returns bool CopyTo(MgPolygon[], int) public void CopyTo(MgPolygon[] array, int arrayIndex) Parameters array MgPolygon[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public virtual int GetCount() Returns int GetEnumerator() public IEnumerator<MgPolygon> GetEnumerator() Returns IEnumerator<MgPolygon> GetItem(int) public virtual MgPolygon GetItem(int index) Parameters index int Returns MgPolygon IndexOf(MgPolygon) public virtual int IndexOf(MgPolygon value) Parameters value MgPolygon Returns int Insert(int, MgPolygon) Inserts the specified polygon at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. Throws an invalid argument exception if the specified index is out of range. public void Insert(int index, MgPolygon value) Parameters index int (int) Index at which to insert the coordinate. value MgPolygon (MgPolygon) polygon to insert. Exceptions MgException MgIndexOutOfRangeException\"> Remove(MgPolygon) Removes the specified polygon from the collection. public bool Remove(MgPolygon value) Parameters value MgPolygon (MgPolygon) polygon reference to remove. Returns bool Returns true if removal was successful. RemoveAt(int) Removes the polygon at the specified index from the collection. Throws an invalid argument exception if the index does not exist within the collection. public void RemoveAt(int index) Parameters index int (int) Index of the polygon to remove. Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgPolygon) Sets the polygon in the collection at the specified index to the specified value. Throws an invalid argument exception if the index is out of range. public void SetItem(int index, MgPolygon value) Parameters index int (int) Index of the coordinate to set. value MgPolygon (MgPolygon) polygon to place into the collection. Exceptions MgException MgIndexOutOfRangeException\">"
  },
  "api/OSGeo.MapGuide.MgPortableDrawingService.html": {
    "href": "api/OSGeo.MapGuide.MgPortableDrawingService.html",
    "title": "Class MgPortableDrawingService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableDrawingService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableDrawingService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgPortableDrawingService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DescribeDrawing(MgResourceIdentifier) Gets the manifest.xml document which describes the supported document interfaces, the document properties, the sections and their contents, and section dependencies. public MgByteReader DescribeDrawing(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. Returns MgByteReader Returns an MgByteReader object containing the manifest.xml file. Exceptions MgException with code (MgInvalidCastException) if there are problems reading the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnumerateLayers(MgResourceIdentifier, string) Gets the names of the layers in a DWF section. public MgStringCollection EnumerateLayers(MgResourceIdentifier resource, string sectionName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. sectionName string (String/string) Name of the section. Section names can be retrieved via EnumerateSections or from the manifest.xml file via DescribeDrawing. Returns MgStringCollection Returns a collection of layer names. Exceptions MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgInvalidDwfSectionException) if the 2d graphics resource MgException with code (MgNullReferenceException) no data could be read from the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. MgException with code (MgTemporaryFileNotAvailableException) if a temporary file needed EnumerateSectionResources(MgResourceIdentifier, string) Enumerates the resources of a DWF section (sometimes called a sheet). public MgByteReader EnumerateSectionResources(MgResourceIdentifier resource, string sectionName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. sectionName string (String/string) Name of the section. Section names can be retrieved via EnumerateSections or from the manifest.xml file via DescribeDrawing. Returns MgByteReader Returns an MgByteReader object containing the list of Exceptions MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgInvalidDwfSectionException) if the 2d graphics resource MgException with code (MgNullReferenceException) no data could be read from the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. EnumerateSections(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader EnumerateSections(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. Returns MgByteReader Returns an MgByteReader object containing the list of Exceptions MgException with code (MgNullReferenceException) no data could be read from the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. GetCoordinateSpace(MgResourceIdentifier) Gets the coordinate system assigned to the DWF drawing. public string GetCoordinateSpace(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. Returns string Exceptions MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the GetDrawing(MgResourceIdentifier) Returns the DWF stream for a drawing specified by resource identifier. public MgByteReader GetDrawing(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. Returns MgByteReader Returns an MgByteReader object containing the DWF. Exceptions MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the resource content GetLayer(MgResourceIdentifier, string, string) Gets a layer from a particular section of a DWF. public MgByteReader GetLayer(MgResourceIdentifier resource, string sectionName, string layerName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. sectionName string (String/string) Name of the section. Section names can be retrieved via EnumerateSections or from the the manifest.xml file file via DescribeDrawing. layerName string (String/string) Name of the layer. Layer names can can be retrieved via EnumerateLayers. Returns MgByteReader Returns DWF stream containing the specified layer in the specified section. Exceptions MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgInvalidDwfSectionException) if the 2d graphics resource MgException with code (MgNullReferenceException) if data could not be read from MgException with code (MgOutOfMemoryException) if there is insufficient memory to MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgLayerNotFoundException) if the requested layer does not MgException with code (MgDwfException) if the DWF component encounters errors. GetSection(MgResourceIdentifier, string) Gets a DWF containing only the requested section (sometimes called a sheet). public MgByteReader GetSection(MgResourceIdentifier resource, string sectionName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. sectionName string (String/string) Name of the section. Section names can be retrieved via EnumerateSections or from the manifest.xml file via DescribeDrawing. Returns MgByteReader Returns an MgByteReader object containing the DWF for the specified section. Exceptions MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgInvalidDwfSectionException) if the 2d graphics resource MgException with code (MgNullReferenceException) no data could be read from the MgException with code (MgOutOfMemoryException) if there is insufficient memory to MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. MgException with code (MgTemporaryFileNotAvailableException) if a temporary file needed GetSectionResource(MgResourceIdentifier, string) Gets a specific resource from the DWF. public MgByteReader GetSectionResource(MgResourceIdentifier resource, string resourceName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the drawing source which has the DWF resource data. resourceName string (String/string) Name of the resource. Resource names can be retrieved via EnumerateSectionResources or from the manifest.xml file via DescribeDrawing. Returns MgByteReader Returns an MgByteReader object containing the resource. The MIME type will be what is specified in manifest.xml for the specified resource (for example, image/png or text/xml). Exceptions MgException with code (MgInvalidArgumentException) if the requested resourceName MgException with code (MgDwfSectionNotFoundException) if the requested section MgException with code (MgDwfSectionResourceNotFoundException) if the requested MgException with code (MgInvalidCastException) if there are problems reading the MgException with code (MgServiceNotAvailableException) if the underlying resource MgException with code (MgXmlParserException) if there are problems parsing the MgException with code (MgInvalidDwfPackageException) if the DWF specified by the MgException with code (MgDwfException) if the DWF component encounters errors. MgException with code (MgTemporaryFileNotAvailableException) if a temporary file needed"
  },
  "api/OSGeo.MapGuide.MgPortableDwfVersion.html": {
    "href": "api/OSGeo.MapGuide.MgPortableDwfVersion.html",
    "title": "Class MgPortableDwfVersion | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableDwfVersion Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableDwfVersion : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgPortableDwfVersion Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableDwfVersion(string, string) Creates a DWF specification. public MgPortableDwfVersion(string fileVersion, string schemaVersion) Parameters fileVersion string (String/string) Supported client-side DWF file version. schemaVersion string (String/string) Supported client-side DWF schema version. Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetFileVersion() Gets the DWF file version string. public string GetFileVersion() Returns string Returns the DWF file version as a string. GetSchemaVersion() Gets the DWF schema version. public string GetSchemaVersion() Returns string Returns the DWF schema version as a string. SetFileVersion(string) Sets the supported client-side file version for DWF. public void SetFileVersion(string fileVersion) Parameters fileVersion string (String/string) Supported client-side file version of DWF. SetSchemaVersion(string) Sets the supported client-side schema version for DWF. public void SetSchemaVersion(string schemaVersion) Parameters schemaVersion string (String/string) Input supported client-side schema version"
  },
  "api/OSGeo.MapGuide.MgPortableExceptionCodes.html": {
    "href": "api/OSGeo.MapGuide.MgPortableExceptionCodes.html",
    "title": "Class MgPortableExceptionCodes | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableExceptionCodes Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll public class MgPortableExceptionCodes Inheritance object MgPortableExceptionCodes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MgAliasNotFoundException public const string MgAliasNotFoundException = \"MgAliasNotFoundException\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgPortableFeatureInformation.html": {
    "href": "api/OSGeo.MapGuide.MgPortableFeatureInformation.html",
    "title": "Class MgPortableFeatureInformation | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableFeatureInformation Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll Information about features. public class MgPortableFeatureInformation : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgPortableFeatureInformation Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetHyperlink() Get the hyperlink URL text public string GetHyperlink() Returns string GetProperties() Get the collection of properties for the described feature. public MgPropertyCollection GetProperties() Returns MgPropertyCollection GetSelection() Get the selection set the described features are part of. public MgPortableSelection GetSelection() Returns MgPortableSelection GetTooltip() Get the tooltip text. public string GetTooltip() Returns string ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document containing the feature information. public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgPortableFeatureService.html": {
    "href": "api/OSGeo.MapGuide.MgPortableFeatureService.html",
    "title": "Class MgPortableFeatureService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableFeatureService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableFeatureService : MgFeatureService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgFeatureService MgPortableFeatureService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplySchema(MgResourceIdentifier, MgFeatureSchema) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void ApplySchema(MgResourceIdentifier resource, MgFeatureSchema schema) Parameters resource MgResourceIdentifier schema MgFeatureSchema BeginTransaction(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgTransaction BeginTransaction(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns MgTransaction CreateFeatureSource(MgResourceIdentifier, MgFeatureSourceParams) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void CreateFeatureSource(MgResourceIdentifier resource, MgFeatureSourceParams sourceParams) Parameters resource MgResourceIdentifier sourceParams MgFeatureSourceParams DeleteFeatures(MgResourceIdentifier, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int DeleteFeatures(MgResourceIdentifier resource, string className, string filter) Parameters resource MgResourceIdentifier className string filter string Returns int DeleteFeatures(MgResourceIdentifier, string, string, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int DeleteFeatures(MgResourceIdentifier resource, string className, string filter, MgTransaction trans) Parameters resource MgResourceIdentifier className string filter string trans MgTransaction Returns int DescribeSchema(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureSchemaCollection DescribeSchema(MgResourceIdentifier resource, string schemaName) Parameters resource MgResourceIdentifier schemaName string Returns MgFeatureSchemaCollection DescribeSchema(MgResourceIdentifier, string, MgStringCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureSchemaCollection DescribeSchema(MgResourceIdentifier resource, string schemaName, MgStringCollection classNames) Parameters resource MgResourceIdentifier schemaName string classNames MgStringCollection Returns MgFeatureSchemaCollection DescribeSchemaAsXml(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string DescribeSchemaAsXml(MgResourceIdentifier resource, string schemaName) Parameters resource MgResourceIdentifier schemaName string Returns string DescribeSchemaAsXml(MgResourceIdentifier, string, MgStringCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string DescribeSchemaAsXml(MgResourceIdentifier resource, string schemaName, MgStringCollection classNames) Parameters resource MgResourceIdentifier schemaName string classNames MgStringCollection Returns string DescribeWfsFeatureType(MgResourceIdentifier, MgStringCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader DescribeWfsFeatureType(MgResourceIdentifier featureSourceId, MgStringCollection featureClasses) Parameters featureSourceId MgResourceIdentifier featureClasses MgStringCollection Returns MgByteReader DescribeWfsFeatureType(MgResourceIdentifier, MgStringCollection, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader DescribeWfsFeatureType(MgResourceIdentifier featureSourceId, MgStringCollection featureClasses, string namespacePrefix, string namespaceUrl) Parameters featureSourceId MgResourceIdentifier featureClasses MgStringCollection namespacePrefix string namespaceUrl string Returns MgByteReader Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnumerateDataStores(string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader EnumerateDataStores(string providerName, string partialConnString) Parameters providerName string partialConnString string Returns MgByteReader ExecuteSqlNonQuery(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int ExecuteSqlNonQuery(MgResourceIdentifier resource, string sqlNonSelectStatement) Parameters resource MgResourceIdentifier sqlNonSelectStatement string Returns int ExecuteSqlNonQuery(MgResourceIdentifier, string, MgParameterCollection, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int ExecuteSqlNonQuery(MgResourceIdentifier resource, string sqlNonSelectStatement, MgParameterCollection parameters, MgTransaction transaction) Parameters resource MgResourceIdentifier sqlNonSelectStatement string parameters MgParameterCollection transaction MgTransaction Returns int ExecuteSqlQuery(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgSqlDataReader ExecuteSqlQuery(MgResourceIdentifier resource, string sqlStatement) Parameters resource MgResourceIdentifier sqlStatement string Returns MgSqlDataReader ExecuteSqlQuery(MgResourceIdentifier, string, MgParameterCollection, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgSqlDataReader ExecuteSqlQuery(MgResourceIdentifier resource, string sqlStatement, MgParameterCollection parameters, MgTransaction transaction) Parameters resource MgResourceIdentifier sqlStatement string parameters MgParameterCollection transaction MgTransaction Returns MgSqlDataReader GetCapabilities(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetCapabilities(string providerName) Parameters providerName string Returns MgByteReader GetCapabilities(string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetCapabilities(string providerName, string connectionString) Parameters providerName string connectionString string Returns MgByteReader GetClassDefinition(MgResourceIdentifier, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgClassDefinition GetClassDefinition(MgResourceIdentifier resource, string schemaName, string className) Parameters resource MgResourceIdentifier schemaName string className string Returns MgClassDefinition GetClasses(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgStringCollection GetClasses(MgResourceIdentifier resource, string schemaName) Parameters resource MgResourceIdentifier schemaName string Returns MgStringCollection GetConnectionPropertyValues(string, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgStringCollection GetConnectionPropertyValues(string providerName, string propertyName, string partialConnString) Parameters providerName string propertyName string partialConnString string Returns MgStringCollection GetFeatureProviders() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetFeatureProviders() Returns MgByteReader GetLockedFeatures(MgResourceIdentifier, string, MgFeatureQueryOptions) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader GetLockedFeatures(MgResourceIdentifier resource, string className, MgFeatureQueryOptions options) Parameters resource MgResourceIdentifier className string options MgFeatureQueryOptions Returns MgFeatureReader GetLongTransactions(MgResourceIdentifier, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgLongTransactionReader GetLongTransactions(MgResourceIdentifier resource, bool bActiveOnly) Parameters resource MgResourceIdentifier bActiveOnly bool Returns MgLongTransactionReader GetSchemaMapping(string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetSchemaMapping(string providerName, string partialConnString) Parameters providerName string partialConnString string Returns MgByteReader GetSchemas(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgStringCollection GetSchemas(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns MgStringCollection GetSpatialContexts(MgResourceIdentifier, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgSpatialContextReader GetSpatialContexts(MgResourceIdentifier resource, bool bActiveOnly) Parameters resource MgResourceIdentifier bActiveOnly bool Returns MgSpatialContextReader GetWfsFeature(MgResourceIdentifier, string, MgStringCollection, string, string, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetWfsFeature(MgResourceIdentifier featureSourceId, string featureClass, MgStringCollection requiredProperties, string srs, string filter, int maxFeatures) Parameters featureSourceId MgResourceIdentifier featureClass string requiredProperties MgStringCollection srs string filter string maxFeatures int Returns MgByteReader GetWfsFeature(MgResourceIdentifier, string, MgStringCollection, string, string, int, string, string, string, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetWfsFeature(MgResourceIdentifier featureSourceId, string featureClass, MgStringCollection requiredProperties, string srs, string filter, int maxFeatures, string wfsVersion, string outputFormat, string sortCriteria, string namespacePrefix, string namespaceUrl) Parameters featureSourceId MgResourceIdentifier featureClass string requiredProperties MgStringCollection srs string filter string maxFeatures int wfsVersion string outputFormat string sortCriteria string namespacePrefix string namespaceUrl string Returns MgByteReader GetWfsFeatureTotal(MgResourceIdentifier, string, string, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetWfsFeatureTotal(MgResourceIdentifier arg0, string arg1, string arg2, int arg3) Parameters arg0 MgResourceIdentifier arg1 string arg2 string arg3 int Returns int GetWfsReader(MgResourceIdentifier, string, MgStringCollection, string, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader GetWfsReader(MgResourceIdentifier arg0, string arg1, MgStringCollection arg2, string arg3, string arg4, string arg5) Parameters arg0 MgResourceIdentifier arg1 string arg2 MgStringCollection arg3 string arg4 string arg5 string Returns MgFeatureReader InsertFeatures(MgResourceIdentifier, string, MgBatchPropertyCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader InsertFeatures(MgResourceIdentifier resource, string className, MgBatchPropertyCollection batchPropertyValues) Parameters resource MgResourceIdentifier className string batchPropertyValues MgBatchPropertyCollection Returns MgFeatureReader InsertFeatures(MgResourceIdentifier, string, MgBatchPropertyCollection, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader InsertFeatures(MgResourceIdentifier resource, string className, MgBatchPropertyCollection batchPropertyValues, MgTransaction trans) Parameters resource MgResourceIdentifier className string batchPropertyValues MgBatchPropertyCollection trans MgTransaction Returns MgFeatureReader InsertFeatures(MgResourceIdentifier, string, MgPropertyCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader InsertFeatures(MgResourceIdentifier resource, string className, MgPropertyCollection propertyValues) Parameters resource MgResourceIdentifier className string propertyValues MgPropertyCollection Returns MgFeatureReader InsertFeatures(MgResourceIdentifier, string, MgPropertyCollection, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader InsertFeatures(MgResourceIdentifier resource, string className, MgPropertyCollection propertyValues, MgTransaction trans) Parameters resource MgResourceIdentifier className string propertyValues MgPropertyCollection trans MgTransaction Returns MgFeatureReader PurgeCache(MgResourceIdentifier) public void PurgeCache(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier QueryCacheInfo() public MgByteReader QueryCacheInfo() Returns MgByteReader RegisterProvider(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void RegisterProvider(string providerLibraryPath) Parameters providerLibraryPath string SchemaToXml(MgFeatureSchemaCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string SchemaToXml(MgFeatureSchemaCollection schema) Parameters schema MgFeatureSchemaCollection Returns string SelectAggregate(MgResourceIdentifier, string, MgFeatureAggregateOptions) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgDataReader SelectAggregate(MgResourceIdentifier resource, string className, MgFeatureAggregateOptions options) Parameters resource MgResourceIdentifier className string options MgFeatureAggregateOptions Returns MgDataReader SelectFeatures(MgResourceIdentifier, string, MgFeatureQueryOptions) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader SelectFeatures(MgResourceIdentifier resource, string className, MgFeatureQueryOptions options) Parameters resource MgResourceIdentifier className string options MgFeatureQueryOptions Returns MgFeatureReader SelectFeatures(MgResourceIdentifier, string, MgFeatureQueryOptions, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader SelectFeatures(MgResourceIdentifier resource, string className, MgFeatureQueryOptions options, string coordinateSystem) Parameters resource MgResourceIdentifier className string options MgFeatureQueryOptions coordinateSystem string Returns MgFeatureReader SelectFeaturesExtended(MgResourceIdentifier, string, MgFeatureQueryOptions) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableScrollableFeatureReader SelectFeaturesExtended(MgResourceIdentifier resource, string className, MgFeatureQueryOptions options) Parameters resource MgResourceIdentifier className string options MgFeatureQueryOptions Returns MgPortableScrollableFeatureReader SetLongTransaction(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool SetLongTransaction(MgResourceIdentifier featureSourceId, string longTransactionName) Parameters featureSourceId MgResourceIdentifier longTransactionName string Returns bool TestConnection(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool TestConnection(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns bool TestConnection(string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool TestConnection(string providerName, string connectionString) Parameters providerName string connectionString string Returns bool UnregisterProvider(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void UnregisterProvider(string providerName) Parameters providerName string UpdateFeatures(MgResourceIdentifier, MgFeatureCommandCollection, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPropertyCollection UpdateFeatures(MgResourceIdentifier resource, MgFeatureCommandCollection commands, MgTransaction transaction) Parameters resource MgResourceIdentifier commands MgFeatureCommandCollection transaction MgTransaction Returns MgPropertyCollection UpdateFeatures(MgResourceIdentifier, MgFeatureCommandCollection, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPropertyCollection UpdateFeatures(MgResourceIdentifier resource, MgFeatureCommandCollection commands, bool useTransaction) Parameters resource MgResourceIdentifier commands MgFeatureCommandCollection useTransaction bool Returns MgPropertyCollection UpdateMatchingFeatures(MgResourceIdentifier, string, MgPropertyCollection, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int UpdateMatchingFeatures(MgResourceIdentifier resource, string className, MgPropertyCollection propertyValues, string filter) Parameters resource MgResourceIdentifier className string propertyValues MgPropertyCollection filter string Returns int UpdateMatchingFeatures(MgResourceIdentifier, string, MgPropertyCollection, string, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int UpdateMatchingFeatures(MgResourceIdentifier resource, string className, MgPropertyCollection propertyValues, string filter, MgTransaction trans) Parameters resource MgResourceIdentifier className string propertyValues MgPropertyCollection filter string trans MgTransaction Returns int XmlToSchema(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureSchemaCollection XmlToSchema(string xml) Parameters xml string Returns MgFeatureSchemaCollection"
  },
  "api/OSGeo.MapGuide.MgPortableImageFormats.html": {
    "href": "api/OSGeo.MapGuide.MgPortableImageFormats.html",
    "title": "Class MgPortableImageFormats | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableImageFormats Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableImageFormats Inheritance object MgPortableImageFormats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Gif TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Gif = \"GIF\" Field Value string Jpeg TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Jpeg = \"JPG\" Field Value string Png TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Png = \"PNG\" Field Value string Png8 TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Png8 = \"PNG8\" Field Value string Raw TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Raw = \"RAW\" Field Value string Tiff TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Tiff = \"TIF\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgPortableLayer.html": {
    "href": "api/OSGeo.MapGuide.MgPortableLayer.html",
    "title": "Class MgPortableLayer | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableLayer Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableLayer : MgLayerBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgLayerBase MgPortableLayer Implements IDisposable Inherited Members MgLayerBase.Name MgLayerBase.LayerType MgLayerBase.Group MgLayerBase.Visible MgLayerBase.Selectable MgLayerBase.LayerDefinition MgLayerBase.DisplayInLegend MgLayerBase.ExpandInLegend MgLayerBase.LegendLabel MgLayerBase.FeatureSourceId MgLayerBase.FeatureClassName MgLayerBase.Filter MgLayerBase.FeatureGeometryName MgLayerBase.GetName() MgLayerBase.SetName(string) MgLayerBase.GetObjectId() MgLayerBase.GetLayerType() MgLayerBase.GetGroup() MgLayerBase.SetGroup(MgLayerGroup) MgLayerBase.NeedsRefresh() MgLayerBase.ForceRefresh() MgLayerBase.GetVisible() MgLayerBase.SetVisible(bool) MgLayerBase.IsVisible() MgLayerBase.GetSelectable() MgLayerBase.SetSelectable(bool) MgLayerBase.GetLayerDefinition() MgLayerBase.SetLayerDefinition(MgResourceIdentifier, MgResourceService) MgLayerBase.GetDisplayInLegend() MgLayerBase.SetDisplayInLegend(bool) MgLayerBase.GetExpandInLegend() MgLayerBase.GetLegendLabel() MgLayerBase.SetLegendLabel(string) MgLayerBase.GetFeatureSourceId() MgLayerBase.GetFeatureClassName() MgLayerBase.GetFilter() MgLayerBase.GetFeatureGeometryName() MgLayerBase.SelectFeatures(MgFeatureQueryOptions, string) MgLayerBase.InsertFeatures(MgBatchPropertyCollection, MgTransaction) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableLayer(MgResourceIdentifier, MgResourceService) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableLayer(MgResourceIdentifier layerDefinition, MgResourceService resourceService) Parameters layerDefinition MgResourceIdentifier resourceService MgResourceService Methods BeginTransaction() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgTransaction BeginTransaction() Returns MgTransaction DeleteFeatures(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int DeleteFeatures(string filter) Parameters filter string Returns int DeleteFeatures(string, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int DeleteFeatures(string filter, MgTransaction trans) Parameters filter string trans MgTransaction Returns int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GenerateLegendImage(double, int, int, string, int, int) Returns the legend image for the specified geometry type and theme category public MgByteReader GenerateLegendImage(double scale, int width, int height, string format, int geomType, int themeCategory) Parameters scale double (double) Input The scale at which the symbolization is requested. width int (int) Input The requested image width in pixels. height int (int) Input The requested image height in pixels. format string (String/string) Input Image format, from OSGeo.MapGuide.MgImageFormats. Example: PNG, JPG, PNG8, etc geomType int (int) Input The type of symbolization required: 1=Point, 2=Line, 3=Area, 4=Composite themeCategory int (int) Input The value indicating which theme category swatch to return. Used when there is a theme defined at this scale. An exception will be thrown if a requested them category doesn&apos;t exist. Returns MgByteReader Returns a stream representing the legend image. The default returned image format will be PNG8 unless a different supported format is requested. An exception will be thrown if an unsupported image format is requested. Exceptions MgException MgArgumentOutOfRangeException\"> MgException MgInvalidResourceTypeException\"> MgException MgNullArgumentException\"> MgException MgInvalidImageFormatException\"> GenerateLegendImage(int, int, string, int, int) Returns the legend image for the specified geometry type and theme category public MgByteReader GenerateLegendImage(int width, int height, string format, int geomType, int themeCategory) Parameters width int (int) Input The requested image width in pixels. height int (int) Input The requested image height in pixels. format string (String/string) Input Image format, from OSGeo.MapGuide.MgImageFormats. Example: PNG, JPG, PNG8, etc geomType int (int) Input The type of symbolization required: 1=Point, 2=Line, 3=Area, 4=Composite themeCategory int (int) Input The value indicating which theme category swatch to return. Used when there is a theme defined at this scale. An exception will be thrown if a requested them category doesn&apos;t exist. Returns MgByteReader Returns a stream representing the legend image. The default returned image format will be PNG8 unless a different supported format is requested. An exception will be thrown if an unsupported image format is requested. Exceptions MgException MgArgumentOutOfRangeException\"> MgException MgInvalidResourceTypeException\"> MgException MgNullArgumentException\"> MgException MgInvalidImageFormatException\"> GetClassDefinition() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgClassDefinition GetClassDefinition() Returns MgClassDefinition GetCompositeThemeCategoryCount(double, int) Gets the number of composite theme categories for this layer at the map's current scale for the given composite style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale public int GetCompositeThemeCategoryCount(double scale, int compositeOffset) Parameters scale double (double) The scale at which to count the number of applicable theme categories compositeOffset int (int) The zero-based index denoting the particular composite style to count from. 0 = 1st composite style, 1 = 2nd composite style Returns int The number of theme categories for this layer at the map's current scale for the given composite style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale GetCompositeThemeCategoryCount(int) Gets the number of composite theme categories for this layer at the map's current scale for the given composite style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale public int GetCompositeThemeCategoryCount(int compositeOffset) Parameters compositeOffset int (int) The zero-based index denoting the particular composite style to count from. 0 = 1st composite style, 1 = 2nd composite style Returns int The number of theme categories for this layer at the map's current scale for the given composite style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale GetGeometryTypeStyles() Gets the list of geometry type styles for this layer at the map's current scale. Returns NULL if there are no applicable geometry types public MgIntCollection GetGeometryTypeStyles() Returns MgIntCollection The list of geometry type styles for this layer at the map's current scale. Returns NULL if there are no applicable geometry types GetGeometryTypeStyles(double) Gets the list of geometry type styles for this layer at the map's current scale. Returns NULL if there are no applicable geometry types public MgIntCollection GetGeometryTypeStyles(double scale) Parameters scale double (double) The scale at which to retrive the list of applicable geometry types Returns MgIntCollection The list of geometry type styles for this layer at the map's current scale. Returns NULL if there are no applicable geometry types GetSpatialContexts(bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgSpatialContextReader GetSpatialContexts(bool active) Parameters active bool Returns MgSpatialContextReader GetThemeCategoryCount(double, int) Gets the number of theme categories for this layer at the map's current scale for the given geometry type style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale public int GetThemeCategoryCount(double scale, int geomType) Parameters scale double (double) The scale at which to count the number of applicable theme categories geomType int (int) The geometry type Returns int The number of theme categories for this layer at the map's current scale for the given geometry type style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale GetThemeCategoryCount(int) Gets the number of theme categories for this layer at the map's current scale for the given geometry type style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale public int GetThemeCategoryCount(int geomType) Parameters geomType int (int) The geometry type Returns int The number of theme categories for this layer at the map's current scale for the given geometry type style. A count greater than 1 indicates a themed layer. Returns -1 if there are no applicable styles at the current scale HasTooltips() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool HasTooltips() Returns bool InsertFeatures(MgPropertyCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader InsertFeatures(MgPropertyCollection propertyValues) Parameters propertyValues MgPropertyCollection Returns MgFeatureReader InsertFeatures(MgPropertyCollection, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader InsertFeatures(MgPropertyCollection propertyValues, MgTransaction trans) Parameters propertyValues MgPropertyCollection trans MgTransaction Returns MgFeatureReader IsPotentiallyVisibleAtScale(double, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsPotentiallyVisibleAtScale(double scale, bool bConsiderParentGroupVisibility) Parameters scale double bConsiderParentGroupVisibility bool Returns bool SelectAggregate(MgFeatureAggregateOptions) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgDataReader SelectAggregate(MgFeatureAggregateOptions options) Parameters options MgFeatureAggregateOptions Returns MgDataReader SelectFeatures(MgFeatureQueryOptions) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader SelectFeatures(MgFeatureQueryOptions options) Parameters options MgFeatureQueryOptions Returns MgFeatureReader SelectFeaturesExtended(MgFeatureQueryOptions) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableScrollableFeatureReader SelectFeaturesExtended(MgFeatureQueryOptions options) Parameters options MgFeatureQueryOptions Returns MgPortableScrollableFeatureReader UpdateFeatures(MgFeatureCommandCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPropertyCollection UpdateFeatures(MgFeatureCommandCollection commands) Parameters commands MgFeatureCommandCollection Returns MgPropertyCollection UpdateFeatures(MgFeatureCommandCollection, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPropertyCollection UpdateFeatures(MgFeatureCommandCollection commands, MgTransaction trans) Parameters commands MgFeatureCommandCollection trans MgTransaction Returns MgPropertyCollection UpdateMatchingFeatures(MgPropertyCollection, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int UpdateMatchingFeatures(MgPropertyCollection propertyValues, string filter) Parameters propertyValues MgPropertyCollection filter string Returns int UpdateMatchingFeatures(MgPropertyCollection, string, MgTransaction) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int UpdateMatchingFeatures(MgPropertyCollection propertyValues, string filter, MgTransaction trans) Parameters propertyValues MgPropertyCollection filter string trans MgTransaction Returns int"
  },
  "api/OSGeo.MapGuide.MgPortableLayout.html": {
    "href": "api/OSGeo.MapGuide.MgPortableLayout.html",
    "title": "Class MgPortableLayout | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableLayout Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll Specifies the ResourceId of the PrintLayout to use for a particular map, the title and the type of units to use in the layout. public class MgPortableLayout : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgPortableLayout Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableLayout(MgResourceIdentifier, string, string) Initializes a new MgPortableLayout object given a layout definition, title and unit type. public MgPortableLayout(MgResourceIdentifier layoutDefinition, string title, string unitType) Parameters layoutDefinition MgResourceIdentifier (MgResourceIdentifier) An MgResourceIdentifier that specifies the location of the print layout definition in a resource repository. title string (String/string) The title to use in the print layout unitType string (String/string) The type of units to use in the print layout Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetLayout() Get the Layout to use when generating the EPlot DWF. If not specified, then the plotted map will fill the space within the page margins. public MgResourceIdentifier GetLayout() Returns MgResourceIdentifier The resource identifier for the layout definition. GetTitle() Gets the layout title. public string GetTitle() Returns string Returns the title for the plot. GetUnitType() Gets the layout scale units (US/English or metric units). This value determines the units used in the scale bar definition. This value is ignored if a layout is not specified. public string GetUnitType() Returns string The layout scale units. SetLayout(MgResourceIdentifier) Set the Layout to use when generating the EPlot DWF. If not specified, then the plotted map will fill the space within the page margins. public void SetLayout(MgResourceIdentifier plotLayout) Parameters plotLayout MgResourceIdentifier (MgResourceIdentifier) An MgResourceIdentifier that specifies the location of the print layout definition in a resource repository. SetTitle(string) Sets the layout title. public void SetTitle(string title) Parameters title string (String/string) The title for the layout. SetUnitType(string) Gets the layout scale units (US/English or metric units). This value determines the units used in the scale bar definition. This value is ignored if a layout is not specified. public void SetUnitType(string unitType) Parameters unitType string (String/string) The layout scale units"
  },
  "api/OSGeo.MapGuide.MgPortableMap.WatermarkUsageType.html": {
    "href": "api/OSGeo.MapGuide.MgPortableMap.WatermarkUsageType.html",
    "title": "Enum MgPortableMap.WatermarkUsageType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Enum MgPortableMap.WatermarkUsageType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll public enum MgPortableMap.WatermarkUsageType Fields Viewer = 2 WMS = 1"
  },
  "api/OSGeo.MapGuide.MgPortableMap.html": {
    "href": "api/OSGeo.MapGuide.MgPortableMap.html",
    "title": "Class MgPortableMap | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableMap Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableMap : MgMapBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgResource MgMapBase MgPortableMap Implements IDisposable Inherited Members MgMapBase.Name MgMapBase.SessionId MgMapBase.MapDefinition MgMapBase.MapSRS MgMapBase.MapExtent MgMapBase.ViewCenter MgMapBase.ViewScale MgMapBase.DataExtent MgMapBase.DisplayDpi MgMapBase.DisplayWidth MgMapBase.DisplayHeight MgMapBase.FiniteDisplayScaleCount MgMapBase.GetName() MgMapBase.GetSessionId() MgMapBase.GetObjectId() MgMapBase.GetMapDefinition() MgMapBase.GetMapSRS() MgMapBase.GetMapExtent() MgMapBase.GetLayers() MgMapBase.GetLayerGroups() MgMapBase.GetViewCenter() MgMapBase.GetViewScale() MgMapBase.GetDataExtent() MgMapBase.GetDisplayDpi() MgMapBase.SetDisplayDpi(int) MgMapBase.GetDisplayWidth() MgMapBase.GetDisplayHeight() MgMapBase.GetFiniteDisplayScaleCount() MgMapBase.GetFiniteDisplayScaleAt(int) MgMapBase.GetBackgroundColor() MgResource.GetResourceId() MgResource.Open(MgResourceService, MgResourceIdentifier) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableMap(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableMap(MgResourceIdentifier mapDefinition) Parameters mapDefinition MgResourceIdentifier MgPortableMap(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableMap(MgResourceIdentifier mapDefinition, string mapName) Parameters mapDefinition MgResourceIdentifier mapName string Methods Create(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Create(MgResourceIdentifier mapDefinition, string mapName) Parameters mapDefinition MgResourceIdentifier mapName string Create(MgResourceService, MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Create(MgResourceService resourceService, MgResourceIdentifier mapDefinition, string mapName) Parameters resourceService MgResourceService mapDefinition MgResourceIdentifier mapName string Create(string, MgEnvelope, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Create(string mapSRS, MgEnvelope mapExtent, string mapName) Parameters mapSRS string mapExtent MgEnvelope mapName string Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetMetersPerUnit() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetMetersPerUnit() Returns double GetWatermarkUsage() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetWatermarkUsage() Returns int GotoView(double, double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void GotoView(double x, double y, double scale) Parameters x double y double scale double MakeGroupNormal(MgLayerGroup) public void MakeGroupNormal(MgLayerGroup group) Parameters group MgLayerGroup Open(MgResourceService, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Open(MgResourceService resourceService, string mapName) Parameters resourceService MgResourceService mapName string Open(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Open(string mapName) Parameters mapName string Save() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Save() Save(MgResourceService) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Save(MgResourceService resourceService) Parameters resourceService MgResourceService Save(MgResourceService, MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Save(MgResourceService resourceService, MgResourceIdentifier resourceId) Parameters resourceService MgResourceService resourceId MgResourceIdentifier SetDisplaySize(int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetDisplaySize(int width, int height) Parameters width int height int SetDpi(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetDpi(int dpi) Parameters dpi int SetGroupExpandInLegend(MgLayerGroup, bool) public static void SetGroupExpandInLegend(MgLayerGroup group, bool bExpand) Parameters group MgLayerGroup bExpand bool SetLayerExpandInLegend(MgLayerBase, bool) public static void SetLayerExpandInLegend(MgLayerBase layer, bool bExpand) Parameters layer MgLayerBase bExpand bool SetLayerGroupType(MgLayerGroup, int) public static void SetLayerGroupType(MgLayerGroup group, int type) Parameters group MgLayerGroup type int SetViewCenterXY(double, double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetViewCenterXY(double x, double y) Parameters x double y double SetViewScale(double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetViewScale(double scale) Parameters scale double"
  },
  "api/OSGeo.MapGuide.MgPortableMapPlot.html": {
    "href": "api/OSGeo.MapGuide.MgPortableMapPlot.html",
    "title": "Class MgPortableMapPlot | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableMapPlot Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll The MgPortableMapPlot class allows the developer to specify the map, the view of the map, the plot specification, and the layout for one sheet within a call to GenerateMultiPlot. public class MgPortableMapPlot : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgPortableMapPlot Implements IDisposable Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableMapPlot(MgPortableMap, MgCoordinate, double, MgPortablePlotSpecification, MgPortableLayout) Create and initialize an MgPortableMapPlot instance using the specified center and scale. Sets the MapPlotInstruction value appropriately. public MgPortableMapPlot(MgPortableMap map, MgCoordinate center, double scale, MgPortablePlotSpecification plotSpec, MgPortableLayout layout) Parameters map MgPortableMap center MgCoordinate scale double plotSpec MgPortablePlotSpecification layout MgPortableLayout MgPortableMapPlot(MgPortableMap, MgEnvelope, bool, MgPortablePlotSpecification, MgPortableLayout) Create and initialize an MgPortableMapPlot instance using the specified extents Sets the MapPlotInstruction value appropriately. public MgPortableMapPlot(MgPortableMap map, MgEnvelope extent, bool expandToFit, MgPortablePlotSpecification plotSpec, MgPortableLayout layout) Parameters map MgPortableMap extent MgEnvelope expandToFit bool plotSpec MgPortablePlotSpecification layout MgPortableLayout MgPortableMapPlot(MgPortableMap, MgPortablePlotSpecification, MgPortableLayout) Create and initialize an MgPortableMapPlot instance using the map center and scale. Sets the MapPlotInstruction value appropriately. public MgPortableMapPlot(MgPortableMap map, MgPortablePlotSpecification plotSpec, MgPortableLayout layout) Parameters map MgPortableMap plotSpec MgPortablePlotSpecification layout MgPortableLayout Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCenter() Get view center public MgCoordinate GetCenter() Returns MgCoordinate The coordinates of the center of the view of map GetExpandToFit() Gets flag indicating whether extents of the view of the map should be expanded to fill the space within the page margins. public bool GetExpandToFit() Returns bool The expand to fit flag. GetExtent() Get extents of the view of the map. public MgEnvelope GetExtent() Returns MgEnvelope The extents of the view of the map. GetLayout() Get the layout. This value is optional; if null the map will fill the entire page area within the margins. public MgPortableLayout GetLayout() Returns MgPortableLayout The MgPortableLayout. GetMap() Get the MgPortableMap object to plot. public MgPortableMap GetMap() Returns MgPortableMap The MgPortableMap object. GetMapPlotInstruction() Get the MapPlotInstruction, which defines how the view of the map to be plotted is defined. public int GetMapPlotInstruction() Returns int The MapPlotInstruction value. GetPlotSpecification() Gets the plot specification. public MgPortablePlotSpecification GetPlotSpecification() Returns MgPortablePlotSpecification The MgPortablePlotSpecification. GetScale() Get view scale public double GetScale() Returns double The scale of the view of map SetCenterAndScale(MgCoordinate, double) Set the view center and scale of the map. public void SetCenterAndScale(MgCoordinate center, double scale) Parameters center MgCoordinate (MgCoordinate) The coordinates of the center of the view of the map. scale double (double) The scale of the view of the map. SetExtent(MgEnvelope, bool) Set the extents of the map. public void SetExtent(MgEnvelope extent, bool expandToFit) Parameters extent MgEnvelope (MgEnvelope) The extents of the map. expandToFit bool (boolean/bool) Flag indicating whether the extents should be expanded to fill the space within the page margins. SetLayout(MgPortableLayout) Set the layout. public void SetLayout(MgPortableLayout layout) Parameters layout MgPortableLayout (MgPortableLayout) The object defining the layout for the plot. SetMap(MgPortableMap) Set the MgPortableMap object to plot. public void SetMap(MgPortableMap map) Parameters map MgPortableMap (MgPortableMap) The MgPortableMap object to plot. SetMapPlotInstruction(int) Set the MapPlotInstruction, which defines how the view of the map to be plotted is defined. public void SetMapPlotInstruction(int plotInstruction) Parameters plotInstruction int (int) The enumeration value defining how the view of the map is defined. SetPlotSpecification(MgPortablePlotSpecification) Set the plot specification. public void SetPlotSpecification(MgPortablePlotSpecification plotSpec) Parameters plotSpec MgPortablePlotSpecification (MgPortablePlotSpecification) The plot specification."
  },
  "api/OSGeo.MapGuide.MgPortableMapPlotCollection.html": {
    "href": "api/OSGeo.MapGuide.MgPortableMapPlotCollection.html",
    "title": "Class MgPortableMapPlotCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableMapPlotCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll Manipulates collections of MgPortableMapPlot objects. public class MgPortableMapPlotCollection : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgPortableMapPlotCollection Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableMapPlotCollection() Constructs an empty MgPortableMapPlotCollection object. public MgPortableMapPlotCollection() Methods Add(MgPortableMapPlot) Adds the specified MapPlot to the end of the collection. public void Add(MgPortableMapPlot value) Parameters value MgPortableMapPlot (MgPortableMapPlot) MgPortableMapPlot to be added to the collection. Clear() Removes all MapPlots from the collection. public void Clear() Contains(MgPortableMapPlot) Determines if the collection contains the specified MapPlot. public bool Contains(MgPortableMapPlot value) Parameters value MgPortableMapPlot (MgPortableMapPlot) The MgPortableMapPlot to look for. Returns bool Returns true if the collection contains the specified MapPlot, or false otherwise. Contains(string) Determines if the collection contains the specified MapPlot. public bool Contains(string name) Parameters name string (String/string) Name of the MapPlot. Returns bool Returns true if the collection contains the specified map, or false otherwise. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the number of MapPlots in the collection. public int GetCount() Returns int Returns the number of MapPlots. GetItem(int) Gets the MapPlot at the specified index. public MgPortableMapPlot GetItem(int index) Parameters index int (int) Index of the map to get. Returns MgPortableMapPlot Returns the specified MgPortableMapPlot object. Exceptions MgException with code (MgOutOfRangeException) if the index is invalid. GetItem(string) Gets the MapPlot with the specified name. public MgPortableMapPlot GetItem(string name) Parameters name string (String/string) Name of the MapPlot to get. Returns MgPortableMapPlot Returns the specified MgPortableMapPlot object. Exceptions MgException with code (MgInvalidArgumentException) if the name does not exist in IndexOf(MgPortableMapPlot) Gets the index of the specified MapPlot in the collection. public int IndexOf(MgPortableMapPlot value) Parameters value MgPortableMapPlot (MgPortableMapPlot) Value of the item to get the index of. Returns int Returns the MapPlot's index if the collection contains the specified MapPlot, or false (-1) otherwise. IndexOf(string) Gets the index of the specified MapPlot in the collection. public int IndexOf(string name) Parameters name string (String/string) Name of the MapPlot to get the index of. Returns int Returns the MapPlot's index if the collection contains the specified MapPlot, or false (-1) otherwise. Insert(int, MgPortableMapPlot) Inserts a MapPlot at a specified index within the collection. public void Insert(int index, MgPortableMapPlot value) Parameters index int (int) Position in the collection to insert the MgPortableMapPlot. value MgPortableMapPlot (MgPortableMapPlot) MgPortableMapPlot to be inserted in the collection. Exceptions MgException with code (MgOutOfRangeException) if the specified index is out of Remove(MgPortableMapPlot) Removes a MapPlot from the collection. public bool Remove(MgPortableMapPlot value) Parameters value MgPortableMapPlot (MgPortableMapPlot) MgPortableMapPlot to be removed Returns bool Returns true if removal was successful. RemoveAt(int) Removes a MapPlot from the collection at the specified index. public void RemoveAt(int index) Parameters index int (int) Index of the map to be removed. Exceptions MgException with code (MgOutOfRangeException) if the MapPlot does not exist in the SetItem(int, MgPortableMapPlot) Sets the MapPlot in the collection at the specified index to a specified value. public void SetItem(int index, MgPortableMapPlot value) Parameters index int (int) Position in the collection to set the OSGeo.MapGuide.MgMapPot. value MgPortableMapPlot (MgPortableMapPlot) MgPortableMapPlot to be set in the collection. Exceptions MgException with code (MgOutOfRangeException) if the index is out of range."
  },
  "api/OSGeo.MapGuide.MgPortableMapPlotInstruction.html": {
    "href": "api/OSGeo.MapGuide.MgPortableMapPlotInstruction.html",
    "title": "Class MgPortableMapPlotInstruction | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableMapPlotInstruction Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll MgPortableMapPlotInstruction defines enumerated values used to indicate whether the plot should be based on the center and scale of the map, an overridden center and scale, or an overridden extent. public class MgPortableMapPlotInstruction Inheritance object MgPortableMapPlotInstruction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields UseMapCenterAndScale Specifies the plot should use the center and scale of the map public const int UseMapCenterAndScale = 0 Field Value int UseOverriddenCenterAndScale Specifies the plot should use the overridden center and scale of the map public const int UseOverriddenCenterAndScale = 1 Field Value int UseOverriddenExtent Specifies the plot should use the overridden extent public const int UseOverriddenExtent = 2 Field Value int"
  },
  "api/OSGeo.MapGuide.MgPortableMappingService.html": {
    "href": "api/OSGeo.MapGuide.MgPortableMappingService.html",
    "title": "Class MgPortableMappingService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableMappingService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll Performs map related operations such as getting an eMap DWF representing a map or updates to a map, or querying features from maps or layers of a map. public class MgPortableMappingService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgPortableMappingService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GenerateLegendImage(MgResourceIdentifier, double, int, int, string, int, int) GenerateLegendImage() returns the legend image for the specified layer. public MgByteReader GenerateLegendImage(MgResourceIdentifier resource, double scale, int width, int height, string format, int geomType, int themeCategory) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Input MgResourceIdentifier object identifying the layer definition resource. scale double (double) Input The scale at which the symbolization is requested. width int (int) Input The requested image width in pixels. height int (int) Input The requested image height in pixels. format string (String/string) Input Image format, from OSGeo.MapGuide.MgImageFormats. Example: PNG, JPG, PNG8, etc geomType int (int) Input The type of symbolization required: 1=Point, 2=Line, 3=Area, 4=Composite themeCategory int (int) Input The value indicating which theme category swatch to return. Used when there is a theme defined at this scale. An exception will be thrown if a requested them category doesn&apos;t exist. Returns MgByteReader Returns a stream representing the legend image. The default returned image format will be PNG8 unless a different supported format is requested. An exception will be thrown if an unsupported image format is requested. Exceptions MgException MgArgumentOutOfRangeException\"> MgException MgInvalidResourceTypeException\"> MgException MgNullArgumentException\"> MgException MgInvalidImageFormatException\"> GenerateMultiPlot(MgPortableMapPlotCollection, MgPortableDwfVersion) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GenerateMultiPlot(MgPortableMapPlotCollection mapPlots, MgPortableDwfVersion dwfVersion) Parameters mapPlots MgPortableMapPlotCollection (MgPortableMapPlotCollection) A collection of MapPlot objects. dwfVersion MgPortableDwfVersion (MgPortableDwfVersion) DWF specification required by the client. This determines the schema and file versions used to generate the DWFs sent back to the client. Returns MgByteReader Returns an MgByteReader object containing a DWF in ePlot format with multiple sheets, one for each map. Exceptions MgException MgNullArgumentException\"> GeneratePlot(MgPortableMap, MgCoordinate, double, MgPortablePlotSpecification, MgPortableLayout, MgPortableDwfVersion) Plot the map to an EPlot DWF using the specified center and scale. The extents will be computed to fill the space within the page margins. If the layout paramter is null, no adornments will be added to the page. public MgByteReader GeneratePlot(MgPortableMap map, MgCoordinate center, double scale, MgPortablePlotSpecification plotSpec, MgPortableLayout layout, MgPortableDwfVersion dwfVersion) Parameters map MgPortableMap (MgPortableMap) Map object describing current state of map. center MgCoordinate (MgCoordinate) The coordinates of the center of the map for the plot. scale double (double) The scale to use for the plot. plotSpec MgPortablePlotSpecification (MgPortablePlotSpecification) Plotting specifications for the generated plot. layout MgPortableLayout (MgPortableLayout) Layout specifications to use for the generated plot. dwfVersion MgPortableDwfVersion (MgPortableDwfVersion) DWF version required by the client. This determines the schema and file versions used to generate the DWFs sent back to the client. Returns MgByteReader Returns an MgByteReader object containing a DWF in ePlot format. Exceptions MgException MgNullArgumentException\"> GeneratePlot(MgPortableMap, MgEnvelope, bool, MgPortablePlotSpecification, MgPortableLayout, MgPortableDwfVersion) Plot the map to an EPlot DWF using the extent specified in the mapping coordinate space. The center and scale will be computed based on the extent specified. If expandToFit is true, then the extent specified will be expanded in the X or Y direction to fill the space within the page margins. If the layout paramter is null, no adornments will be added to the page. public MgByteReader GeneratePlot(MgPortableMap map, MgEnvelope extents, bool expandToFit, MgPortablePlotSpecification plotSpec, MgPortableLayout layout, MgPortableDwfVersion dwfVersion) Parameters map MgPortableMap (MgPortableMap) Map object describing current state of map. extents MgEnvelope (MgEnvelope) The extents of the map to be plotted.. expandToFit bool (boolean/bool) Flag indicating whether the extents should be expanded to fill the space withing the page margins. plotSpec MgPortablePlotSpecification (MgPortablePlotSpecification) Plotting specifications for the generated plot. layout MgPortableLayout (MgPortableLayout) Layout specifications to use for the generated plot. dwfVersion MgPortableDwfVersion (MgPortableDwfVersion) DWF version required by the client. This determines the schema and file versions used to generate the DWFs sent back to the client. Returns MgByteReader Returns an MgByteReader object containing a DWF in ePlot format. Exceptions MgException MgNullArgumentException\"> GeneratePlot(MgPortableMap, MgPortablePlotSpecification, MgPortableLayout, MgPortableDwfVersion) Plot The map to an EPlot DWF using the center and scale from the map. The extents will be computed to fill the space within the page margins. If the layout paramter is null, no adornments will be added to the page. public MgByteReader GeneratePlot(MgPortableMap map, MgPortablePlotSpecification plotSpec, MgPortableLayout layout, MgPortableDwfVersion dwfVersion) Parameters map MgPortableMap (MgPortableMap) Map object describing current state of map. plotSpec MgPortablePlotSpecification (MgPortablePlotSpecification) Plotting specifications for the generated plot. layout MgPortableLayout (MgPortableLayout) Layout specifications to use for the generated plot. dwfVersion MgPortableDwfVersion (MgPortableDwfVersion) DWF version required by the client. This determines the schema and file versions used to generate the DWFs sent back to the client. Returns MgByteReader Returns an MgByteReader object containing a DWF in ePlot format. Exceptions MgException MgNullArgumentException\">"
  },
  "api/OSGeo.MapGuide.MgPortablePageUnitsType.html": {
    "href": "api/OSGeo.MapGuide.MgPortablePageUnitsType.html",
    "title": "Class MgPortablePageUnitsType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortablePageUnitsType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll Defines page size units for the Mapping Service. public class MgPortablePageUnitsType Inheritance object MgPortablePageUnitsType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Inches TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Inches = \"in\" Field Value string Millimeters TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Millimeters = \"mm\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgPortablePlatform.html": {
    "href": "api/OSGeo.MapGuide.MgPortablePlatform.html",
    "title": "Class MgPortablePlatform | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortablePlatform Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll A static utility class that provides the means for initializing and tearing down the MapGuide Platform. You must initialize the platform before you can use any service classes or the Coordinate System API. public class MgPortablePlatform : IDisposable Inheritance object MgPortablePlatform Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields swigCMemOwn protected bool swigCMemOwn Field Value bool Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~MgPortablePlatform() protected ~MgPortablePlatform() Initialize(string) Initializes the MapGuide Portable Platform. This must be called at least once before using any service classes in the MapGuide API. Subsequent calls will do nothing. public static void Initialize(string configFile) Parameters configFile string (String/string) The path to the MapGuide Portable Platform configuration file (Platform.ini) IsInitialized() Gets whether the the MapGuide Portable Platform has been initialized. You cannot use most MapGuide service classes until the platform has been initialized. Call MgPortablePlatform::Initialize(CREFSTRING) to initialize the platform. public static bool IsInitialized() Returns bool true if the platform has been initialized. Terminate() Performs cleanup of the MapGuide Portable Platform. This should be called as part of your application's cleanup or exit routine. You should not use any other classes in the MapGuide API after completing this call. public static void Terminate()"
  },
  "api/OSGeo.MapGuide.MgPortablePlotSpecification.html": {
    "href": "api/OSGeo.MapGuide.MgPortablePlotSpecification.html",
    "title": "Class MgPortablePlotSpecification | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortablePlotSpecification Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortablePlotSpecification : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgPortablePlotSpecification Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortablePlotSpecification(float, float, string) Specifications for the plot. public MgPortablePlotSpecification(float paperWidth, float paperHeight, string pageUnits) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPortablePageUnitsType for valid units of measure MgPortablePlotSpecification(float, float, string, float) Specifications for the plot. public MgPortablePlotSpecification(float paperWidth, float paperHeight, string pageUnits, float left) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPortablePageUnitsType for valid units of measure left float (float) Input The left margin between the plot and the page edge. MgPortablePlotSpecification(float, float, string, float, float) Specifications for the plot. public MgPortablePlotSpecification(float paperWidth, float paperHeight, string pageUnits, float left, float top) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPortablePageUnitsType for valid units of measure left float (float) Input The left margin between the plot and the page edge. top float (float) Input The top margin between the plot and the page edge. MgPortablePlotSpecification(float, float, string, float, float, float) Specifications for the plot. public MgPortablePlotSpecification(float paperWidth, float paperHeight, string pageUnits, float left, float top, float right) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPortablePageUnitsType for valid units of measure left float (float) Input The left margin between the plot and the page edge. top float (float) Input The top margin between the plot and the page edge. right float (float) Input The right margin between the plot and the page edge. MgPortablePlotSpecification(float, float, string, float, float, float, float) Specifications for the plot. public MgPortablePlotSpecification(float paperWidth, float paperHeight, string pageUnits, float left, float top, float right, float bottom) Parameters paperWidth float (float) Input paper width in page units paperHeight float (float) Input paper height in page units pageUnits string (String/string) Input units for page size. See MgPortablePageUnitsType for valid units of measure left float (float) Input The left margin between the plot and the page edge. top float (float) Input The top margin between the plot and the page edge. right float (float) Input The right margin between the plot and the page edge. bottom float (float) Input The bottom margin between the plot and the page edge. Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetMarginBottom() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public float GetMarginBottom() Returns float GetMarginLeft() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public float GetMarginLeft() Returns float GetMarginRight() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public float GetMarginRight() Returns float GetMarginTop() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public float GetMarginTop() Returns float GetPageSizeUnits() Gets the units of measure for the page. public string GetPageSizeUnits() Returns string Returns the units of measure for the page as a string. 'in' = inches, 'mm' = millimeters. GetPaperHeight() Gets the paper height. public float GetPaperHeight() Returns float Returns the paper height in the current page units. GetPaperWidth() Gets the paper width. public float GetPaperWidth() Returns float Returns the paper width in the current page units. SetMargins(float, float, float, float) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetMargins(float left, float top, float right, float bottom) Parameters left float top float right float bottom float SetPageSizeUnits(string) Set the units of measure for the page. public void SetPageSizeUnits(string pageUnits) Parameters pageUnits string (String/string) Units of measure for page. See MgPortablePageUnitsType for valid units. SetPaperHeight(float) Sets the paper height. public void SetPaperHeight(float height) Parameters height float (float) Paper height in the current page units. SetPaperWidth(float) Sets the paper width. public void SetPaperWidth(float width) Parameters width float (float) Paper width in the current page units."
  },
  "api/OSGeo.MapGuide.MgPortableProfilingService.html": {
    "href": "api/OSGeo.MapGuide.MgPortableProfilingService.html",
    "title": "Class MgPortableProfilingService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableProfilingService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll This class provides services to profile existing MapGuide APIs public class MgPortableProfilingService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgPortableProfilingService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool ProfileRenderDynamicOverlay(MgPortableMap, MgPortableSelection, MgPortableRenderingOptions) Profile the process of rendering all dynamic layers in the specified OSGeo.MapGuide.MgMap to a dynamic overlay image with a transparent background. public MgByteReader ProfileRenderDynamicOverlay(MgPortableMap map, MgPortableSelection selection, MgPortableRenderingOptions options) Parameters map MgPortableMap Input map object containing current state of map. selection MgPortableSelection Input map feature selection. Specifies the selected features on the map options MgPortableRenderingOptions Input rendering options Returns MgByteReader A byte reader containing the profile result ProfileRenderMap(MgPortableMap, MgPortableSelection, MgCoordinate, double, int, int, MgColor, string, bool) Profile the process of rendering a OSGeo.MapGuide.MgMap to the requested image format with specified center point and scale. public MgByteReader ProfileRenderMap(MgPortableMap map, MgPortableSelection selection, MgCoordinate center, double scale, int width, int height, MgColor backgroundColor, string format, bool bKeepSelection) Parameters map MgPortableMap Input map object containing current state of map. selection MgPortableSelection Input map feature selection. Specifies the selected features on the map center MgCoordinate Input map center point. Specifies the center point for the map scale double Input map scale. Specifies the scale for the map width int Input image width. Specifies the image width in pixels height int Input image height. Specifies the image height in pixels backgroundColor MgColor Input background color. Specifies the map background color format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection Returns MgByteReader A byte reader containing the profile result"
  },
  "api/OSGeo.MapGuide.MgPortableRdbmsFeatureSourceParams.html": {
    "href": "api/OSGeo.MapGuide.MgPortableRdbmsFeatureSourceParams.html",
    "title": "Class MgPortableRdbmsFeatureSourceParams | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableRdbmsFeatureSourceParams Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll Contains the parameters used to create a relational feature source. This is the relational analogue to the MgFileFeatureSourceParams class public class MgPortableRdbmsFeatureSourceParams : MgFeatureSourceParams, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureSourceParams MgPortableRdbmsFeatureSourceParams Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableRdbmsFeatureSourceParams() Constructs an empty MgPortableRdbmsFeatureSourceParams object. public MgPortableRdbmsFeatureSourceParams() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinateSystemName() Gets the name of the coordinate system public string GetCoordinateSystemName() Returns string Returns the name of the coordinate system GetCoordinateSystemWkt() Gets the well-known text description of the coordinate system. public string GetCoordinateSystemWkt() Returns string Returns the OGC WKT description of the coordinate system. GetDataStore() Gets the name of the data store public string GetDataStore() Returns string Returns the name of the data store GetFeatureSchema() Gets the feature schema definition. public MgFeatureSchema GetFeatureSchema() Returns MgFeatureSchema Returns a feature schema definition object. GetIsFdoEnabled() Gets whether this data store will be created with FDO metaschema tables. These tables have a f_ prefix when the data store is inspected by non-FDO tools. public bool GetIsFdoEnabled() Returns bool The data store extents GetPassword() Gets the password connection parameter public string GetPassword() Returns string Returns the password connection parameter GetProviderName() Gets the FDO provider name of the feature source. public string GetProviderName() Returns string Returns the FDO provider name of the feature source. GetService() Gets the service name to create the relational data store in public string GetService() Returns string Returns the service name GetSpatialContextDescription() Gets the spatial context description. public string GetSpatialContextDescription() Returns string Returns the spatial context description. GetSpatialContextExtents() Gets the envelope that all features in this data store will encompass public MgEnvelope GetSpatialContextExtents() Returns MgEnvelope The data store extents GetSpatialContextName() Gets the user-defined spatial context name. public string GetSpatialContextName() Returns string Returns the name of the spatial context. GetUsername() Gets the username connection parameter public string GetUsername() Returns string Returns the username connection parameter GetXYTolerance() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetXYTolerance() Returns double Returns the tolerance used for the X and Y ordinates. GetZTolerance() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetZTolerance() Returns double Returns the tolerance for the Z ordinate. SetCoordinateSystemName(string) Sets the name of the coordinate system public void SetCoordinateSystemName(string csName) Parameters csName string SetCoordinateSystemWkt(string) Sets the well-know text string representing the coordinate system. public void SetCoordinateSystemWkt(string srsWkt) Parameters srsWkt string (String/string) The OGC WKT string representing the coordinate system. SetDataStore(string) Sets the name of the data store to create public void SetDataStore(string dataStore) Parameters dataStore string (String/string) The name of the data store to create SetFeatureSchema(MgFeatureSchema) Sets the feature schema definition. public void SetFeatureSchema(MgFeatureSchema featureSchema) Parameters featureSchema MgFeatureSchema (MgFeatureSchema) The feature schema definition. SetIsFdoEnabled(bool) Sets whether the data store will be created with FDO metaschema tables. These tables have a f_ prefix when the data store is inspected by non-FDO tools. public void SetIsFdoEnabled(bool useFdoMetadata) Parameters useFdoMetadata bool (bool) true to create FDO metaschema tables. false otherwise SetPassword(string) Sets the password connection parameter public void SetPassword(string pwd) Parameters pwd string (String/string) The password connection parameter SetProviderName(string) Sets the FDO provider name of the feature source. public void SetProviderName(string providerName) Parameters providerName string (String/string) The FDO provider name of the feature source without version number. For example, OSGeo.SDF. SetService(string) Sets the name of the service to create the relational data store in public void SetService(string name) Parameters name string (String/string) The service name SetSpatialContextDescription(string) Sets the spatial context description. public void SetSpatialContextDescription(string description) Parameters description string (String/string) The description of the spatial context. SetSpatialContextExtents(MgEnvelope) Sets the envelope that all features in this data store will encompass public void SetSpatialContextExtents(MgEnvelope extents) Parameters extents MgEnvelope (MgEnvelope) The data store extents SetSpatialContextName(string) Sets the user-defined spatial context name. public void SetSpatialContextName(string name) Parameters name string (String/string) The name of the spatial context SetUsername(string) Sets the username connection parameter public void SetUsername(string username) Parameters username string (String/string) The username connection parameter SetXYTolerance(double) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetXYTolerance(double tolerance) Parameters tolerance double (double) The tolerance for the X and Y ordinates. SetZTolerance(double) Sets the tolerance for the Z ordinate. public void SetZTolerance(double tolerance) Parameters tolerance double (double) The tolerance for the Z ordinate."
  },
  "api/OSGeo.MapGuide.MgPortableRenderingOptions.html": {
    "href": "api/OSGeo.MapGuide.MgPortableRenderingOptions.html",
    "title": "Class MgPortableRenderingOptions | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableRenderingOptions Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll Options for Rendering Service. public class MgPortableRenderingOptions : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgPortableRenderingOptions Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableRenderingOptions(string, int, MgColor) Construct an MgPortableRenderingOptions object public MgPortableRenderingOptions(string format, int behavior, MgColor selectionColor) Parameters format string Input Image format. Defines the format of the resulting image behavior int Input A bitmask with the rendering behavior values selectionColor MgColor Input Selection color, including filling color and boundary color Fields KeepSelection public static readonly int KeepSelection Field Value int RenderBaseLayers public static readonly int RenderBaseLayers Field Value int RenderLayers public static readonly int RenderLayers Field Value int RenderSelection public static readonly int RenderSelection Field Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBehavior() Get the rendering behavior public int GetBehavior() Returns int The integer value GetImageFormat() Get the image format public string GetImageFormat() Returns string The string value GetSelectionColor() Get the selection color public MgColor GetSelectionColor() Returns MgColor The MgColor object"
  },
  "api/OSGeo.MapGuide.MgPortableRenderingService.html": {
    "href": "api/OSGeo.MapGuide.MgPortableRenderingService.html",
    "title": "Class MgPortableRenderingService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableRenderingService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll This class provides services to render a map into an image public class MgPortableRenderingService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgPortableRenderingService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool QueryFeatures(MgPortableMap, MgStringCollection, MgGeometry, int, int) The QueryFeatures operation identifies those features that meet the specified spatial selection criteria. This operation is used to implement server-side selection. In addition to a selection set, this operation returns attribute information in case only one feature is selected public MgPortableFeatureInformation QueryFeatures(MgPortableMap map, MgStringCollection layerNames, MgGeometry filterGeometry, int selectionVariant, int maxFeatures) Parameters map MgPortableMap Input map object containing current state of map. layerNames MgStringCollection Input Active layer names for which to query features filterGeometry MgGeometry Input geometry object specifying the selection area selectionVariant int Input selection criterion - integer value corresponding to one of the MgFeatureSpatialOperations values maxFeatures int Input the maximum number of features to return Returns MgPortableFeatureInformation An OSGeo.MapGuide.MgSelection instance identifying the features that meet the selection criteria. Returns null if no features are identified. QueryFeatures(MgPortableMap, MgStringCollection, MgGeometry, int, string, int, int) The QueryFeatures operation identifies those features that meet the specified spatial selection criteria. This operation is used to implement server-side selection. In addition to a selection set, this operation returns attribute information in case only one feature is selected public MgPortableFeatureInformation QueryFeatures(MgPortableMap map, MgStringCollection layerNames, MgGeometry filterGeometry, int selectionVariant, string featureFilter, int maxFeatures, int layerAttributeFilter) Parameters map MgPortableMap Input map object containing current state of map. layerNames MgStringCollection Input Active layer names for which to query features filterGeometry MgGeometry Input geometry object specifying the selection area selectionVariant int Input selection criterion - integer value corresponding to one of the MgFeatureSpatialOperations values featureFilter string Input an XML selection string containing the required feature IDs maxFeatures int Input the maximum number of features to return layerAttributeFilter int Input bitmask values - 1=Visible, 2=Selectable, 4=HasTooltips Returns MgPortableFeatureInformation An OSGeo.MapGuide.MgSelection instance identifying the features that meet the selection criteria. Returns null if no features are identified. RenderDynamicOverlay(MgPortableMap, MgPortableSelection, MgPortableRenderingOptions) Renders all dynamic layers in the specified MgPortableMap to a dynamic overlay image with a transparent background. The center, scale, size, and layers to be rendered are defined by the specified map instance. The format parameter must be set to an image format that supports transparency. public MgByteReader RenderDynamicOverlay(MgPortableMap map, MgPortableSelection selection, MgPortableRenderingOptions options) Parameters map MgPortableMap Input map object containing current state of map. selection MgPortableSelection Input map feature selection. Specifies the selected features on the map options MgPortableRenderingOptions Input rendering options Returns MgByteReader A byte reader containing the rendered image RenderDynamicOverlay(MgPortableMap, MgPortableSelection, string) Renders all dynamic layers in the specified MgPortableMap to a dynamic overlay image with a transparent background. The center, scale, size, and layers to be rendered are defined by the specified map instance. The format parameter must be set to an image format that supports transparency. public MgByteReader RenderDynamicOverlay(MgPortableMap map, MgPortableSelection selection, string format) Parameters map MgPortableMap Input map object containing current state of map. selection MgPortableSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image Returns MgByteReader A byte reader containing the rendered image RenderDynamicOverlay(MgPortableMap, MgPortableSelection, string, bool) Renders all dynamic layers in the specified MgPortableMap to a dynamic overlay image with a transparent background. The center, scale, size, and layers to be rendered are defined by the specified map instance. The format parameter must be set to an image format that supports transparency. public MgByteReader RenderDynamicOverlay(MgPortableMap map, MgPortableSelection selection, string format, bool bKeepSelection) Parameters map MgPortableMap Input map object containing current state of map. selection MgPortableSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection Returns MgByteReader A byte reader containing the rendered image RenderMap(MgPortableMap, MgPortableSelection, string) Renders the specified MgPortableMap to the requested image format. public MgByteReader RenderMap(MgPortableMap map, MgPortableSelection selection, string format) Parameters map MgPortableMap Input map object containing current state of map. selection MgPortableSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image Returns MgByteReader A byte reader containing the rendered image RenderMap(MgPortableMap, MgPortableSelection, string, bool) Renders the specified MgPortableMap to the requested image format. public MgByteReader RenderMap(MgPortableMap map, MgPortableSelection selection, string format, bool bKeepSelection) Parameters map MgPortableMap Input map object containing current state of map. selection MgPortableSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection Returns MgByteReader A byte reader containing the rendered image RenderMap(MgPortableMap, MgPortableSelection, string, bool, bool) Renders the specified MgPortableMap to the requested image format. public MgByteReader RenderMap(MgPortableMap map, MgPortableSelection selection, string format, bool bKeepSelection, bool bClip) Parameters map MgPortableMap Input map object containing current state of map. selection MgPortableSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection bClip bool Input true if you want to clip feature geometry Returns MgByteReader A byte reader containing the rendered image RenderMapLegend(MgPortableMap, int, int, MgColor, string) Renders the legend for the specified MgPortableMap to the requested size and format public MgByteReader RenderMapLegend(MgPortableMap map, int width, int height, MgColor backgroundColor, string format) Parameters map MgPortableMap Input map object containing current state of map. width int Input width of legend image in pixels height int Input height of legend image in pixels backgroundColor MgColor Input background color. Specifies the map legend background color format string Input image format. Defines the format of the resulting image Returns MgByteReader A byte reader containing the rendered image RenderTile(MgPortableMap, string, int, int) Returns the specified base map tile for the given map. public MgByteReader RenderTile(MgPortableMap map, string baseMapLayerGroupName, int tileColumn, int tileRow) Parameters map MgPortableMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. tileColumn int Input Specifies the column index of the tile to return. tileRow int Input Specifies the row index of the tile to return. Returns MgByteReader A byte reader containing the rendered tile image."
  },
  "api/OSGeo.MapGuide.MgPortableResourceService.html": {
    "href": "api/OSGeo.MapGuide.MgPortableResourceService.html",
    "title": "Class MgPortableResourceService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableResourceService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableResourceService : MgResourceService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgResourceService MgPortableResourceService Implements IDisposable Inherited Members MgResourceService.EnumerateResources(MgResourceIdentifier, int, string) MgResourceService.EnumerateResources(MgResourceIdentifier, int, string, bool) MgResourceService.GetResourceContent(MgResourceIdentifier) MgResourceService.EnumerateResourceDocuments(MgStringCollection, string, int) MgResourceService.GetResourceModifiedDate(MgResourceIdentifier) MgResourceService.SetResourceMetadata(MgResourceIdentifier, MgByteReader) MgResourceService.GetResourceMetadata(MgResourceIdentifier) MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyResourcePackage(MgByteReader) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void ApplyResourcePackage(MgByteReader resourcePackage) Parameters resourcePackage MgByteReader ChangeResourceOwner(MgResourceIdentifier, string, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void ChangeResourceOwner(MgResourceIdentifier resource, string owner, bool includeDescendants) Parameters resource MgResourceIdentifier owner string includeDescendants bool CopyResource(MgResourceIdentifier, MgResourceIdentifier, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void CopyResource(MgResourceIdentifier sourceResource, MgResourceIdentifier destResource, bool overwrite) Parameters sourceResource MgResourceIdentifier destResource MgResourceIdentifier overwrite bool DeleteResource(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void DeleteResource(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier DeleteResourceData(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void DeleteResourceData(MgResourceIdentifier resource, string dataName) Parameters resource MgResourceIdentifier dataName string Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnumerateReferences(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader EnumerateReferences(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns MgByteReader EnumerateResourceData(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader EnumerateResourceData(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns MgByteReader EnumerateUnmanagedData(string, bool, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader EnumerateUnmanagedData(string path, bool recursive, string type, string filter) Parameters path string recursive bool type string filter string Returns MgByteReader GetRepositoryContent(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetRepositoryContent(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns MgByteReader GetRepositoryHeader(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetRepositoryHeader(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns MgByteReader GetResourceContents(MgStringCollection, MgStringCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgStringCollection GetResourceContents(MgStringCollection resources, MgStringCollection preProcessTags) Parameters resources MgStringCollection preProcessTags MgStringCollection Returns MgStringCollection GetResourceData(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetResourceData(MgResourceIdentifier resource, string dataName) Parameters resource MgResourceIdentifier dataName string Returns MgByteReader GetResourceHeader(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetResourceHeader(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns MgByteReader InheritPermissionsFrom(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void InheritPermissionsFrom(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier MoveResource(MgResourceIdentifier, MgResourceIdentifier, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void MoveResource(MgResourceIdentifier sourceResource, MgResourceIdentifier destResource, bool overwrite) Parameters sourceResource MgResourceIdentifier destResource MgResourceIdentifier overwrite bool MoveResource(MgResourceIdentifier, MgResourceIdentifier, bool, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void MoveResource(MgResourceIdentifier sourceResource, MgResourceIdentifier destResource, bool overwrite, bool cascade) Parameters sourceResource MgResourceIdentifier destResource MgResourceIdentifier overwrite bool cascade bool RenameResourceData(MgResourceIdentifier, string, string, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void RenameResourceData(MgResourceIdentifier resource, string oldDataName, string newDataName, bool overwrite) Parameters resource MgResourceIdentifier oldDataName string newDataName string overwrite bool ResourceExists(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool ResourceExists(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier Returns bool SetResource(MgResourceIdentifier, MgByteReader, MgByteReader) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetResource(MgResourceIdentifier resource, MgByteReader content, MgByteReader header) Parameters resource MgResourceIdentifier content MgByteReader header MgByteReader SetResourceCredentials(MgResourceIdentifier, string, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetResourceCredentials(MgResourceIdentifier resource, string userName, string password) Parameters resource MgResourceIdentifier userName string password string SetResourceData(MgResourceIdentifier, string, string, MgByteReader) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetResourceData(MgResourceIdentifier resource, string dataName, string dataType, MgByteReader data) Parameters resource MgResourceIdentifier dataName string dataType string data MgByteReader UpdateRepository(MgResourceIdentifier, MgByteReader, MgByteReader) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void UpdateRepository(MgResourceIdentifier resource, MgByteReader content, MgByteReader header) Parameters resource MgResourceIdentifier content MgByteReader header MgByteReader"
  },
  "api/OSGeo.MapGuide.MgPortableScrollableFeatureReader.html": {
    "href": "api/OSGeo.MapGuide.MgPortableScrollableFeatureReader.html",
    "title": "Class MgPortableScrollableFeatureReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableScrollableFeatureReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableScrollableFeatureReader : IDisposable Inheritance object MgPortableScrollableFeatureReader Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields swigCMemOwn protected bool swigCMemOwn Field Value bool Methods Count() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int Count() Returns int Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~MgPortableScrollableFeatureReader() protected ~MgPortableScrollableFeatureReader() IndexOf(MgPropertyCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int IndexOf(MgPropertyCollection key) Parameters key MgPropertyCollection Returns int ReadAt(MgPropertyCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool ReadAt(MgPropertyCollection key) Parameters key MgPropertyCollection Returns bool ReadAtIndex(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool ReadAtIndex(int recordIndex) Parameters recordIndex int Returns bool ReadFirst() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool ReadFirst() Returns bool ReadLast() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool ReadLast() Returns bool ReadPrevious() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool ReadPrevious() Returns bool"
  },
  "api/OSGeo.MapGuide.MgPortableSelection.html": {
    "href": "api/OSGeo.MapGuide.MgPortableSelection.html",
    "title": "Class MgPortableSelection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableSelection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableSelection : MgSelectionBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgResource MgSelectionBase MgPortableSelection Implements IDisposable Inherited Members MgSelectionBase.GetSelectedFeaturesCount(MgLayerBase, string) MgSelectionBase.FromXml(string) MgSelectionBase.ToXml() MgSelectionBase.AddFeatures(MgLayerBase, MgFeatureReader, int) MgSelectionBase.AddFeatureIds(MgLayerBase, string, MgPropertyCollection) MgSelectionBase.AddFeatureIdInt16(MgLayerBase, string, short) MgSelectionBase.AddFeatureIdInt32(MgLayerBase, string, int) MgSelectionBase.AddFeatureIdInt64(MgLayerBase, string, long) MgSelectionBase.AddFeatureIdString(MgLayerBase, string, string) MgSelectionBase.AddFeatureIdDouble(MgLayerBase, string, double) MgSelectionBase.GetLayers() MgSelectionBase.GetClasses(string) MgSelectionBase.GetClass(string) MgSelectionBase.Contains(MgLayerBase, string) MgSelectionBase.GenerateFilter(MgLayerBase, string) MgSelectionBase.GenerateFilters(MgLayerBase, string, int) MgSelectionBase.GetExtents(MgFeatureService) MgSelectionBase.Add(string, string, string) MgSelectionBase.Open(MgResourceService, string) MgSelectionBase.Save(MgResourceService, string) MgSelectionBase.GetResourceName(string, string) MgSelectionBase.SetMap(MgMapBase) MgResource.GetResourceId() MgResource.Open(MgResourceService, MgResourceIdentifier) MgResource.Save(MgResourceService) MgResource.Save(MgResourceService, MgResourceIdentifier) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableSelection() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableSelection() MgPortableSelection(MgPortableMap) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableSelection(MgPortableMap map) Parameters map MgPortableMap MgPortableSelection(MgPortableMap, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableSelection(MgPortableMap map, string xmlSelectionString) Parameters map MgPortableMap xmlSelectionString string Methods Clear() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Clear() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetSelectedFeatures(MgLayerBase, string, MgStringCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader GetSelectedFeatures(MgLayerBase layer, string className, MgStringCollection propertyNames) Parameters layer MgLayerBase className string propertyNames MgStringCollection Returns MgFeatureReader GetSelectedFeatures(MgLayerBase, string, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader GetSelectedFeatures(MgLayerBase layer, string className, bool mappedOnly) Parameters layer MgLayerBase className string mappedOnly bool Returns MgFeatureReader"
  },
  "api/OSGeo.MapGuide.MgPortableServiceFactory.html": {
    "href": "api/OSGeo.MapGuide.MgPortableServiceFactory.html",
    "title": "Class MgPortableServiceFactory | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableServiceFactory Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll The MgPortableServiceFactory class allows you to create instances of service classes public class MgPortableServiceFactory : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgPortableServiceFactory Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPortableServiceFactory() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPortableServiceFactory() Methods CreateService(int) Creates an instances of the specified service public MgService CreateService(int serviceType) Parameters serviceType int (MgServiceType) The type of service to create Returns MgService An instance of the specified service. It must be cast to the appropriate subclass Exceptions MgException MgServiceNotSupportedException\"> Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgPortableTileService.html": {
    "href": "api/OSGeo.MapGuide.MgPortableTileService.html",
    "title": "Class MgPortableTileService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableTileService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableTileService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgPortableTileService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ClearCache(MgPortableMap) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void ClearCache(MgPortableMap map) Parameters map MgPortableMap Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDefaultTileSizeX() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDefaultTileSizeX() Returns int GetDefaultTileSizeY() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetDefaultTileSizeY() Returns int GetTile(MgPortableMap, string, int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetTile(MgPortableMap map, string baseMapLayerGroupName, int tileColumn, int tileRow) Parameters map MgPortableMap baseMapLayerGroupName string tileColumn int tileRow int Returns MgByteReader GetTile(MgResourceIdentifier, string, int, int, int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetTile(MgResourceIdentifier mapDefinition, string baseMapLayerGroupName, int tileColumn, int tileRow, int scaleIndex) Parameters mapDefinition MgResourceIdentifier baseMapLayerGroupName string tileColumn int tileRow int scaleIndex int Returns MgByteReader"
  },
  "api/OSGeo.MapGuide.MgPortableTransaction.html": {
    "href": "api/OSGeo.MapGuide.MgPortableTransaction.html",
    "title": "Class MgPortableTransaction | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableTransaction Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgPortableTransaction : MgTransaction, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgTransaction MgPortableTransaction Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddSavePoint(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string AddSavePoint(string suggestName) Parameters suggestName string Returns string Commit() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Commit() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetFeatureSource() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgResourceIdentifier GetFeatureSource() Returns MgResourceIdentifier ReleaseSavePoint(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void ReleaseSavePoint(string savePointName) Parameters savePointName string Rollback() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Rollback() Rollback(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void Rollback(string savePointName) Parameters savePointName string"
  },
  "api/OSGeo.MapGuide.MgPortableUnitType.html": {
    "href": "api/OSGeo.MapGuide.MgPortableUnitType.html",
    "title": "Class MgPortableUnitType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPortableUnitType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Portable.dll MgPortableUnitType defines enumerated values used to determine the type of units for plot decorations (scale bar). public class MgPortableUnitType Inheritance object MgPortableUnitType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Metric TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Metric = \"Metric\" Field Value string USEnglish TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string USEnglish = \"US-English\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgPreparedGeometry.html": {
    "href": "api/OSGeo.MapGuide.MgPreparedGeometry.html",
    "title": "Class MgPreparedGeometry | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPreparedGeometry Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgPreparedGeometry is an prepared form of MgGeometry optimized for the case of repeated evaluation of spatial predicates against it and any other geometry public class MgPreparedGeometry : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgPreparedGeometry Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Contains(MgGeometry) This is a convenience method. Given 2 geometries a and b, a.Contains(b) is true if and only if b.MgGeometry::Within(a) is true. public bool Contains(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if the other geometry is within this geometry, false otherwise. Crosses(MgGeometry) Given 2 geometries a and b, a.Crosses(b) is true if and only if the dimension of the intersection of the interior of a and the interior of b is less than the greater of the dimension of the interior of a and the dimension of the interior of b and the intersection of a and b is neither a nor b. public bool Crosses(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry spatially crosses the other geometry, false otherwise. Disjoint(MgGeometry) Given 2 geometries a and b, a.Disjoint(b)is true if and only if the intersection of a and b is empty. public bool Disjoint(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry is spatially disjoint from the other geometry, false otherwise. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Intersects(MgGeometry) This is a convenience method. Given 2 geometries a and b, public bool Intersects(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry is not disjoint with respect to the other geometry, false otherwise. Overlaps(MgGeometry) Given 2 geometries a and b, a.Overlaps(b) is true if and only if the dimension of the interior of a equals the dimension of the interior of b equals the dimension of the intersection of the interior of a and the interior of b and the intersection of a and b is neither a nor b. public bool Overlaps(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry spatially overlaps the other geometry, false otherwise. Touches(MgGeometry) Given 2 geometries a and b, a.Touches(b) is true if and only if the intersection of the interior of a and the interior of b is empty and the intersection of a and b is not empty. public bool Touches(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry spatially touches the other geometry, false otherwise. Within(MgGeometry) Given 2 geometries a and b, a.Within(b) is true if and only if the intersection of a and b is a and the intersection of the interior of a and the interior of b is not empty. public bool Within(MgGeometry other) Parameters other MgGeometry (MgGeometry) The MgGeometry to test against this one. Returns bool True if this geometry is spatially within the other geometry, false otherwise."
  },
  "api/OSGeo.MapGuide.MgProfilingService.html": {
    "href": "api/OSGeo.MapGuide.MgProfilingService.html",
    "title": "Class MgProfilingService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgProfilingService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll This class provides services to profile exsiting MapGuide APIs public class MgProfilingService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgProfilingService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool ProfileRenderDynamicOverlay(MgMap, MgSelection, MgRenderingOptions) Profile the process of rendering all dynamic layers in the specified MgMap to a dynamic overlay image with a transparent background. public MgByteReader ProfileRenderDynamicOverlay(MgMap map, MgSelection selection, MgRenderingOptions options) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map options MgRenderingOptions Input rendering options Returns MgByteReader A byte reader containing the profile result ProfileRenderMap(MgMap, MgSelection, MgCoordinate, double, int, int, MgColor, string, bool) Profile the process of rendering a MgMap to the requested image format with specified center point and scale. public MgByteReader ProfileRenderMap(MgMap map, MgSelection selection, MgCoordinate center, double scale, int width, int height, MgColor backgroundColor, string format, bool bKeepSelection) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map center MgCoordinate Input map center point. Specifies the center point for the map scale double Input map scale. Specifies the scale for the map width int Input image width. Specifies the image width in pixels height int Input image height. Specifies the image height in pixels backgroundColor MgColor Input background color. Specifies the map background color format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection Returns MgByteReader A byte reader containing the profile result"
  },
  "api/OSGeo.MapGuide.MgProperty.html": {
    "href": "api/OSGeo.MapGuide.MgProperty.html",
    "title": "Class MgProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll A base class for MgNullableProperty, which is the base class for all of the concrete property classes, for example, OSGeo.MapGuide.MgBooleanProperty and a base class for MgPropertyDefinition, which is the base class for all of the concrete property definition classes, for example, OSGeo.MapGuide.MgDataPropertyDefinition. public class MgProperty : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty Implements IDisposable Derived MgNullableProperty MgPropertyDefinition Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; set; } Property Value string PropertyType public short PropertyType { get; } Property Value short Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetName() Gets the property name. public string GetName() Returns string Returns the property name. GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type. See MgPropertyType. SetName(string) Sets the property name. public void SetName(string name) Parameters name string (String/string) The name of property."
  },
  "api/OSGeo.MapGuide.MgPropertyCollection.html": {
    "href": "api/OSGeo.MapGuide.MgPropertyCollection.html",
    "title": "Class MgPropertyCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPropertyCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll MgPropertyCollection represents a collection of properties. All properties contained in an instance of a property collection are objects whose base class is MgProperty and whose derived class is one of the classes referenced in the public class MgPropertyCollection : MgCollection, IDisposable, IList<MgProperty>, ICollection<MgProperty>, IEnumerable<MgProperty>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgPropertyCollection Implements IDisposable IList<MgProperty> ICollection<MgProperty> IEnumerable<MgProperty> IEnumerable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPropertyCollection() Constructs a PropertyCollection. The collection is initially empty. public MgPropertyCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgProperty this[int index] { get; set; } Parameters index int Property Value MgProperty Methods Add(MgProperty) Adds the specified item to the end of the collection. public void Add(MgProperty value) Parameters value MgProperty (MgProperty) Input value Exceptions MgException with code (MgDuplicateObjectException) if the index is a duplicate. Clear() Removes all items from the collection. public void Clear() Contains(MgProperty) Returns true if the collection contains the specified item, false otherwise. public bool Contains(MgProperty value) Parameters value MgProperty (MgProperty) Input value Returns bool Returns true if the collection contains the specified item, false otherwise. Contains(string) Returns true if the collection contains the specified item, false otherwise. public bool Contains(string name) Parameters name string (String/string) Input the item name Returns bool Returns true if the collection contains the specified item, false otherwise. CopyTo(MgProperty[], int) public void CopyTo(MgProperty[] array, int arrayIndex) Parameters array MgProperty[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetEnumerator() public IEnumerator<MgProperty> GetEnumerator() Returns IEnumerator<MgProperty> GetItem(int) public virtual MgProperty GetItem(int index) Parameters index int Returns MgProperty GetItem(string) Gets the item in the collection with the specified name. public MgProperty GetItem(string name) Parameters name string (String/string) Input item name Returns MgProperty Returns the item in the collection with the specified name. Exceptions MgException with code (MgObjectNotFoundException) if the item does not exist within the collection. IndexOf(MgProperty) public virtual int IndexOf(MgProperty value) Parameters value MgProperty Returns int IndexOf(string) public virtual int IndexOf(string name) Parameters name string Returns int Insert(int, MgProperty) Inserts the specified item at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, MgProperty value) Parameters index int (int) Input index value MgProperty (MgProperty) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. MgException with code (MgDuplicateObjectException) if it is a duplicate. Remove(MgProperty) Removes the specified item from the collection. public bool Remove(MgProperty value) Parameters value MgProperty (MgProperty) Input value Returns bool Returns true if removal was successful. RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgProperty) Sets the item in the collection at the specified index to the specified value. public void SetItem(int index, MgProperty value) Parameters index int (int) Input index value MgProperty (MgProperty) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. MgException with code (MgDuplicateObjectException) if it is a duplicate. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. The order of the properties in the XML is the same as the order of the properties in the collection. It starts with item zero to length of collection. TODO: Add a snippet of XML here? public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgPropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MgPropertyDefinition.html",
    "title": "Class MgPropertyDefinition | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPropertyDefinition Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Defines the base class for the concrete property definition classes which are used to create data, geometric, object, and raster property definitions. public class MgPropertyDefinition : MgProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgPropertyDefinition Implements IDisposable Derived MgDataPropertyDefinition MgGeometricPropertyDefinition MgObjectPropertyDefinition MgRasterPropertyDefinition Inherited Members MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPropertyDefinition(IntPtr, bool) protected MgPropertyDefinition(IntPtr cPtr, bool cMemoryOwn) Parameters cPtr IntPtr cMemoryOwn bool MgPropertyDefinition(string, short) Constructs an MgPropertyDefinition object. public MgPropertyDefinition(string name, short type) Parameters name string (String/string) The name of the property. type short (short/int) The type of the property. Properties Description public string Description { get; set; } Property Value string PropertyType public short PropertyType { get; } Property Value short QualifiedName public string QualifiedName { get; set; } Property Value string Methods Delete() Marks the property definition for deletion. public void Delete() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDescription() Gets the description of this property. public string GetDescription() Returns string Returns a String containing the description of the property. GetPropertyType() Gets the definition type (either data, geometric, object, or raster) of this property. public short GetPropertyType() Returns short Returns one of the MgFeaturePropertyType values that identifies the concrete type. GetQualifiedName() Gets the qualified name of this property whose format is public string GetQualifiedName() Returns string Returns a String containing the qualified name. SetDescription(string) Sets the description of this property. public void SetDescription(string description) Parameters description string (String/string) The description of the property. SetQualifiedName(string) Sets the qualified name of this property. The format of the public void SetQualifiedName(string qualifiedName) Parameters qualifiedName string (String/string) The qualified name of the property. getCPtr(MgPropertyDefinition) public static HandleRef getCPtr(MgPropertyDefinition obj) Parameters obj MgPropertyDefinition Returns HandleRef swigRelease(MgPropertyDefinition) public static HandleRef swigRelease(MgPropertyDefinition obj) Parameters obj MgPropertyDefinition Returns HandleRef"
  },
  "api/OSGeo.MapGuide.MgPropertyDefinitionCollection.html": {
    "href": "api/OSGeo.MapGuide.MgPropertyDefinitionCollection.html",
    "title": "Class MgPropertyDefinitionCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPropertyDefinitionCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll This class contains property definitions for a feature class and makes up a portion of the complete feature class definition. public class MgPropertyDefinitionCollection : MgCollection, IDisposable, IList<MgPropertyDefinition>, ICollection<MgPropertyDefinition>, IEnumerable<MgPropertyDefinition>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgPropertyDefinitionCollection Implements IDisposable IList<MgPropertyDefinition> ICollection<MgPropertyDefinition> IEnumerable<MgPropertyDefinition> IEnumerable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgPropertyDefinitionCollection() Constructs a PropertyDefinitionCollection. Collection is initially empty. public MgPropertyDefinitionCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgPropertyDefinition this[int index] { get; set; } Parameters index int Property Value MgPropertyDefinition Methods Add(MgPropertyDefinition) Adds the specified item to the end of the collection. public void Add(MgPropertyDefinition value) Parameters value MgPropertyDefinition (MgPropertyDefinition) Input value Exceptions MgException with code (MgDuplicateObjectException) if it is duplicate Clear() Removes all items from the collection. public void Clear() Contains(MgPropertyDefinition) Returns true if the collection contains the specified item, false otherwise. public bool Contains(MgPropertyDefinition value) Parameters value MgPropertyDefinition (MgPropertyDefinition) Input value Returns bool Returns true if the collection contains the specified item, false otherwise Contains(string) Returns true if the collection contains the specified item, false otherwise. public bool Contains(string name) Parameters name string (String/string) Input the item name Returns bool Returns true if the collection contains the specified item, false otherwise CopyTo(MgPropertyDefinition[], int) public void CopyTo(MgPropertyDefinition[] array, int arrayIndex) Parameters array MgPropertyDefinition[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetEnumerator() public IEnumerator<MgPropertyDefinition> GetEnumerator() Returns IEnumerator<MgPropertyDefinition> GetItem(int) public virtual MgPropertyDefinition GetItem(int index) Parameters index int Returns MgPropertyDefinition GetItem(string) Gets the item in the collection with the specified name public MgPropertyDefinition GetItem(string name) Parameters name string (String/string) Input item name Returns MgPropertyDefinition Returns the item in the collection with the specified name Exceptions MgException with code (MgObjectNotFoundException) if the item does not exist within the collection. IndexOf(MgPropertyDefinition) public virtual int IndexOf(MgPropertyDefinition value) Parameters value MgPropertyDefinition Returns int IndexOf(string) public virtual int IndexOf(string name) Parameters name string Returns int Insert(int, MgPropertyDefinition) Inserts the specified item at the specified index within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, MgPropertyDefinition value) Parameters index int (int) Input index value MgPropertyDefinition (MgPropertyDefinition) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range MgException with code (MgDuplicateObjectException) if it is duplicate Remove(MgPropertyDefinition) Removes the specified item from the collection. public bool Remove(MgPropertyDefinition value) Parameters value MgPropertyDefinition (MgPropertyDefinition) Input value Returns bool Returns true if removal was successful RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException MgIndexOutOfRangeException\"> SetItem(int, MgPropertyDefinition) Sets the item in the collection at the specified index to the specified value. public void SetItem(int index, MgPropertyDefinition value) Parameters index int (int) Input index value MgPropertyDefinition (MgPropertyDefinition) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if index is out of range MgException with code (MgDuplicateObjectException) if it is duplicate ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. Order of properties in XML would be same as order of properties in collection. It starts with item zero to length of collection. TODO: Add a snippet of XML here? public MgByteReader ToXml() Returns MgByteReader Pointer to an MgByteReader object"
  },
  "api/OSGeo.MapGuide.MgPropertyType.html": {
    "href": "api/OSGeo.MapGuide.MgPropertyType.html",
    "title": "Class MgPropertyType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgPropertyType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Defines the names for the various property types. public class MgPropertyType Inheritance object MgPropertyType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Blob Type name for a Binary Large OBject property (OSGeo.MapGuide.MgBlobProperty). public const int Blob = 10 Field Value int Boolean Type name for a boolean property (OSGeo.MapGuide.MgBooleanProperty). public const int Boolean = 1 Field Value int Byte Type name for a byte (unsigned 8 bit value) property (OSGeo.MapGuide.MgByteProperty). public const int Byte = 2 Field Value int Clob Type name for a Character Large OBject property (OSGeo.MapGuide.MgClobProperty). public const int Clob = 11 Field Value int DateTime Type name for an MgDateTime property (OSGeo.MapGuide.MgDateTimeProperty). public const int DateTime = 3 Field Value int Decimal Type name for a decimal property. public const int Decimal = 15 Field Value int Double Type name for a double precision floating point value property (OSGeo.MapGuide.MgDoubleProperty). public const int Double = 5 Field Value int Feature Type name for a feature property (OSGeo.MapGuide.MgFeatureProperty). public const int Feature = 12 Field Value int Geometry Type name for a geometry property (OSGeo.MapGuide.MgGeometryProperty). public const int Geometry = 13 Field Value int Int16 Type name for a 16 bit signed integer value property (OSGeo.MapGuide.MgInt16Property). public const int Int16 = 6 Field Value int Int32 Type name for a 32 bit signed integer value property (OSGeo.MapGuide.MgInt32Property). public const int Int32 = 7 Field Value int Int64 Type name for a 64 bit signed integer value property (OSGeo.MapGuide.MgInt64Property). public const int Int64 = 8 Field Value int Null Type name for a null property. public const int Null = 0 Field Value int Raster Type name for a raster property (OSGeo.MapGuide.MgRasterProperty). public const int Raster = 14 Field Value int Single Type name for a single precision floating point value property (OSGeo.MapGuide.MgSingleProperty). public const int Single = 4 Field Value int String Type name for a string property (MgStringProperty). public const int String = 9 Field Value int"
  },
  "api/OSGeo.MapGuide.MgRaster.html": {
    "href": "api/OSGeo.MapGuide.MgRaster.html",
    "title": "Class MgRaster | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRaster Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgRaster : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgRaster Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BitsPerPixel public int BitsPerPixel { get; } Property Value int Bounds public MgEnvelope Bounds { get; } Property Value MgEnvelope DataModelType public int DataModelType { get; } Property Value int ImageXSize public int ImageXSize { get; set; } Property Value int ImageYSize public int ImageYSize { get; set; } Property Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBitsPerPixel() Gets the number of bits per pixel. public int GetBitsPerPixel() Returns int Returns the number of bits per pixel. GetBounds() Get the minimum bounding box around the image. The bounds are transformed to the active spatial context. public MgEnvelope GetBounds() Returns MgEnvelope Returns MgEnvelope object containing bounds GetCurrentBand() Gets the currently active band/channel. public int GetCurrentBand() Returns int Returns the current active band/channel. GetDataModelType() Gets the type of data model (RGB, RGBA, Bitonal, etc.) public int GetDataModelType() Returns int Returns the type of pixel color data (RGB, RGBA, Bitonal, etc.) GetDataType() Gets the data type. public short GetDataType() Returns short Returns the data type of the raster. GetImageXSize() Gets the size of image file in the horizontal direction in pixels (number of columns). public int GetImageXSize() Returns int Returns the horizontal image size in pixels (number of columns). GetImageYSize() Gets the size of image file in the vertical direction in pixels (number of rows). public int GetImageYSize() Returns int Returns the vertical image size in pixels (number of rows). GetNullValue() Gets the NODATA value of the raster. public long GetNullValue() Returns long Returns the FDO data type of the null value. GetNullValueType() Gets the FDO data type of the NODATA value of the raster. public int GetNullValueType() Returns int Returns the FDO data type of the null value. GetNumberOfBands() Gets the number of bands/channels contained in the raster image. public int GetNumberOfBands() Returns int Returns the numbers of bands/channels contained in the raster image. GetStream() Get the source of image data. Image data is shipped using a paradigm similar to BLOB I/O. When fetching a raster image the GetStream() method provides a GisIStreamReader from which the client may request the image data. The format of the image data expected is determined by the DataModel property. The data type, bit depth, tiling and organization specify the meaning of the image data. By setting the DataModel property prior to getting a reader for the data, the FDO client application can control the way data is retrieved from the FDO raster subsystem. When a tiled image is fetched, the image data will be tiled by default, unless a spatial query is used that covers a portion of a tile, in which case the image is converted to monolithic form prior to returning to the client. The client may force a monolithic image in the former case by setting the DataModel to monolithic prior to getting the stream reader. Or conversely it can request a re-tiling of the remaining sub-image by setting the DataModel property to tiled (in this case the tile origin is at the new upper left corner of the sub-image). Note that altering the DataModel may have significant performance issues. public MgByteReader GetStream() Returns MgByteReader Streamed raster image GetVerticalUnits() Gets the vertical units. public string GetVerticalUnits() Returns string Returns the vertical units. IsNull() Returns true if the MgRaster represents a null value. public bool IsNull() Returns bool true - null value. false - non-null SetImageXSize(int) Sets the size of image file in the horizontal direction in pixels (number of columns). By setting the X and Y image size properties prior to getting a reader for the data, the client application can control the density of pixels fetched by the provider, which may reduce the amount of data shipped by the reader and reduce processing time significantly. For example, a certain query in the coordinate system of the raster object class returns a MgRaster object with image size 12091 by 8043. But the image only needs to be displayed in an area 1167 by 776 on the users monitor (note that the aspect ratios are the same because the query is constructed based on the display area). By setting the image size to these lower values the FDO raster subsystem may be able to use a previously subsampled image where the resolution has been reduced by a factor of 4. So instead of transferring 97MB, it can transfer 6MB (a reduction by 4 in both dimensions reduces the amount of data by a factor of 16) and subsample the image again to the desired resolution in a more timely manner (less data to process means less total time), with no appreciable difference in display quality to the user. public void SetImageXSize(int size) Parameters size int (int) The desired horizontal image size in pixels (number of columns). SetImageYSize(int) Sets the size of image file in the vertical direction in pixels (number of rows). See SetImageXSize. public void SetImageYSize(int size) Parameters size int (int) The desired vertical image size in pixels (number of rows). SetNull() Sets the MgRaster to a null value. public void SetNull()"
  },
  "api/OSGeo.MapGuide.MgRasterDataModelType.html": {
    "href": "api/OSGeo.MapGuide.MgRasterDataModelType.html",
    "title": "Class MgRasterDataModelType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRasterDataModelType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Enumerated values used to determine the type of units for plot decorations (scale bar). public class MgRasterDataModelType Inheritance object MgRasterDataModelType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bitonal Data is one bit (black/white - bitonal) pixels. public const int Bitonal = 2 Field Value int Data Data is rectangular grid, floating point data model. public const int Data = 1 Field Value int Gray Data is monochrome (black->gray->white) pixels. It is necessary to know the BitsPerPixel value to interpret the data. public const int Gray = 3 Field Value int Palette Data is monochrome but backed by a pallette (value->pallette->colour) pixels. It is necessary to know the BitsPerPixel value to interpret the data. public const int Palette = 6 Field Value int RGB Data is red/green/blue (in that order) pixels. It is necessary to know the BitsPerPixel value to interpret the data. public const int RGB = 4 Field Value int RGBA Data is red/green/blue/alpha (in that order) pixels; RGB with transparency. It is necessary to know the BitsPerPixel value to interpret the data. public const int RGBA = 5 Field Value int Unknown Data is organized in an unknown or provider specific manner. public const int Unknown = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgRasterProperty.html": {
    "href": "api/OSGeo.MapGuide.MgRasterProperty.html",
    "title": "Class MgRasterProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRasterProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores MgRaster data with an associated key name. public class MgRasterProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgRasterProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgRasterProperty(string, MgRaster) Constructs an MgRasterProperty object. public MgRasterProperty(string name, MgRaster value) Parameters name string (String/string) The name of the property. value MgRaster (MgRaster) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public MgRaster Value { get; set; } Property Value MgRaster Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Raster. GetValue() Gets the property value. public MgRaster GetValue() Returns MgRaster Returns the property value. SetValue(MgRaster) Sets the property value. public void SetValue(MgRaster value) Parameters value MgRaster (MgRaster) The value of the property."
  },
  "api/OSGeo.MapGuide.MgRasterPropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MgRasterPropertyDefinition.html",
    "title": "Class MgRasterPropertyDefinition | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRasterPropertyDefinition Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines a feature property which contains a raster image. public class MgRasterPropertyDefinition : MgPropertyDefinition, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgPropertyDefinition MgRasterPropertyDefinition Implements IDisposable Inherited Members MgPropertyDefinition.getCPtr(MgPropertyDefinition) MgPropertyDefinition.swigRelease(MgPropertyDefinition) MgPropertyDefinition.PropertyType MgPropertyDefinition.Description MgPropertyDefinition.QualifiedName MgPropertyDefinition.GetPropertyType() MgPropertyDefinition.SetDescription(string) MgPropertyDefinition.GetDescription() MgPropertyDefinition.SetQualifiedName(string) MgPropertyDefinition.GetQualifiedName() MgPropertyDefinition.Delete() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgRasterPropertyDefinition(string) Constructs a MgRasterPropertyDefinition object. public MgRasterPropertyDefinition(string name) Parameters name string (String/string) The name of the property. Properties DefaultImageXSize public int DefaultImageXSize { get; set; } Property Value int DefaultImageYSize public int DefaultImageYSize { get; set; } Property Value int Nullable public bool Nullable { get; set; } Property Value bool ReadOnly public bool ReadOnly { get; set; } Property Value bool SpatialContextAssociation public string SpatialContextAssociation { get; set; } Property Value string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDefaultImageXSize() Gets the default size of the image file in the horizontal direction, in pixels (number of columns). public int GetDefaultImageXSize() Returns int Returns the default horizontal image size in pixels (number of columns). GetDefaultImageYSize() Gets the default size of the image file in the vertical direction, in pixels (number of rows). public int GetDefaultImageYSize() Returns int Returns the default vertical image size in pixels (number of rows). GetNullable() Gets a Boolean value that indicates whether this property's value can be null. public bool GetNullable() Returns bool Returns a Boolean value that indicates whether this property's value can be null. GetReadOnly() Returns a Boolean value that indicates whether this property is read-only. public bool GetReadOnly() Returns bool Returns true if this property is read-only; otherwise returns false. GetSpatialContextAssociation() Gets the Spatial Context name associated with this raster property. public string GetSpatialContextAssociation() Returns string Returns a String value representing the Spatial Context name. If the value is empty then the raster property is associated with the active spatial context in the datastore. SetDefaultImageXSize(int) Sets the default size of the image file in the horizontal direction, in pixels (number of columns). public void SetDefaultImageXSize(int size) Parameters size int (int) The desired default horizontal image size in pixels (number of columns). SetDefaultImageYSize(int) Sets the default size of the image file in the vertical direction, in pixels (number of rows). public void SetDefaultImageYSize(int size) Parameters size int (int) The desired default vertical image size in pixels (number of rows). SetNullable(bool) Sets a Boolean value that indicates whether this property's value can be null. public void SetNullable(bool value) Parameters value bool (boolean/bool) True configures the property to be nullable, and false configures it to disallow setting it to a null value. SetReadOnly(bool) Sets a Boolean value that specifies whether this property is read-only. public void SetReadOnly(bool value) Parameters value bool (boolean/bool) True configures the property to be read-only and false configures it to be user settable. SetSpatialContextAssociation(string) Sets a Spatial Context association for this raster property. public void SetSpatialContextAssociation(string spatialContextName) Parameters spatialContextName string (String/string) The Spatial Context name to be set."
  },
  "api/OSGeo.MapGuide.MgReadOnlyLayerCollection.html": {
    "href": "api/OSGeo.MapGuide.MgReadOnlyLayerCollection.html",
    "title": "Class MgReadOnlyLayerCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgReadOnlyLayerCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides read only access to a collection of MgLayerBase objects. public class MgReadOnlyLayerCollection : MgGuardDisposable, IDisposable, IReadOnlyList<MgLayerBase>, IReadOnlyCollection<MgLayerBase>, IEnumerable<MgLayerBase>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgReadOnlyLayerCollection Implements IDisposable IReadOnlyList<MgLayerBase> IReadOnlyCollection<MgLayerBase> IEnumerable<MgLayerBase> IEnumerable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Contains(MgLayerBase) Determines if the collection contains the specified layer. public bool Contains(MgLayerBase value) Parameters value MgLayerBase (MgLayerBase) MgLayerBase to search for. Returns bool Returns true if the collection contains the specified item, or false otherwise. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Gets the number of layers in the collection. public int GetCount() Returns int Returns the number of layers. GetItem(int) Gets the layer at the specified index. public MgLayerBase GetItem(int index) Parameters index int (int) Index of the layer to get. Returns MgLayerBase Returns the layer. Exceptions MgException with code (MgOutOfRangeException) if the index is invalid. IndexOf(MgLayerBase) Gets the index of the specified layer in the collection. public int IndexOf(MgLayerBase value) Parameters value MgLayerBase (MgLayerBase) MgLayerBase to search for. Returns int Returns the layer's index if the collection contains the specified layer, or false (-1) otherwise."
  },
  "api/OSGeo.MapGuide.MgReadOnlyStream.html": {
    "href": "api/OSGeo.MapGuide.MgReadOnlyStream.html",
    "title": "Class MgReadOnlyStream | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgReadOnlyStream Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll A read-only Stream adapter for the MgByteReader class. public class MgReadOnlyStream : ReadOnlyRewindableStream, IDisposable Inheritance object MarshalByRefObject Stream ReadOnlyRewindableStream MgReadOnlyStream Implements IDisposable Inherited Members ReadOnlyRewindableStream.CanRead ReadOnlyRewindableStream.CanSeek ReadOnlyRewindableStream.CanWrite ReadOnlyRewindableStream.Position ReadOnlyRewindableStream.Seek(long, SeekOrigin) ReadOnlyRewindableStream.SetLength(long) ReadOnlyRewindableStream.Write(byte[], int, int) Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadByte() Stream.Synchronized(Stream) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteByte(byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgReadOnlyStream(GetByteReaderMethod) Creates a new instance public MgReadOnlyStream(GetByteReaderMethod method) Parameters method GetByteReaderMethod MgReadOnlyStream(MgByteReader) Initializes a new instance of the MgReadOnlyStream class. public MgReadOnlyStream(MgByteReader reader) Parameters reader MgByteReader The reader. Properties CanRewind Gets whether this stream is rewindable. If not, calls to Rewind() throw a InvalidOperationException public override bool CanRewind { get; } Property Value bool Length When overridden in a derived class, gets the length in bytes of the stream. public override long Length { get; } Property Value long A long value representing the length of the stream in bytes. Exceptions NotSupportedException A class derived from Stream does not support seeking. ObjectDisposedException Methods were called after the stream was closed. Methods Dispose(bool) Releases the unmanaged resources used by the Stream and optionally releases the managed resources. protected override void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. ~MgReadOnlyStream() Releases unmanaged resources and performs other cleanup operations before the MgReadOnlyStream is reclaimed by garbage collection. protected ~MgReadOnlyStream() Flush() When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device. public override void Flush() Exceptions IOException An I/O error occurs. Read(byte[], int, int) When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read. public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source. offset int The zero-based byte offset in buffer at which to begin storing the data read from the current stream. count int The maximum number of bytes to be read from the current stream. Returns int The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached. Exceptions ArgumentException The sum of offset and count is larger than the buffer length. ArgumentNullException buffer is null. ArgumentOutOfRangeException offset or count is negative. IOException An I/O error occurs. NotSupportedException The stream does not support reading. ObjectDisposedException Methods were called after the stream was closed. Rewind() Resets the internal position of the stream public override void Rewind()"
  },
  "api/OSGeo.MapGuide.MgReader.html": {
    "href": "api/OSGeo.MapGuide.MgReader.html",
    "title": "Class MgReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides a forward-only, read-only iterator for reading data. You must call ReadNext before you can access any data. This is a base class for MgDataReader, MgFeatureReader, and MgSqlDataReader. public class MgReader : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgReader Implements IDisposable Derived MgDataReader MgFeatureReader MgSqlDataReader Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Close() Closes the object, freeing any resources it may be holding. public void Close() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBLOB(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetBLOB(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns MgByteReader Returns the BLOB value in an MgByteReader object. Exceptions MgException MgInvalidPropertyTypeException\"> GetBLOB(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetBLOB(string propertyName) Parameters propertyName string (String/string) The property name. Returns MgByteReader Returns the BLOB value in an MgByteReader object. Exceptions MgException MgInvalidPropertyTypeException\"> GetBoolean(int) Gets the Boolean value of the specified property. public bool GetBoolean(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns bool Returns the Boolean value. Exceptions MgException MgInvalidPropertyTypeException\"> GetBoolean(string) Gets the Boolean value of the specified property. public bool GetBoolean(string propertyName) Parameters propertyName string (String/string) The property name. Returns bool Returns the Boolean value. Exceptions MgException MgInvalidPropertyTypeException\"> GetByte(int) Gets the Byte value of the specified property. public byte GetByte(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns byte Returns the Byte value. Exceptions MgException MgInvalidPropertyTypeException\"> GetByte(string) Gets the Byte value of the specified property. public byte GetByte(string propertyName) Parameters propertyName string (String/string) The property name. Returns byte Returns the Byte value. Exceptions MgException MgInvalidPropertyTypeException\"> GetCLOB(int) Gets the CLOB value of the specified property. public MgByteReader GetCLOB(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns MgByteReader Returns the CLOB value in an MgByteReader object. Exceptions MgException MgInvalidPropertyTypeException\"> GetCLOB(string) Gets the CLOB value of the specified property. public MgByteReader GetCLOB(string propertyName) Parameters propertyName string (String/string) The property name. Returns MgByteReader Returns the CLOB value in an MgByteReader object. Exceptions MgException MgInvalidPropertyTypeException\"> GetDateTime(int) Gets the MgDateTime value of the specified property. public MgDateTime GetDateTime(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns MgDateTime Returns an MgDateTime object. Exceptions MgException MgInvalidPropertyTypeException\"> GetDateTime(string) Gets the MgDateTime value of the specified property. public MgDateTime GetDateTime(string propertyName) Parameters propertyName string (String/string) The property name. Returns MgDateTime Returns an MgDateTime object. Exceptions MgException MgInvalidPropertyTypeException\"> GetDouble(int) Gets the Double value of the specified property. public double GetDouble(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns double Returns the double value. Exceptions MgException MgInvalidPropertyTypeException\"> GetDouble(string) Gets the Double value of the specified property. public double GetDouble(string propertyName) Parameters propertyName string (String/string) The property name. Returns double Returns the double value. Exceptions MgException MgInvalidPropertyTypeException\"> GetGeometry(int) Gets the Geometry for the specified property. public MgByteReader GetGeometry(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns MgByteReader Returns a geometry in AGF binary format in an MgByteReader object. Exceptions MgException MgInvalidPropertyTypeException\"> GetGeometry(string) Gets the Geometry for the specified property. public MgByteReader GetGeometry(string propertyName) Parameters propertyName string (String/string) The property name. Returns MgByteReader Returns a geometry in AGF binary format in an MgByteReader object. Exceptions MgException MgInvalidPropertyTypeException\"> GetInt16(int) Gets the 16 bit integer value of the specified property. public short GetInt16(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns short Returns the 16 bit integer value. Exceptions MgException MgInvalidPropertyTypeException\"> GetInt16(string) Gets the 16 bit integer value of the specified property. public short GetInt16(string propertyName) Parameters propertyName string (String/string) The property name. Returns short Returns the 16 bit integer value. Exceptions MgException MgInvalidPropertyTypeException\"> GetInt32(int) Gets the 32 bit integer value of the specified property. public int GetInt32(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns int Returns the integer 32 bits value. Exceptions MgException MgInvalidPropertyTypeException\"> GetInt32(string) Gets the 32 bit integer value of the specified property. public int GetInt32(string propertyName) Parameters propertyName string (String/string) The property name. Returns int Returns the integer 32 bits value. Exceptions MgException MgInvalidPropertyTypeException\"> GetInt64(int) Gets the 64 bit integer value of the specified property. public long GetInt64(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns long Returns the integer 64 bits value. Exceptions MgException MgInvalidPropertyTypeException\"> GetInt64(string) Gets the 64 bit integer value of the specified property. public long GetInt64(string propertyName) Parameters propertyName string (String/string) The property name. Returns long Returns the integer 64 bits value. Exceptions MgException MgInvalidPropertyTypeException\"> GetPropertyCount() Gets the number of properties in the feature currently being read. public int GetPropertyCount() Returns int Returns the number of properties. GetPropertyIndex(string) Gets the index of the property with the specified property name. public int GetPropertyIndex(string propertyName) Parameters propertyName string (String/string) The name of the property in the list of properties belonging to the feature currently being read. Returns int Returns the property index. GetPropertyName(int) Gets the name of the property at the given ordinal position. public string GetPropertyName(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns string Returns the property name. GetPropertyType(int) Gets the type of the property at the specified index. See MgPropertyType for the list of possible values. public int GetPropertyType(int index) Parameters index int (index) The property index. Returns int Returns an MgPropertyType value. GetPropertyType(string) Gets the type of the property with the specified name. See MgPropertyType for the list of possible values. public int GetPropertyType(string propertyName) Parameters propertyName string (String/string) The property name. Returns int Returns an MgPropertyType value. GetRaster(int) Gets the raster object of the specified property. public MgRaster GetRaster(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns MgRaster Returns an MgRaster object. Exceptions MgException with code (MgConnectionNotOpenException) MgNullPropertyValueException MgException with code (MgFdoException) MgInvalidPropertyTypeException MgException MgInvalidPropertyTypeException\"> GetRaster(string) Gets the raster object of the specified property. public MgRaster GetRaster(string propertyName) Parameters propertyName string (String/string) The property name. Returns MgRaster Returns an MgRaster object. Exceptions MgException with code (MgConnectionNotOpenException) MgNullPropertyValueException MgException with code (MgFdoException) MgInvalidPropertyTypeException MgException MgInvalidPropertyTypeException\"> GetReaderType() Get the type of this reader. See MgReaderType for a list of the possible values. public int GetReaderType() Returns int Returns an MgReaderType value. GetSingle(int) Gets the Single value of the specified property. public float GetSingle(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns float Returns the single value. Exceptions MgException MgInvalidPropertyTypeException\"> GetSingle(string) Gets the Single value of the specified property. public float GetSingle(string propertyName) Parameters propertyName string (String/string) The property name. Returns float Returns the single value. Exceptions MgException MgInvalidPropertyTypeException\"> GetString(int) Gets the string value of the specified property. public string GetString(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns string Returns the string value. Exceptions MgException MgInvalidPropertyTypeException\"> GetString(string) Gets the string value of the specified property. public string GetString(string propertyName) Parameters propertyName string (String/string) The property name. Returns string Returns the string value. Exceptions MgException MgInvalidPropertyTypeException\"> IsNull(int) Determines whether the value of the specified property is null. public bool IsNull(int index) Parameters index int (int) The position of the property in the list of properties belonging to the feature currently being read. Returns bool Returns true if the value is null; otherwise returns false. IsNull(string) Determines whether the value of the specified property is null. public bool IsNull(string propertyName) Parameters propertyName string (String/string) The property name. Returns bool Returns true if the value is null; otherwise returns false. ReadNext() Advances the reader to the next item and determines whether there is another object to read. public bool ReadNext() Returns bool Returns true if there is a next item; otherwise returns false. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Serializes the unread features in the reader into an XML format. The XML format of the output is governed by the OSGeo.MapGuide.MgFeatureSet schema. public MgByteReader ToXml() Returns MgByteReader MgByteReader holding XML."
  },
  "api/OSGeo.MapGuide.MgReaderType.html": {
    "href": "api/OSGeo.MapGuide.MgReaderType.html",
    "title": "Class MgReaderType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgReaderType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Type of reader represented by an MgReader public class MgReaderType Inheritance object MgReaderType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataReader Signifies that the object is of type MgDataReader. public const int DataReader = 1 Field Value int FeatureReader Signifies that the object is of type MgFeatureReader. public const int FeatureReader = 0 Field Value int SqlDataReader Signifies that the object is of type MgSqlDataReader. public const int SqlDataReader = 2 Field Value int"
  },
  "api/OSGeo.MapGuide.MgRegion.html": {
    "href": "api/OSGeo.MapGuide.MgRegion.html",
    "title": "Class MgRegion | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRegion Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgRegion is an abstract base class The concrete classes are MgPolygon and MgCurvePolygon. public class MgRegion : MgGeometry, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometry MgRegion Implements IDisposable Derived MgCurvePolygon MgPolygon Inherited Members MgGeometry.GeometryType MgGeometry.GetGeometryType() MgGeometry.Contains(MgGeometry) MgGeometry.Crosses(MgGeometry) MgGeometry.Disjoint(MgGeometry) MgGeometry.Equals(MgGeometry) MgGeometry.Intersects(MgGeometry) MgGeometry.Overlaps(MgGeometry) MgGeometry.Touches(MgGeometry) MgGeometry.Within(MgGeometry) MgGeometry.Boundary() MgGeometry.Buffer(double, MgMeasure) MgGeometry.ConvexHull() MgGeometry.Difference(MgGeometry) MgGeometry.Distance(MgGeometry, MgMeasure) MgGeometry.Intersection(MgGeometry) MgGeometry.SymetricDifference(MgGeometry) MgGeometry.Union(MgGeometry) MgGeometry.Prepare() MgGeometry.Tessellate() MgGeometricEntity.Dimension MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.GetDimension() MgGeometricEntity.IsEmpty() MgGeometricEntity.IsSimple() MgGeometricEntity.IsClosed() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.Copy() MgGeometricEntity.Transform(MgTransform) MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Coordinates public MgCoordinateIterator Coordinates { get; } Property Value MgCoordinateIterator PointInRegion public MgPoint PointInRegion { get; } Property Value MgPoint Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinates() Returns an iterator over the coordinates included in this geometric entity. public MgCoordinateIterator GetCoordinates() Returns MgCoordinateIterator The coordinates of this geometric entity GetPointInRegion() Gets a point guaranteed to be within the region. public MgPoint GetPointInRegion() Returns MgPoint An MgPoint that defines a point in the region."
  },
  "api/OSGeo.MapGuide.MgRenderingOptions.html": {
    "href": "api/OSGeo.MapGuide.MgRenderingOptions.html",
    "title": "Class MgRenderingOptions | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRenderingOptions Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Options for Rendering Service. public class MgRenderingOptions : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgRenderingOptions Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgRenderingOptions(string, int, MgColor) Construct an MgRenderingOptions object public MgRenderingOptions(string format, int behavior, MgColor selectionColor) Parameters format string Input Image format. Defines the format of the resulting image behavior int Input A bitmask with the rendering behavior values selectionColor MgColor Input Selection color, including filling color and boundary color Fields KeepSelection public static readonly int KeepSelection Field Value int RenderBaseLayers public static readonly int RenderBaseLayers Field Value int RenderLayers public static readonly int RenderLayers Field Value int RenderSelection public static readonly int RenderSelection Field Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetBehavior() Get the rendering behavior public int GetBehavior() Returns int The integer value GetImageFormat() Get the image format public string GetImageFormat() Returns string The string value GetSelectionColor() Get the selection color public MgColor GetSelectionColor() Returns MgColor The MgColor object"
  },
  "api/OSGeo.MapGuide.MgRenderingService.html": {
    "href": "api/OSGeo.MapGuide.MgRenderingService.html",
    "title": "Class MgRenderingService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRenderingService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll This class provides services to render a map into an image public class MgRenderingService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgRenderingService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool QueryFeatureProperties(MgMap, MgStringCollection, MgGeometry, int, int) The QueryFeatureProeprties operation identifies those features that meet the specified spatial selection criteria. This operation is used to implement WMS feature info and returns property values for all features which match the spatial query public MgBatchPropertyCollection QueryFeatureProperties(MgMap map, MgStringCollection layerNames, MgGeometry filterGeometry, int selectionVariant, int maxFeatures) Parameters map MgMap Input map object containing current state of map. layerNames MgStringCollection Input Active layer names for which to query features filterGeometry MgGeometry Input geometry object specifying the selection area selectionVariant int Input selection criterion - integer value corresponding to one of the MgFeatureSpatialOperations values maxFeatures int Input the maximum number of features to return Returns MgBatchPropertyCollection An MgSelection instance identifying the features that meet the selection criteria. Returns null if no features are identified. QueryFeatureProperties(MgMap, MgStringCollection, MgGeometry, int, string, int, int) The QueryFeatureProperties operation identifies those features that meet the specified spatial selection criteria. This operation is used to implement WMS feature info and returns property values for all features which match the spatial query public MgBatchPropertyCollection QueryFeatureProperties(MgMap map, MgStringCollection layerNames, MgGeometry filterGeometry, int selectionVariant, string featureFilter, int maxFeatures, int layerAttributeFilter) Parameters map MgMap Input map object containing current state of map. layerNames MgStringCollection Input Active layer names for which to query features filterGeometry MgGeometry Input geometry object specifying the selection area selectionVariant int Input selection criterion - integer value corresponding to one of the MgFeatureSpatialOperations values featureFilter string Input an XML selection string containing the required feature IDs maxFeatures int Input the maximum number of features to return layerAttributeFilter int Input bitmask values - 1=Visible, 2=Selectable, 4=HasTooltips Returns MgBatchPropertyCollection An MgSelection instance identifying the features that meet the selection criteria. Returns null if no features are identified. QueryFeatures(MgMap, MgStringCollection, MgGeometry, int, int) The QueryFeatures operation identifies those features that meet the specified spatial selection criteria. This operation is used to implement server-side selection. In addition to a selection set, this operation returns attribute information in case only one feature is selected public MgFeatureInformation QueryFeatures(MgMap map, MgStringCollection layerNames, MgGeometry filterGeometry, int selectionVariant, int maxFeatures) Parameters map MgMap Input map object containing current state of map. layerNames MgStringCollection Input Active layer names for which to query features filterGeometry MgGeometry Input geometry object specifying the selection area selectionVariant int Input selection criterion - integer value corresponding to one of the MgFeatureSpatialOperations values maxFeatures int Input the maximum number of features to return Returns MgFeatureInformation An MgSelection instance identifying the features that meet the selection criteria. Returns null if no features are identified. QueryFeatures(MgMap, MgStringCollection, MgGeometry, int, string, int, int) The QueryFeatures operation identifies those features that meet the specified spatial selection criteria. This operation is used to implement server-side selection. In addition to a selection set, this operation returns attribute information in case only one feature is selected public MgFeatureInformation QueryFeatures(MgMap map, MgStringCollection layerNames, MgGeometry filterGeometry, int selectionVariant, string featureFilter, int maxFeatures, int layerAttributeFilter) Parameters map MgMap Input map object containing current state of map. layerNames MgStringCollection Input Active layer names for which to query features filterGeometry MgGeometry Input geometry object specifying the selection area selectionVariant int Input selection criterion - integer value corresponding to one of the MgFeatureSpatialOperations values featureFilter string Input an XML selection string containing the required feature IDs maxFeatures int Input the maximum number of features to return layerAttributeFilter int Input bitmask values - 1=Visible, 2=Selectable, 4=HasTooltips Returns MgFeatureInformation An MgSelection instance identifying the features that meet the selection criteria. Returns null if no features are identified. RenderDynamicOverlay(MgMap, MgSelection, MgRenderingOptions) Renders all dynamic layers in the specified MgMap to a dynamic overlay image with a transparent background. The center, scale, size, and layers to be rendered are defined by the specified map instance. The format parameter must be set to an image format that supports transparency. public MgByteReader RenderDynamicOverlay(MgMap map, MgSelection selection, MgRenderingOptions options) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map options MgRenderingOptions Input rendering options Returns MgByteReader A byte reader containing the rendered image RenderDynamicOverlay(MgMap, MgSelection, string) Renders all dynamic layers in the specified MgMap to a dynamic overlay image with a transparent background. The center, scale, size, and layers to be rendered are defined by the specified map instance. The format parameter must be set to an image format that supports transparency. public MgByteReader RenderDynamicOverlay(MgMap map, MgSelection selection, string format) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image Returns MgByteReader A byte reader containing the rendered image RenderDynamicOverlay(MgMap, MgSelection, string, bool) Renders all dynamic layers in the specified MgMap to a dynamic overlay image with a transparent background. The center, scale, size, and layers to be rendered are defined by the specified map instance. The format parameter must be set to an image format that supports transparency. public MgByteReader RenderDynamicOverlay(MgMap map, MgSelection selection, string format, bool bKeepSelection) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, MgCoordinate, double, int, int, MgColor, string) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, MgCoordinate center, double scale, int width, int height, MgColor backgroundColor, string format) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map center MgCoordinate Input map center point. Specifies the center point for the map scale double Input map scale. Specifies the scale for the map width int Input image width. Specifies the image width in pixels height int Input image height. Specifies the image height in pixels backgroundColor MgColor Input background color. Specifies the map background color format string Input image format. Defines the format of the resulting image Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, MgCoordinate, double, int, int, MgColor, string, bool) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, MgCoordinate center, double scale, int width, int height, MgColor backgroundColor, string format, bool bKeepSelection) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map center MgCoordinate Input map center point. Specifies the center point for the map scale double Input map scale. Specifies the scale for the map width int Input image width. Specifies the image width in pixels height int Input image height. Specifies the image height in pixels backgroundColor MgColor Input background color. Specifies the map background color format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, MgCoordinate, double, int, int, MgColor, string, bool, MgColor) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, MgCoordinate center, double scale, int width, int height, MgColor backgroundColor, string format, bool bKeepSelection, MgColor selectionColor) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map center MgCoordinate Input map center point. Specifies the center point for the map scale double Input map scale. Specifies the scale for the map width int Input image width. Specifies the image width in pixels height int Input image height. Specifies the image height in pixels backgroundColor MgColor Input background color. Specifies the map background color format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection selectionColor MgColor Input The color to use for rendered selections Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, MgEnvelope, int, int, MgColor, string) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, MgEnvelope extents, int width, int height, MgColor backgroundColor, string format) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map extents MgEnvelope Input map extents. Specifies the extents for the map width int Input image width. Specifies the image width in pixels height int Input image height. Specifies the image height in pixels backgroundColor MgColor Input background color. Specifies the map background color format string Input image format. Defines the format of the resulting image Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, MgEnvelope, int, int, MgColor, string, bool) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, MgEnvelope extents, int width, int height, MgColor backgroundColor, string format, bool bKeepSelection) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map extents MgEnvelope Input map extents. Specifies the extents for the map width int Input image width. Specifies the image width in pixels height int Input image height. Specifies the image height in pixels backgroundColor MgColor Input background color. Specifies the map background color format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, string) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, string format) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, string, bool) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, string format, bool bKeepSelection) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, string, bool, bool) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, string format, bool bKeepSelection, bool bClip) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection bClip bool Input true if you want to clip feature geometry Returns MgByteReader A byte reader containing the rendered image RenderMap(MgMap, MgSelection, string, bool, bool, MgColor) Renders the specified MgMap to the requested image format. public MgByteReader RenderMap(MgMap map, MgSelection selection, string format, bool bKeepSelection, bool bClip, MgColor selectionColor) Parameters map MgMap Input map object containing current state of map. selection MgSelection Input map feature selection. Specifies the selected features on the map format string Input image format. Defines the format of the resulting image bKeepSelection bool Input true if you want to keep the selection bClip bool Input true if you want to clip feature geometry selectionColor MgColor Returns MgByteReader A byte reader containing the rendered image RenderMapLegend(MgMap, int, int, MgColor, string) Renders the legend for the specified MgMap to the requested size and format public MgByteReader RenderMapLegend(MgMap map, int width, int height, MgColor backgroundColor, string format) Parameters map MgMap Input map object containing current state of map. width int Input width of legend image in pixels height int Input height of legend image in pixels backgroundColor MgColor Input background color. Specifies the map legend background color format string Input image format. Defines the format of the resulting image Returns MgByteReader A byte reader containing the rendered image RenderMetatile(MgMap, string, int, int, int, int, int, string, double, int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns the specified base map tile for the given map. public MgMetatile RenderMetatile(MgMap map, string baseMapLayerGroupName, int tileColumn, int tileRow, int tileWidth, int tileHeight, int tileDpi, string tileImageFormat, double tileExtentOffset, int metaTilingFactor) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. tileColumn int Input Specifies the column index of the tile to return. tileRow int Input Specifies the row index of the tile to return. tileWidth int Input Specifies the width of the tile to return. tileHeight int Input Specifies the height of the tile to return. tileDpi int Input Specifies the dpi the tile to return. tileImageFormat string Input tileExtentOffset double Input Specifies the ratio by which the tile to be rendered should be &quot;buffered out\". The tile will be rendered at the specified width multiplied by the given ratio, which will be cropped back to the original requested size after rendering. This is to improve label placement on rendered tiles by giving extra \"breathing space\" to label placement algorithms. metaTilingFactor int Input The meta-tiling factor. If less than or equal to 1, no meta-tiling is done and the returned meta-tile can be extracted as the orignally requested tile image. If greater than 1, a tile that is m times bigger than the requested tile is rendered (where m is the specified tiling factor) and the raw image frame buffer of this meta-tile is returned instead. Returns MgMetatile A meta-tile with sufficient information for the consumer to properly sub-divide this back into sub-tiles of the originally requested size. RenderMetatileXYZ(MgMap, string, int, int, int, int, string, double, int, int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns the specified map tile for the given map. Tile structure is based on the XYZ tiling scheme used by Google Maps, OpenStreetMap, and others public MgMetatile RenderMetatileXYZ(MgMap map, string baseMapLayerGroupName, int x, int y, int z, int dpi, string tileImageFormat, double tileExtentOffset, int metaTilingFactor, int retinaScale) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. x int Input Specifies the row index of the tile to return. y int Input Specifies the column index of the tile to return. z int Input Specifies the zoom level of the tile to return. dpi int Input Specifies the dpi of the tile to return. tileImageFormat string Input Specifies the image format of the tile to return. tileExtentOffset double Input Specifies the ratio by which the tile to be rendered should be &quot;buffered out\". The tile will be rendered at the specified width multiplied by the given ratio, which will be cropped back to the original requested size after rendering. This is to improve label placement on rendered tiles by giving extra \"breathing space\" to label placement algorithms. metaTilingFactor int Input The meta-tiling factor. If less than or equal to 1, no meta-tiling is done and the returned meta-tile can be extracted as the orignally requested tile image. If greater than 1, a tile that is m times bigger than the requested tile is rendered (where m is the specified tiling factor) and the raw image frame buffer of this meta-tile is returned instead. retinaScale int Input The scaling factor to apply for &quot;retina\" tiles Returns MgMetatile A meta-tile with sufficient information for the consumer to properly sub-divide this back into sub-tiles of the originally requested size. RenderTile(MgMap, string, int, int) Returns the specified base map tile for the given map. [Obsolete(\"This method is deprecated\")] public MgByteReader RenderTile(MgMap map, string baseMapLayerGroupName, int tileColumn, int tileRow) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. tileColumn int Input Specifies the column index of the tile to return. tileRow int Input Specifies the row index of the tile to return. Returns MgByteReader A byte reader containing the rendered tile image. RenderTile(MgMap, string, int, int, int, int, int, string) Returns the specified base map tile for the given map. public MgByteReader RenderTile(MgMap map, string baseMapLayerGroupName, int tileColumn, int tileRow, int tileWidth, int tileHeight, int tileDpi, string tileImageFormat) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. tileColumn int Input Specifies the column index of the tile to return. tileRow int Input Specifies the row index of the tile to return. tileWidth int Input Specifies the width of the tile to return. tileHeight int Input Specifies the height of the tile to return. tileDpi int Input Specifies the dpi the tile to return. tileImageFormat string Input Returns MgByteReader A byte reader containing the rendered tile image. RenderTile(MgMap, string, int, int, int, int, int, string, double) Returns the specified base map tile for the given map. public MgByteReader RenderTile(MgMap map, string baseMapLayerGroupName, int tileColumn, int tileRow, int tileWidth, int tileHeight, int tileDpi, string tileImageFormat, double tileExtentOffset) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. tileColumn int Input Specifies the column index of the tile to return. tileRow int Input Specifies the row index of the tile to return. tileWidth int Input Specifies the width of the tile to return. tileHeight int Input Specifies the height of the tile to return. tileDpi int Input Specifies the dpi the tile to return. tileImageFormat string Input tileExtentOffset double Specifies the ratio by which the tile to be rendered should be &quot;buffered out\". The tile will be rendered at the specified width multiplied by the given ration, which will be cropped back to the original requested size after rendering. This is to improve label placement on rendered tiles by giving extra \"breathing space\" to label placement algorithms. Returns MgByteReader A byte reader containing the rendered tile image. RenderTileFromMetaTile(MgMap, MgMetatile, int, int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns the requested sub-tile from the given metatile public MgByteReader RenderTileFromMetaTile(MgMap map, MgMetatile metaTile, int subTileX, int subTileY) Parameters map MgMap Input map object containing current state of map. metaTile MgMetatile Input The meta-tile from which a subtile is being requested for subTileX int Input The x sub-tile coordinate of the meta-tile to request subTileY int Input The y sub-tile coordinate of the meta-tile to request Returns MgByteReader The requested sub-tile RenderTileMVT(MgMap, string, int, int, int, int) Returns the specified MVT (Mapbox Vector Tile) for the given map. Tile structure is based on the XYZ tiling scheme used by Google Maps, OpenStreetMap, and others public MgByteReader RenderTileMVT(MgMap map, string baseMapLayerGroupName, int x, int y, int z, int dpi) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. x int Input Specifies the row index of the tile to return. y int Input Specifies the column index of the tile to return. z int Input Specifies the zoom level of the tile to return. dpi int Input Specifies the dpi of the tile to return. Returns MgByteReader A byte reader containing the rendered tile image. RenderTileUTFGrid(MgMap, string, int, int, int, int) Returns the specified UTFGrid tile for the given map. Tile structure is based on the XYZ tiling scheme used by Google Maps, OpenStreetMap, and others public MgByteReader RenderTileUTFGrid(MgMap map, string baseMapLayerGroupName, int x, int y, int z, int dpi) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. x int Input Specifies the row index of the tile to return. y int Input Specifies the column index of the tile to return. z int Input Specifies the zoom level of the tile to return. dpi int Input Specifies the dpi of the tile to return. Returns MgByteReader A byte reader containing the rendered tile image. RenderTileXYZ(MgMap, string, int, int, int) Returns the specified map tile for the given map. Tile structure is based on the XYZ tiling scheme used by Google Maps, OpenStreetMap, and others public MgByteReader RenderTileXYZ(MgMap map, string baseMapLayerGroupName, int x, int y, int z) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. x int Input Specifies the row index of the tile to return. y int Input Specifies the column index of the tile to return. z int Input Specifies the zoom level of the tile to return. Returns MgByteReader A byte reader containing the rendered tile image. RenderTileXYZ(MgMap, string, int, int, int, int, string) Returns the specified map tile for the given map. Tile structure is based on the XYZ tiling scheme used by Google Maps, OpenStreetMap, and others public MgByteReader RenderTileXYZ(MgMap map, string baseMapLayerGroupName, int x, int y, int z, int dpi, string tileImageFormat) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. x int Input Specifies the row index of the tile to return. y int Input Specifies the column index of the tile to return. z int Input Specifies the zoom level of the tile to return. dpi int Input Specifies the dpi of the tile to return. tileImageFormat string Input Specifies the image format of the tile to return. Returns MgByteReader A byte reader containing the rendered tile image. RenderTileXYZ(MgMap, string, int, int, int, int, string, double, int) Returns the specified map tile for the given map. Tile structure is based on the XYZ tiling scheme used by Google Maps, OpenStreetMap, and others public MgByteReader RenderTileXYZ(MgMap map, string baseMapLayerGroupName, int x, int y, int z, int dpi, string tileImageFormat, double tileExtentOffset, int retinaScale) Parameters map MgMap Input map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. x int Input Specifies the row index of the tile to return. y int Input Specifies the column index of the tile to return. z int Input Specifies the zoom level of the tile to return. dpi int Input Specifies the dpi of the tile to return. tileImageFormat string Input Specifies the image format of the tile to return. tileExtentOffset double Specifies the ratio by which the tile to be rendered should be &quot;buffered out\". The tile will be rendered at the specified width multiplied by the given ration, which will be cropped back to the original requested size after rendering. This is to improve label placement on rendered tiles by giving extra \"breathing space\" to label placement algorithms. retinaScale int The scaling factor to apply for &quot;retina\" tiles Returns MgByteReader A byte reader containing the rendered tile image."
  },
  "api/OSGeo.MapGuide.MgRepositoryType.html": {
    "href": "api/OSGeo.MapGuide.MgRepositoryType.html",
    "title": "Class MgRepositoryType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRepositoryType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines names for the different types of repositories. public class MgRepositoryType Inheritance object MgRepositoryType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Library TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Library = \"Library\" Field Value string Session TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string Session = \"Session\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgResource.html": {
    "href": "api/OSGeo.MapGuide.MgResource.html",
    "title": "Class MgResource | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResource Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll The abstract base class for all resource types. public class MgResource : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgResource Implements IDisposable Derived MgMapBase MgSelectionBase Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetResourceId() Identifies the resource. public MgResourceIdentifier GetResourceId() Returns MgResourceIdentifier Returns the unique identifier for this resource or NULL if the resource has not yet been opened or saved. Open(MgResourceService, MgResourceIdentifier) Opens the resource using the specified resource service and resource identifier. public void Open(MgResourceService resourceService, MgResourceIdentifier resourceId) Parameters resourceService MgResourceService Resource service. resourceId MgResourceIdentifier Resource identifier. Save(MgResourceService) Saves the resource using the specified resource service. public void Save(MgResourceService resourceService) Parameters resourceService MgResourceService Resource service. Save(MgResourceService, MgResourceIdentifier) Saves the resource using the specified resource service and resource identifier. public void Save(MgResourceService resourceService, MgResourceIdentifier resourceId) Parameters resourceService MgResourceService Resource service to use to save this resource. resourceId MgResourceIdentifier Resource identifier."
  },
  "api/OSGeo.MapGuide.MgResourceDataName.html": {
    "href": "api/OSGeo.MapGuide.MgResourceDataName.html",
    "title": "Class MgResourceDataName | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResourceDataName Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines reserved names for resource data. public class MgResourceDataName Inheritance object MgResourceDataName Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ProxyCredentials Data name for adding proxy credentials to a resource. public const string ProxyCredentials = \"MG_PROXY_CREDENTIALS\" Field Value string ProxyServerName Data name for adding proxy server name to a resource. public const string ProxyServerName = \"MG_PROXY_SERVER\" Field Value string ProxyServerPort Data name for adding proxy server port to a resource. public const string ProxyServerPort = \"MG_PROXY_PORT\" Field Value string UserCredentials Data name for adding default credentials to a resource. public const string UserCredentials = \"MG_USER_CREDENTIALS\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgResourceDataType.html": {
    "href": "api/OSGeo.MapGuide.MgResourceDataType.html",
    "title": "Class MgResourceDataType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResourceDataType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgResourceDataType Inheritance object MgResourceDataType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields File Resource data stored as a file on disk. public const string File = \"File\" Field Value string Stream Stream resource data is stored as a binary stream in the repository database. public const string Stream = \"Stream\" Field Value string String Resource data is stored as a string. public const string String = \"String\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgResourceHeaderProperties.html": {
    "href": "api/OSGeo.MapGuide.MgResourceHeaderProperties.html",
    "title": "Class MgResourceHeaderProperties | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResourceHeaderProperties Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Properties of the resource header. INTERNAL - Do not document. public class MgResourceHeaderProperties Inheritance object MgResourceHeaderProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields General public const int General = 1 Field Value int Metadata public const int Metadata = 4 Field Value int Security public const int Security = 2 Field Value int"
  },
  "api/OSGeo.MapGuide.MgResourceIdentifier.html": {
    "href": "api/OSGeo.MapGuide.MgResourceIdentifier.html",
    "title": "Class MgResourceIdentifier | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResourceIdentifier Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Creates and manipulates resource identifiers. public class MgResourceIdentifier : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgResourceIdentifier Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MgResourceIdentifier(string) Initialize and validate a resource identifier from a string. public MgResourceIdentifier(string resource) Parameters resource string (String/string) Exceptions MgException MgOutOfMemoryException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> MgException MgInvalidRepositoryTypeException\"> Properties Name public string Name { get; set; } Property Value string Path public string Path { get; set; } Property Value string RepositoryName public string RepositoryName { get; set; } Property Value string RepositoryType public string RepositoryType { get; set; } Property Value string ResourceType public string ResourceType { get; set; } Property Value string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetName() Extracts the resource's name from the resource identifier. public string GetName() Returns string Returns the resource name. GetPath() Extracts the resource's path from the resource identifier. public string GetPath() Returns string Returns the resource's path. GetRepositoryName() Extracts the repository name from a resource's identifier. public string GetRepositoryName() Returns string Returns the repository name. For session repositories, the name is the session ID. For library repositories, the name is an empty string. GetRepositoryType() Extracts the repository type from a resource's identifier. public string GetRepositoryType() Returns string Returns the repository type. Legal repository types are GetResourceType() Extracts the resource's type from the resource identifier. public string GetResourceType() Returns string Returns the resource's type string, as defined in MgResourceType. SetName(string) Set the resource name public void SetName(string name) Parameters name string (String/string) Resource name. It can contain spaces but cannot contain any of the characters %*:|?&lt;'&\">= SetPath(string) Set the resource path within the repository. public void SetPath(string path) Parameters path string (String/string) Resource path within the repository. It can contain spaces but cannot contain any of the characters SetRepositoryName(string) Sets the repository name. public void SetRepositoryName(string name) Parameters name string (String/string) Repository name. &lt;ul> <li>If the repository is the library, the name must be an empty string.</li> <li>If the repository is a session repository, the name cannot be empty.</li> </ul> SetRepositoryType(string) Sets the repository type. public void SetRepositoryType(string type) Parameters type string (String/string) Repository type string. Legal repository SetResourceType(string) Sets the resource type. public void SetResourceType(string type) Parameters type string (String/string) ToString() Converts the resource identifier into a string. public string ToString() Returns string Returns a fully qualified resource specifier string. Validate() Validates the resource identifier. This method should be called after the identifier has been fully specified by constructor and/or Set methods. public void Validate() Exceptions MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\">"
  },
  "api/OSGeo.MapGuide.MgResourcePermission.html": {
    "href": "api/OSGeo.MapGuide.MgResourcePermission.html",
    "title": "Class MgResourcePermission | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResourcePermission Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Types of resource permissions. public class MgResourcePermission Inheritance object MgResourcePermission Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PermissionNoAccess No Access permission. public const string PermissionNoAccess = \"n\" Field Value string PermissionReadOnly Read-Only permission. public const string PermissionReadOnly = \"r\" Field Value string PermissionReadWrite Read/Write permission. public const string PermissionReadWrite = \"r,w\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgResourceService.html": {
    "href": "api/OSGeo.MapGuide.MgResourceService.html",
    "title": "Class MgResourceService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResourceService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Enables you to manipulate repositories and resources. public class MgResourceService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgResourceService Implements IDisposable Derived MgPortableResourceService Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyResourcePackage(MgByteReader) Applies a package of resource changes to the repository. public void ApplyResourcePackage(MgByteReader resourcePackage) Parameters resourcePackage MgByteReader (MgByteReader) The package containing resources to update. Exceptions MgException MgNullArgumentException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> MgException MgOutOfMemoryException\"> ChangeResourceOwner(MgResourceIdentifier, string, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void ChangeResourceOwner(MgResourceIdentifier resource, string owner, bool includeDescendants) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource whose owner is to be changed. This owner string (String/string) The User ID of the new owner. (The User ID must already exist. You can create User IDs through the Site Administrator tool.) includeDescendants bool (boolean/bool) Flag to determine whether or not the owners of descendant resources should be also be changed. This flag is applicable only if the resource is a folder. Exceptions MgException MgPermissionDeniedException\"> MgException MgResourceNotFoundException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> CopyResource(MgResourceIdentifier, MgResourceIdentifier, bool) Copies an existing resource to another location. public void CopyResource(MgResourceIdentifier sourceResource, MgResourceIdentifier destResource, bool overwrite) Parameters sourceResource MgResourceIdentifier (MgResourceIdentifier) Resource to be copied from. This can be a document or folder. destResource MgResourceIdentifier (MgResourceIdentifier) Where the resource should be copied to. overwrite bool (boolean/bool) Flag to determine whether or not the destination resource should be overwritten if it exists. Exceptions MgException MgResourceNotFoundException\"> MgException MgDuplicateResourceException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> DeleteResource(MgResourceIdentifier) Deletes an existing resource and its associated data from the repository. public void DeleteResource(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the resource to Exceptions MgException MgInvalidResourceTypeException\"> DeleteResourceData(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void DeleteResourceData(MgResourceIdentifier resource, string dataName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource for which the resource data will be deleted. dataName string (String/string) Name for data. Exceptions MgException MgInvalidResourceTypeException\"> Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnumerateReferences(MgResourceIdentifier) Enumerates all the resources which reference the specified resource. public MgByteReader EnumerateReferences(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource to get references for. Returns MgByteReader Returns an MgByteReader object containing the list of all resources which reference the specified resource. The list is Exceptions MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> EnumerateResourceData(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader EnumerateResourceData(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource for which the resource data will be listed. Returns MgByteReader Returns an MgByteReader object representing the description Exceptions MgException MgInvalidResourceTypeException\"> EnumerateResourceDocuments(MgStringCollection, string, int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Enumerate the resource documents in the specified repository. public string EnumerateResourceDocuments(MgStringCollection resources, string type, int properties) Parameters resources MgStringCollection Resource identifiers specifying the resources to enumerate. type string Type of the resource to be enumerated. See MgResourceType for valid types. No folder type is allowed. properties int Flag to specify which properties of the resource header should be filtered. It may be set to 0 or by bitwise inclusively OR&apos;ing together one or more of the MgResourceHeaderProperties values. Returns string Returns a string containing a description of the WMS layer definitions Exceptions MgException MgInvalidResourceTypeException\"> EnumerateResources(MgResourceIdentifier, int, string) Enumerates the resources in the specified repository. public MgByteReader EnumerateResources(MgResourceIdentifier resource, int depth, string type) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the resource to enumerate. This can be a document or a folder. depth int (int) Recursion depth, relative to the specified resource. &lt;ul> <li>If the resource is a document, depth must be set to 0. </li> <li>If the resource is a folder: </li> <ul> <li>If the depth is equal to 0, only information about the specified folder is returned. </li> <li>If the depth is greater than 0, information about the folder and its descendants up to the specified depth are returned. </li> </ul> <li>If the depth is -1, information about the folder and all its descendants is returned. </li> </ul> type string (String/string) Type of the resource to be enumerated. (Case Returns MgByteReader Returns an MgByteReader object containing a description of Exceptions MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> EnumerateResources(MgResourceIdentifier, int, string, bool) Enumerates the resources in the specified repository. public MgByteReader EnumerateResources(MgResourceIdentifier resource, int depth, string type, bool computeChildren) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the resource to enumerate. This can be a document or a folder. depth int (int) Recursion depth, relative to the specified resource. &lt;ul> <li>If the resource is a document, depth must be set to 0. </li> <li>If the resource is a folder: </li> <ul> <li>If the depth is equal to 0, only information about the specified folder is returned. </li> <li>If the depth is greater than 0, information about the folder and its descendants up to the specified depth are returned. </li> </ul> <li>If the depth is -1, information about the folder and all its descendants is returned. </li> </ul> type string (String/string) Type of the resource to be enumerated. (Case computeChildren bool (boolean/bool) Flag to determine whether or not the number of children of the leaf folder resource at the specified depth should be computed. &lt;ul> <li>If it is true, then the number of children of the leaf folder resource at the specified depth will be set to a computed value (>= 0). </li> <li>If it is false, then the number of children of the leaf folder resource at the specified depth will be set to -1. </li> </ul> Returns MgByteReader Returns an MgByteReader object containing a description of Exceptions MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> EnumerateUnmanagedData(string, bool, string, string) Enumerate unmanaged data public MgByteReader EnumerateUnmanagedData(string path, bool recursive, string type, string filter) Parameters path string (String/string) Unmanaged data path recursive bool (boolean/bool) Flag to determine whether to recurse subfolders or not type string (String/string) Folders, Files, or Both filter string (String/string) file filter to be used on returned files Returns MgByteReader Returns an MgByteReader object containing the unmanaged data GetRepositoryContent(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetRepositoryContent(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Repository to get the content for. Returns MgByteReader Returns an MgByteReader object containing the repository Exceptions MgException MgRepositoryNotFoundException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidRepositoryTypeException\"> GetRepositoryHeader(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetRepositoryHeader(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Repository to get the header for. Returns MgByteReader Returns an MgByteReader object containing the repository Exceptions MgException MgRepositoryNotFoundException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidRepositoryTypeException\"> GetResourceContent(MgResourceIdentifier) Gets the content of the specified resource. public MgByteReader GetResourceContent(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the resource. Returns MgByteReader Returns an MgByteReader object containing the resource content in XML format. The XML uses the schema appropriate Exceptions MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> GetResourceContents(MgStringCollection, MgStringCollection) Gets the contents of the specified resources. public MgStringCollection GetResourceContents(MgStringCollection resources, MgStringCollection preProcessTags) Parameters resources MgStringCollection A collection of resource identifiers describing the resources. preProcessTags MgStringCollection Pre-processing to apply to resource before returning content. If this parameter is NULL, it means no pre-processing. If this parameter is not NULL, it must be a collection of pre-processing types, and it should be one to one matching the collection of parameter resources. See OSGeo.MapGuide.MgResourcePreProcessingType for a list of supported pre-processing tags. Returns MgStringCollection MgStringCollection object representing the collection of corresponding resource contents. Exceptions MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> GetResourceData(MgResourceIdentifier, string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetResourceData(MgResourceIdentifier resource, string dataName) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource for which the resource data will be obtained. dataName string (String/string) Name for data (as specified when the data was Returns MgByteReader Returns an MgByteReader object containing the resource data. Exceptions MgException MgResourceDataNotFoundException\"> MgException MgInvalidResourceTypeException\"> GetResourceHeader(MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetResourceHeader(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource to get the header for. Returns MgByteReader Returns an MgByteReader object containing the resource Exceptions MgException MgInvalidResourceTypeException\"> GetResourceMetadata(MgResourceIdentifier) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the Metadata content of a resource. public MgByteReader GetResourceMetadata(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource in the repository which has metadata attached to it. Note the resource has to exist else this method fails. Returns MgByteReader The metadata content in XML format. This can null in which case the resource has no metadata attached. The schema of the Content is user driven and not given. Most people will use it for FGDC or ISO Metadata. Exceptions MgException MgInvalidResourceTypeException\"> GetResourceModifiedDate(MgResourceIdentifier) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns the modified date of the specified resource. public MgDateTime GetResourceModifiedDate(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource to get the modified date for. Returns MgDateTime An MgDateTime object containing the modified date of the resource. Exceptions MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidResourceTypeException\"> InheritPermissionsFrom(MgResourceIdentifier) Sets the permissions for all descendants of a specified folder to be inherited from the folder. public void InheritPermissionsFrom(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Folder that permissions are to be inherited from. You must include the trailing slash in the identifier. Exceptions MgException MgPermissionDeniedException\"> MgException MgResourceNotFoundException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> MoveResource(MgResourceIdentifier, MgResourceIdentifier, bool) Moves an existing resource to another location. public void MoveResource(MgResourceIdentifier sourceResource, MgResourceIdentifier destResource, bool overwrite) Parameters sourceResource MgResourceIdentifier (MgResourceIdentifier) Resource to be moved. This can be a document or folder. &lt;ul> <li>If it is a folder, this method also moves the contents of the folder and all folders below it.</li> <li>If it is a folder, you must include the trailing slash in the identifier.</li> </ul> destResource MgResourceIdentifier (MgResourceIdentifier) Where the resource should be moved to. overwrite bool (boolean/bool) Flag to determine whether or not the destination resource should be overwritten if it exists. Exceptions MgException MgResourceNotFoundException\"> MgException MgDuplicateResourceException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> MoveResource(MgResourceIdentifier, MgResourceIdentifier, bool, bool) Moves an existing resource to another location. public void MoveResource(MgResourceIdentifier sourceResource, MgResourceIdentifier destResource, bool overwrite, bool cascade) Parameters sourceResource MgResourceIdentifier (MgResourceIdentifier) Resource to be moved. This can be a document or folder. &lt;ul> <li>If it is a folder, this method also moves the contents of the folder and all folders below it.</li> <li>If it is a folder, you must include the trailing slash in the identifier.</li> </ul> destResource MgResourceIdentifier (MgResourceIdentifier) Where the resource should be moved to. overwrite bool (boolean/bool) Flag to determine whether or not the destination resource should be overwritten if it exists. cascade bool (boolean/bool) Flag to determine whether or not the referencing resources should be updated. Exceptions MgException MgResourceNotFoundException\"> MgException MgDuplicateResourceException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> RenameResourceData(MgResourceIdentifier, string, string, bool) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void RenameResourceData(MgResourceIdentifier resource, string oldDataName, string newDataName, bool overwrite) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource for which the resource data will be renamed. oldDataName string (String/string) Old data name. newDataName string (String/string) New data name. overwrite bool (boolean/bool) Flag to determine whether or not the destination resource data should be overwritten if it exists. Exceptions MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidResourceTypeException\"> MgException MgInvalidResourceDataTypeException\"> MgException MgResourceDataNotFoundException\"> MgException MgDuplicateResourceDataException\"> ResourceExists(MgResourceIdentifier) Checks to see if the specified resource exists. public bool ResourceExists(MgResourceIdentifier resource) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource identifier specifying the resource to be checked for existence. Returns bool Returns true if the resource exists, false otherwise. SetResource(MgResourceIdentifier, MgByteReader, MgByteReader) Adds a new resource to a resource repository, or updates an existing resource. public void SetResource(MgResourceIdentifier resource, MgByteReader content, MgByteReader header) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Location where the resource will be placed in the repository. content MgByteReader (MgByteReader) The resource content in XML format using the schema header MgByteReader (MgByteReader) Exceptions MgException MgInvalidResourceTypeException\"> SetResourceData(MgResourceIdentifier, string, string, MgByteReader) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void SetResourceData(MgResourceIdentifier resource, string dataName, string dataType, MgByteReader data) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Resource to which this data is to be associated. dataName string (String/string) Name for the data. dataType string (String/string) Data type for the resource data. It must match one of the types defined in MgResourceDataType and is case sensitive. Data names must be unique. data MgByteReader (MgByteReader) Data to set. Exceptions MgException MgInvalidRepositoryTypeException\"> MgException with code (MgInvalidResourceTypeException) if resource is a folder type MgException with code (MgInvalidResourceDataTypeException) if the specified SetResourceMetadata(MgResourceIdentifier, MgByteReader) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the Metadata content for an existing resource. public void SetResourceMetadata(MgResourceIdentifier resource, MgByteReader content) Parameters resource MgResourceIdentifier (MgResourceIdentifier) The resource in the repository that gets metadata attached to. Note the resource has to exist else this method fails content MgByteReader (MgByteReader) The metadata content in XML format. This can be set to null, in which case the content is cleared. The schema of the Content is user driven and not given. Most people will use it for FGDC or ISO Metadata. Exceptions MgException MgInvalidResourceTypeException\"> UpdateRepository(MgResourceIdentifier, MgByteReader, MgByteReader) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public void UpdateRepository(MgResourceIdentifier resource, MgByteReader content, MgByteReader header) Parameters resource MgResourceIdentifier (MgResourceIdentifier) Repository to update. content MgByteReader (MgByteReader) header MgByteReader (MgByteReader) &lt;ul> <li>If the repository is the library, this is the Exceptions MgException MgOutOfMemoryException\"> MgException with code (MgRepositoryNotFoundException) if repository does not MgException MgInvalidRepositoryTypeException\">"
  },
  "api/OSGeo.MapGuide.MgResourceTag.html": {
    "href": "api/OSGeo.MapGuide.MgResourceTag.html",
    "title": "Class MgResourceTag | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResourceTag Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Substitution tags used within the XML file for a resource. public class MgResourceTag Inheritance object MgResourceTag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataFilePath Replaced with the location of data files associated with the given resource. The trailing \"/\" is included. public const string DataFilePath = \"%MG_DATA_FILE_PATH%\" Field Value string DataPathAliasBegin Denotes beginning of data path alias. public const string DataPathAliasBegin = \"%MG_DATA_PATH_ALIAS[\" Field Value string DataPathAliasEnd Denotes end of data path alias. public const string DataPathAliasEnd = \"]%\" Field Value string LoginPassword Replaced with the password of the currently logged in user. public const string LoginPassword = \"%MG_LOGIN_PASSWORD%\" Field Value string LoginUsername Replaced with the name of the currently logged in user. public const string LoginUsername = \"%MG_LOGIN_USERNAME%\" Field Value string Password Replaced with the default resource-specific password. public const string Password = \"%MG_PASSWORD%\" Field Value string ProxyPassword Replaced with the proxy server password. public const string ProxyPassword = \"%MG_PROXY_PASSWORD%\" Field Value string ProxyPort Replaced with the proxy server port. public const string ProxyPort = \"%MG_PROXY_PORT%\" Field Value string ProxyServer Replaced with the proxy server name. public const string ProxyServer = \"%MG_PROXY_SERVER%\" Field Value string ProxyUsername Replaced with the proxy server user name. public const string ProxyUsername = \"%MG_PROXY_USERNAME%\" Field Value string TileCachePath Replaced with the location of tile cache associated with the given resource. The trailing \"/\" is included. public const string TileCachePath = \"%MG_TILE_CACHE_PATH%\" Field Value string Username Replaced with the default resource-specific username. public const string Username = \"%MG_USERNAME%\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgResourceType.html": {
    "href": "api/OSGeo.MapGuide.MgResourceType.html",
    "title": "Class MgResourceType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgResourceType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Defines names for the different types of resources. public class MgResourceType Inheritance object MgResourceType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ApplicationDefinition This resource represents a web application definition public const string ApplicationDefinition = \"ApplicationDefinition\" Field Value string DrawingSource TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string DrawingSource = \"DrawingSource\" Field Value string FeatureSource TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public const string FeatureSource = \"FeatureSource\" Field Value string Folder This resource is a folder. public const string Folder = \"Folder\" Field Value string LayerDefinition This resource is a layer definition. public const string LayerDefinition = \"LayerDefinition\" Field Value string LoadProcedure This resource is a load procedure definition. public const string LoadProcedure = \"LoadProcedure\" Field Value string Map This resource is the runtime definition of a map. public const string Map = \"Map\" Field Value string MapDefinition This resource is a map definition. public const string MapDefinition = \"MapDefinition\" Field Value string PrintLayout This resource is a print layout. public const string PrintLayout = \"PrintLayout\" Field Value string Selection This resource is the runtime definition of a selection. public const string Selection = \"Selection\" Field Value string SymbolDefinition This resource is a symbol definition. public const string SymbolDefinition = \"SymbolDefinition\" Field Value string SymbolLibrary This resource is a library of symbols. public const string SymbolLibrary = \"SymbolLibrary\" Field Value string TileSetDefinition This resource is a tile set definition. public const string TileSetDefinition = \"TileSetDefinition\" Field Value string WatermarkDefinition This resource is a watermark definition. public const string WatermarkDefinition = \"WatermarkDefinition\" Field Value string WebLayout This resource represents the screen layout for a specific map. public const string WebLayout = \"WebLayout\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgRing.html": {
    "href": "api/OSGeo.MapGuide.MgRing.html",
    "title": "Class MgRing | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRing Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgRing : MgGeometryComponent, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgGeometricEntity MgGeometryComponent MgRing Implements IDisposable Derived MgCurveRing MgLinearRing Inherited Members MgGeometryComponent.ComponentType MgGeometryComponent.GetComponentType() MgGeometricEntity.Dimension MgGeometricEntity.Area MgGeometricEntity.Length MgGeometricEntity.Centroid MgGeometricEntity.GetDimension() MgGeometricEntity.IsEmpty() MgGeometricEntity.IsSimple() MgGeometricEntity.IsClosed() MgGeometricEntity.IsValid() MgGeometricEntity.Envelope() MgGeometricEntity.Copy() MgGeometricEntity.Transform(MgTransform) MgGeometricEntity.GetArea() MgGeometricEntity.GetLength() MgGeometricEntity.GetCentroid() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Coordinates public MgCoordinateIterator Coordinates { get; } Property Value MgCoordinateIterator PointInRing public MgPoint PointInRing { get; } Property Value MgPoint Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinates() Returns an iterator over the coordinates included in this geometric entity. public MgCoordinateIterator GetCoordinates() Returns MgCoordinateIterator The coordinates of this geometric entity GetPointInRing() Gets a point guaranteed to be within the ring. public MgPoint GetPointInRing() Returns MgPoint An MgPoint that defines a point in the ring."
  },
  "api/OSGeo.MapGuide.MgRole.html": {
    "href": "api/OSGeo.MapGuide.MgRole.html",
    "title": "Class MgRole | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgRole Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll MapGuide roles. public class MgRole Inheritance object MgRole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Administrator public const string Administrator = \"Administrator\" Field Value string Author public const string Author = \"Author\" Field Value string Viewer public const string Viewer = \"Viewer\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgSelection.html": {
    "href": "api/OSGeo.MapGuide.MgSelection.html",
    "title": "Class MgSelection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSelection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgSelection : MgSelectionBase, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgResource MgSelectionBase MgSelection Implements IDisposable Inherited Members MgSelectionBase.GetSelectedFeaturesCount(MgLayerBase, string) MgSelectionBase.FromXml(string) MgSelectionBase.ToXml() MgSelectionBase.AddFeatures(MgLayerBase, MgFeatureReader, int) MgSelectionBase.AddFeatureIds(MgLayerBase, string, MgPropertyCollection) MgSelectionBase.AddFeatureIdInt16(MgLayerBase, string, short) MgSelectionBase.AddFeatureIdInt32(MgLayerBase, string, int) MgSelectionBase.AddFeatureIdInt64(MgLayerBase, string, long) MgSelectionBase.AddFeatureIdString(MgLayerBase, string, string) MgSelectionBase.AddFeatureIdDouble(MgLayerBase, string, double) MgSelectionBase.GetLayers() MgSelectionBase.GetClasses(string) MgSelectionBase.GetClass(string) MgSelectionBase.Contains(MgLayerBase, string) MgSelectionBase.GenerateFilter(MgLayerBase, string) MgSelectionBase.GenerateFilters(MgLayerBase, string, int) MgSelectionBase.GetExtents(MgFeatureService) MgSelectionBase.Add(string, string, string) MgSelectionBase.GetResourceName(string, string) MgSelectionBase.SetMap(MgMapBase) MgResource.GetResourceId() MgResource.Open(MgResourceService, MgResourceIdentifier) MgResource.Save(MgResourceService) MgResource.Save(MgResourceService, MgResourceIdentifier) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgSelection() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgSelection() MgSelection(MgMap) Initialize selection generation from a map public MgSelection(MgMap map) Parameters map MgMap MgSelection(MgMap, string) Initialize selection from a map and xml selection public MgSelection(MgMap map, string xmlSelectionString) Parameters map MgMap xmlSelectionString string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetSelectedFeatures(MgLayerBase, string, MgStringCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader GetSelectedFeatures(MgLayerBase layer, string className, MgStringCollection propertyNames) Parameters layer MgLayerBase (MgLayerBase) Input layer. className string (String/string) Input feature class name. propertyNames MgStringCollection (MgStringCollection) Properties to return for selected features. Returns MgFeatureReader Returns a feature reader containing all the features for the given feature class in this selection. GetSelectedFeatures(MgLayerBase, string, bool) Returns the selected feature data for the specified feature class. public MgFeatureReader GetSelectedFeatures(MgLayerBase layer, string className, bool mappedOnly) Parameters layer MgLayerBase (MgLayerBase) Input layer. className string (String/string) Input feature class name. mappedOnly bool (boolean/bool) Return mapped (true) or all (false) properties for selected features Returns MgFeatureReader Returns a feature reader containing all the features for the given feature class in this selection. Open(MgResourceService, string) Loads the selection object from a session repository. public void Open(MgResourceService resourceService, string mapName) Parameters resourceService MgResourceService (MgResourceService) An MgResourceService that can be used to retrieve the map. mapName string (String/string) A string that specifies the name of the map. This Save(MgResourceService, string) Save the selection object to a session repository. public void Save(MgResourceService resourceService, string mapName) Parameters resourceService MgResourceService (MgResourceService) An MgResourceService that can be used to retrieve the map. mapName string (String/string) A string that specifies the name of the map. This"
  },
  "api/OSGeo.MapGuide.MgSelectionBase.html": {
    "href": "api/OSGeo.MapGuide.MgSelectionBase.html",
    "title": "Class MgSelectionBase | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSelectionBase Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgSelectionBase : MgResource, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgResource MgSelectionBase Implements IDisposable Derived MgPortableSelection MgSelection Inherited Members MgResource.GetResourceId() MgResource.Open(MgResourceService, MgResourceIdentifier) MgResource.Save(MgResourceService) MgResource.Save(MgResourceService, MgResourceIdentifier) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgSelectionBase(MgMapBase) Initialize selection generation from a map public MgSelectionBase(MgMapBase map) Parameters map MgMapBase MgSelectionBase(MgMapBase, string) Initialize selection from a map and xml selection public MgSelectionBase(MgMapBase map, string xmlSelectionString) Parameters map MgMapBase xmlSelectionString string Methods Add(string, string, string) Adds the given feature (represented by its base64 encoded id) to the selection set public void Add(string layer, string className, string id) Parameters layer string (CREFSTRING) Name of layer className string (CREFSTRING) Name of feature class id string (CREFSTRING) Base 64 string encoded ID of the feature AddFeatureIdDouble(MgLayerBase, string, double) Add a single selection to the set where the identity property is a double. public void AddFeatureIdDouble(MgLayerBase layer, string className, double identifier) Parameters layer MgLayerBase className string identifier double AddFeatureIdInt16(MgLayerBase, string, short) Add a single selection to the set where the identity property is a 16-bit integer. public void AddFeatureIdInt16(MgLayerBase layer, string className, short identifier) Parameters layer MgLayerBase className string identifier short AddFeatureIdInt32(MgLayerBase, string, int) Add a single selection to the set where the identity property is a 32-bit integer. public void AddFeatureIdInt32(MgLayerBase layer, string className, int identifier) Parameters layer MgLayerBase className string identifier int AddFeatureIdInt64(MgLayerBase, string, long) Add a single selection to the set where the identity property is a 64-bit integer. public void AddFeatureIdInt64(MgLayerBase layer, string className, long identifier) Parameters layer MgLayerBase className string identifier long AddFeatureIdString(MgLayerBase, string, string) Add a single selection to the set where the identity property is a string. public void AddFeatureIdString(MgLayerBase layer, string className, string identifier) Parameters layer MgLayerBase className string identifier string AddFeatureIds(MgLayerBase, string, MgPropertyCollection) Add a single selection to the set based on a collection of identity properties public void AddFeatureIds(MgLayerBase layer, string className, MgPropertyCollection identityProperties) Parameters layer MgLayerBase className string identityProperties MgPropertyCollection AddFeatures(MgLayerBase, MgFeatureReader, int) Add nFeatures to selection set from the FeatureReader. Specify nFeatures = 0 for all features in reader. Internal identity mapping for layer dictates the properties used public void AddFeatures(MgLayerBase layer, MgFeatureReader features, int nFeatures) Parameters layer MgLayerBase features MgFeatureReader nFeatures int Contains(MgLayerBase, string) Does a particular layer and class have selections. public bool Contains(MgLayerBase layer, string className) Parameters layer MgLayerBase className string Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool FromXml(string) Read selection from XML document. Previous selection is cleared. public void FromXml(string xmlSelectionString) Parameters xmlSelectionString string GenerateFilter(MgLayerBase, string) Generates an Fdo filter text for the selections of the specified layer and class public string GenerateFilter(MgLayerBase layer, string className) Parameters layer MgLayerBase className string Returns string GenerateFilters(MgLayerBase, string, int) Generates a collection of FDO filter strings for the selections of the specified layer and class public MgStringCollection GenerateFilters(MgLayerBase layer, string className, int selectionSize) Parameters layer MgLayerBase className string selectionSize int Returns MgStringCollection Returns the collection of FDO filter strings GetClass(string) Returns the class name for the layer public string GetClass(string layer) Parameters layer string Returns string GetClasses(string) Returns list of selected classes for a layer public MgStringCollection GetClasses(string layer) Parameters layer string Returns MgStringCollection GetExtents(MgFeatureService) Gets the extents of the selection set. public MgEnvelope GetExtents(MgFeatureService featureService) Parameters featureService MgFeatureService (MgFeatureService) MgFeatureService that can be used to retrieve the extents for each feature class definition Returns MgEnvelope Returns the MgEnvelope object with extent of selection GetLayers() Returns list of selected layers public MgReadOnlyLayerCollection GetLayers() Returns MgReadOnlyLayerCollection GetResourceName(string, string) Builds a resource name based on the map name amd the session id public string GetResourceName(string sessionId, string mapName) Parameters sessionId string (String/string) A string that specifies the session id mapName string (String/string) A string that specifies the name of the map. This Returns string Resource name. GetSelectedFeatures(MgLayerBase, string, MgStringCollection) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgFeatureReader GetSelectedFeatures(MgLayerBase layer, string className, MgStringCollection propertyNames) Parameters layer MgLayerBase (MgLayerBase) Input layer. className string (String/string) Input feature class name. propertyNames MgStringCollection (MgStringCollection) Properties to return for selected features. Returns MgFeatureReader Returns a feature reader containing all the features for the given feature class in this selection. GetSelectedFeatures(MgLayerBase, string, bool) Returns the selected feature data for the specified feature class. public MgFeatureReader GetSelectedFeatures(MgLayerBase layer, string className, bool mappedOnly) Parameters layer MgLayerBase (MgLayerBase) Input layer. className string (String/string) Input feature class name. mappedOnly bool (boolean/bool) Return mapped (true) or all (false) properties for selected features Returns MgFeatureReader Returns a feature reader containing all the features for the given feature class in this selection. GetSelectedFeaturesCount(MgLayerBase, string) Returns the number of selected features. public int GetSelectedFeaturesCount(MgLayerBase layer, string className) Parameters layer MgLayerBase (MgLayerBase) Input layer. className string (String/string) Input feature class name. Returns int Returns Count of all selected features. Open(MgResourceService, string) Loads the map object from a session repository. public void Open(MgResourceService resourceService, string mapName) Parameters resourceService MgResourceService (MgResourceService) An MgResourceService that can be used to retrieve the map. mapName string (String/string) A string that specifies the name of the map. This Save(MgResourceService, string) Save the map object to a session repository. public void Save(MgResourceService resourceService, string mapName) Parameters resourceService MgResourceService (MgResourceService) An MgResourceService that can be used to retrieve the map. mapName string (String/string) A string that specifies the name of the map. This SetMap(MgMapBase) public void SetMap(MgMapBase map) Parameters map MgMapBase ToXml() Write selection as XML document. This document will typically be passed back to a viewer to select the desired features. public string ToXml() Returns string"
  },
  "api/OSGeo.MapGuide.MgSerializable.html": {
    "href": "api/OSGeo.MapGuide.MgSerializable.html",
    "title": "Class MgSerializable | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSerializable Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Root class of all serializable objects. public class MgSerializable : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable Implements IDisposable Derived MgByteReader MgCollection MgColor MgCoordinate MgDateTime MgDwfVersion MgEnvelope MgFeatureCommand MgFeatureCommandCollection MgFeatureInformation MgFeatureQueryOptions MgFeatureSourceParams MgGeometricEntity MgGeometryTypeInfo MgLayout MgLongTransactionReader MgMapPlotCollection MgMetatile MgNamedSerializable MgPackageStatusInformation MgPlotSpecification MgPortableDwfVersion MgPortableFeatureInformation MgPortableLayout MgPortableMapPlotCollection MgPortablePlotSpecification MgPortableRenderingOptions MgRaster MgReader MgRenderingOptions MgResourceIdentifier MgSiteInfo MgSpatialContextReader MgTransaction MgUserInformation MgWarnings Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgSerializable(IntPtr, bool) protected MgSerializable(IntPtr cPtr, bool cMemoryOwn) Parameters cPtr IntPtr cMemoryOwn bool Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool getCPtr(MgSerializable) public static HandleRef getCPtr(MgSerializable obj) Parameters obj MgSerializable Returns HandleRef swigRelease(MgSerializable) public static HandleRef swigRelease(MgSerializable obj) Parameters obj MgSerializable Returns HandleRef"
  },
  "api/OSGeo.MapGuide.MgServerAdmin.html": {
    "href": "api/OSGeo.MapGuide.MgServerAdmin.html",
    "title": "Class MgServerAdmin | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgServerAdmin Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll This class contains methods to allow MapGuide clients to perform administration related operations: Server Configuration Logging Online/Offline Server Health public class MgServerAdmin : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgServerAdmin Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgServerAdmin() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Default Constructor for an MgServerAdmin object. public MgServerAdmin() Methods BringOnline() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Allows the server to process client operations. public void BringOnline() Exceptions MgException MgConnectionNotOpenException\"> ClearLog(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Clears the specified log. public bool ClearLog(string log) Parameters log string The log to be cleared. (AccessLog, AdminLog, AuthenticationLog, ErrorLog, SessionLog, TraceLog) Returns bool True if the log was successfully cleared, false otherwise. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidArgumentException\"> MgException MgNullReferenceException\"> Close() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Closes the current Server connection. public void Close() Exceptions MgException MgConnectionNotOpenException\"> DeleteLog(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Deletes the specified log if it exists. public void DeleteLog(string fileName) Parameters fileName string The name of the log to be deleted from the logs directory (does not include path) Exceptions MgException MgNullArgumentException\"> MgException MgFileNotFoundException\"> MgException MgFileIoException\"> DeletePackage(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Delete the specified package, if able. public void DeletePackage(string packageName) Parameters packageName string The name of the package to be deleted. Available packages can be found by using EnumeratePackages(). Exceptions MgException MgInvalidArgumentException\"> MgException MgFileIoException\"> MgException MgFileNotFoundException\"> Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnableMaximumLogSize(bool) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Enables/disables maximum log file size restriction. Maximum log file size is set with MgServerAdmin::SetMaximumLogSize(). public void EnableMaximumLogSize(bool useMaxSize) Parameters useMaxSize bool Log file size restriction is enforced if useMaxSize = true. using EnumeratePackages(). Exceptions MgException MgConnectionNotOpenException\"> EnumerateLogs() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns a string collection listing the contents of the logs directory. public MgPropertyCollection EnumerateLogs() Returns MgPropertyCollection A string collection listing the contents of the logs directory. Exceptions MgException MgFileIoException\"> EnumeratePackages() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Enumerates the packages available in the package directory. public MgStringCollection EnumeratePackages() Returns MgStringCollection An MgStringCollection containing a list of packages in the packages directory Exceptions MgException MgOutOfMemoryException\"> MgException MgFileNotFoundException\"> MgException MgFileIoException\"> GetConfigurationProperties(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the configuration properties for the specified property section. public MgPropertyCollection GetConfigurationProperties(string propertySection) Parameters propertySection string The property section to get. Returns MgPropertyCollection The collection of configuration properties associated with the specified property section. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidPropertySectionException\"> MgException MgPropertySectionNotAvailableException\"> GetDocument(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the contents of the specified document. public MgByteReader GetDocument(string identifier) Parameters identifier string The document to retrieve. Returns MgByteReader The document contents in a ByteReader. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidArgumentException\"> MgException MgNullReferenceException\"> MgException MgOutOfMemoryException\"> GetInformationProperties() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the information properties for the server. public MgPropertyCollection GetInformationProperties() Returns MgPropertyCollection The collection of information properties. Exceptions MgException MgConnectionNotOpenException\"> GetLog(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the contents of the specified log. public MgByteReader GetLog(string log) Parameters log string The log to retrieve. (AccessLog, AdminLog, AuthenticationLog, ErrorLog, SessionLog, TraceLog) Returns MgByteReader The log contents in a ByteReader. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidArgumentException\"> MgException MgNullReferenceException\"> MgException MgOutOfMemoryException\"> GetLog(string, MgDateTime, MgDateTime) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the contents of the specified log between two dates. A maximum 24 hour period is allowed to be retrieved. This will use the current file name convention for the log so if the filename was changed it will be unable to find entries located previous files. public MgByteReader GetLog(string log, MgDateTime fromDate, MgDateTime toDate) Parameters log string The log to retrieve. (AccessLog, AdminLog, AuthenticationLog, ErrorLog, MapLayerAccessLog, SessionLog, TraceLog) fromDate MgDateTime Date and time to start pulling entries from toDate MgDateTime Last date and time to pull entries for Returns MgByteReader The log contents in a ByteReader. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidLogTypeException\"> MgException MgNullReferenceException\"> MgException MgInvalidArgumentException\"> MgException MgOutOfMemoryException\"> GetLog(string, int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the specified number of entries from the specified log. public MgByteReader GetLog(string log, int numEntries) Parameters log string The log to retrieve. (AccessLog, AdminLog, AuthenticationLog, ErrorLog, SessionLog, TraceLog) numEntries int The number of entries to return. Returns MgByteReader The log contents in a ByteReader. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidArgumentException\"> MgException MgArgumentOutOfRangeException\"> MgException MgNullReferenceException\"> MgException MgOutOfMemoryException\"> GetLogFile(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the contents of the specified log file. public MgByteReader GetLogFile(string logFile) Parameters logFile string The log file to retrieve. Returns MgByteReader The log contents in a ByteReader. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidArgumentException\"> MgException MgNullReferenceException\"> MgException MgOutOfMemoryException\"> GetPackageLog(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets current log of the specified package public MgByteReader GetPackageLog(string packageName) Parameters packageName string The name of the package to get the status for. Available packages can be found by using EnumeratePackages(). Returns MgByteReader An MgByteReader containing the contents of the package's log. Exceptions MgException MgFileNotFoundException\"> MgException MgFileIoException\"> MgException MgInvalidArgumentException\"> MgException MgOutOfMemoryException\"> GetPackageStatus(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Retrieves the current status of the specified package. public MgPackageStatusInformation GetPackageStatus(string packageName) Parameters packageName string The name of the package to get the status for. Available packages can be found by using EnumeratePackages(). Returns MgPackageStatusInformation The status of the package. GetSiteStatus() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the status properties for the server. public MgPropertyCollection GetSiteStatus() Returns MgPropertyCollection The collection of status properties. Exceptions MgException MgConnectionNotOpenException\"> GetSiteVersion() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the site version. public string GetSiteVersion() Returns string The site version. Exceptions MgException MgConnectionNotOpenException\"> GetWarningsObject() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) GetWarningsObject() method returns all the current warning. public MgWarnings GetWarningsObject() Returns MgWarnings Returns a pointer to the MgWarnings object. Exceptions MgException MgConnectionNotOpenException\"> HasWarning() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) HasWarning() method reports if there is a current warning. public bool HasWarning() Returns bool Returns true or false Exceptions MgException MgConnectionNotOpenException\"> IsMaximumLogSizeEnabled() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Determines if log file size is restricted to the maximum size set with MgServerAdmin::SetMaximumLogSize(). public bool IsMaximumLogSizeEnabled() Returns bool The status of the use of the maximum log size restriction Exceptions MgException MgConnectionNotOpenException\"> IsOnline() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the online status of the server. public bool IsOnline() Returns bool True for online, False for offline. Exceptions MgException MgConnectionNotOpenException\"> LoadPackage(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Loads the specified resource package into the repository. public void LoadPackage(string packageName) Parameters packageName string The name of the package to be loaded. Available packages can be found by using EnumeratePackages(). Exceptions MgException MgFileNotFoundException\"> MgException MgPathTooLongException\"> MgException MgFileIoException\"> MgException MgInvalidArgumentException\"> MgException MgNullArgumentException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> MgException MgOutOfMemoryException\"> MakePackage(MgResourceIdentifier, string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates a package from the specified resource, and then saves it into the specified name. public void MakePackage(MgResourceIdentifier resource, string packageName, string packageDescription) Parameters resource MgResourceIdentifier Resource identifier of a folder containing permissible resources to be packaged. packageName string The name of the package to be made. The serverconfig.ini file has the &quot;PackagesPath\" property which will be used for path. The file name will automatically be appended with the \".mgp\" extension (case sensitive) if it is not specified. packageDescription string The description of the package. Exceptions MgException MgDuplicateFileException\"> MgException MgPathTooLongException\"> MgException MgFileIoException\"> MgException MgInvalidArgumentException\"> MgException MgNullArgumentException\"> MgException MgInvalidRepositoryTypeException\"> MgException MgInvalidRepositoryNameException\"> MgException MgInvalidResourcePathException\"> MgException MgInvalidResourceNameException\"> MgException MgInvalidResourceTypeException\"> MgException MgOutOfMemoryException\"> Open(MgUserInformation) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Opens a connection to a Server. public void Open(MgUserInformation userInformation) Parameters userInformation MgUserInformation User information - credentials, locale, session identifier Exceptions MgException MgServerNotFoundException\"> MgException MgConnectionFailedException\"> Open(string, MgUserInformation) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Opens a connection to a specified Server. public void Open(string server, MgUserInformation userInformation) Parameters server string Server IP address or DNS name. userInformation MgUserInformation User information - credentials, locale, session identifier Exceptions MgException MgServerNotFoundException\"> MgException MgConnectionFailedException\"> RemoveConfigurationProperties(string, MgPropertyCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Removes the configuration properties for the specified property section. If the properties are not specified, then the entire section will be removed. public void RemoveConfigurationProperties(string propertySection, MgPropertyCollection properties) Parameters propertySection string The property section to remove. properties MgPropertyCollection The collection of configuration properties associated with the specified property section that you want to remove. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidPropertySectionException\"> MgException MgPropertySectionNotAvailableException\"> MgException MgPropertySectionReadOnlyException\"> MgException MgInvalidPropertyException\"> RenameLog(string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Renames the specified log to the new name given public void RenameLog(string oldFileName, string newFileName) Parameters oldFileName string The current name of the log file newFileName string The new name to give the log file Exceptions MgException MgNullArgumentException\"> MgException MgDuplicateFileException\"> MgException MgFileNotFoundException\"> MgException MgInvalidArgumentException\"> MgException MgFileIoException\"> SetConfigurationProperties(string, MgPropertyCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the configuration properties for the specified property section. public void SetConfigurationProperties(string propertySection, MgPropertyCollection properties) Parameters propertySection string The property section to set. properties MgPropertyCollection The collection of configuration properties associated with the specified property section that you want to set. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidPropertySectionException\"> MgException MgPropertySectionNotAvailableException\"> MgException MgPropertySectionReadOnlyException\"> MgException MgInvalidPropertyException\"> SetDocument(string, MgByteReader) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the contents of the specified document. public void SetDocument(string identifier, MgByteReader data) Parameters identifier string The document to set. data MgByteReader The data to set the document contents to. Exceptions MgException MgConnectionNotOpenException\"> MgException MgInvalidArgumentException\"> MgException MgNullReferenceException\"> MgException MgOutOfMemoryException\"> SetLogDelimiter(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Specifies the delimiter to use for separating the data fields in the logs. public void SetLogDelimiter(string delimiter) Parameters delimiter string Exceptions MgException MgConnectionNotOpenException\"> SetMaximumLogSize(int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Specifies the maximum size in kilobytes for the log files. When the maximum size is exceeded, the current log will be archived, and a new log will be created. public void SetMaximumLogSize(int size) Parameters size int Exceptions MgException MgConnectionNotOpenException\"> TakeOffline() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Prevents the server from processing client operations. When offline, the adminstrator can access the server via \"Admin\" operations without worrying about MapGuide clients using the server. public void TakeOffline() Exceptions MgException MgConnectionNotOpenException\">"
  },
  "api/OSGeo.MapGuide.MgServerInformationProperties.html": {
    "href": "api/OSGeo.MapGuide.MgServerInformationProperties.html",
    "title": "Class MgServerInformationProperties | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgServerInformationProperties Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll ServerAdmin properties. Note that this is not a complete list of the properties which may be set for a server. Values stored in the server's config file are also properties of the server. These properties are defined in MgConfigProperties.h. public class MgServerInformationProperties Inheritance object MgServerInformationProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AdminOperationsQueueCount public const string AdminOperationsQueueCount = \"AdminOperationsQueueCount\" Field Value string ApiVersion public const string ApiVersion = \"ApiVersion\" Field Value string AvailablePhysicalMemory public const string AvailablePhysicalMemory = \"AvailablePhysicalMemory\" Field Value string AvailableVirtualMemory public const string AvailableVirtualMemory = \"AvailableVirtualMemory\" Field Value string AverageOperationTime public const string AverageOperationTime = \"AverageOperationTime\" Field Value string CacheDroppedEntries public const string CacheDroppedEntries = \"CacheDroppedEntries\" Field Value string CacheSize public const string CacheSize = \"CacheSize\" Field Value string ClientOperationsQueueCount public const string ClientOperationsQueueCount = \"ClientOperationsQueueCount\" Field Value string CpuUtilization public const string CpuUtilization = \"CpuUtilization\" Field Value string DisplayName public const string DisplayName = \"DisplayName\" Field Value string MachineIp public const string MachineIp = \"MachineIp\" Field Value string OperatingSystemVersion public const string OperatingSystemVersion = \"OperatingSystemVersion\" Field Value string ServerVersion public const string ServerVersion = \"ServerVersion\" Field Value string SiteOperationsQueueCount public const string SiteOperationsQueueCount = \"SiteOperationsQueueCount\" Field Value string Status public const string Status = \"Status\" Field Value string TotalActiveConnections public const string TotalActiveConnections = \"TotalActiveConnections\" Field Value string TotalConnections public const string TotalConnections = \"TotalConnections\" Field Value string TotalOperationTime public const string TotalOperationTime = \"TotalOperationTime\" Field Value string TotalPhysicalMemory public const string TotalPhysicalMemory = \"TotalPhysicalMemory\" Field Value string TotalProcessedOperations public const string TotalProcessedOperations = \"TotalProcessedOperations\" Field Value string TotalReceivedOperations public const string TotalReceivedOperations = \"TotalReceivedOperations\" Field Value string TotalVirtualMemory public const string TotalVirtualMemory = \"TotalVirtualMemory\" Field Value string Uptime public const string Uptime = \"Uptime\" Field Value string VirtualMemory public const string VirtualMemory = \"VirtualMemory\" Field Value string WorkingSet public const string WorkingSet = \"WorkingSet\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgService.html": {
    "href": "api/OSGeo.MapGuide.MgService.html",
    "title": "Class MgService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll class Service Base class for all services APIs public class MgService : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService Implements IDisposable Derived MgDrawingService MgFeatureService MgKmlService MgMappingService MgPortableDrawingService MgPortableMappingService MgPortableProfilingService MgPortableRenderingService MgPortableTileService MgProfilingService MgRenderingService MgResourceService MgTileService Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetWarningsObject() Returns non-critical messages from the given service. public MgWarnings GetWarningsObject() Returns MgWarnings An MgWarnings object containing messages generated by the service. HasWarnings() HasWarnings() method reports if there are warnings. public bool HasWarnings() Returns bool Returns true or false"
  },
  "api/OSGeo.MapGuide.MgServiceType.html": {
    "href": "api/OSGeo.MapGuide.MgServiceType.html",
    "title": "Class MgServiceType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgServiceType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Service types for Platform services. public class MgServiceType Inheritance object MgServiceType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DrawingService DWF Drawing Service public const short DrawingService = 1 Field Value short FeatureService FDO Feature Service public const short FeatureService = 2 Field Value short KmlService Kml Service public const short KmlService = 6 Field Value short MappingService Mapping Service public const short MappingService = 3 Field Value short ProfilingService Profiling Service public const short ProfilingService = 10 Field Value short RenderingService Rendering Service public const short RenderingService = 4 Field Value short ResourceService Resource Service public const short ResourceService = 0 Field Value short TileService Tile Service public const short TileService = 5 Field Value short"
  },
  "api/OSGeo.MapGuide.MgSingleProperty.html": {
    "href": "api/OSGeo.MapGuide.MgSingleProperty.html",
    "title": "Class MgSingleProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSingleProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Stores single precision floating point data with an associated key name. public class MgSingleProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgSingleProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgSingleProperty(string, float) Constructs an MgSingleProperty object. public MgSingleProperty(string name, float value) Parameters name string (String/string) The name of the property. value float (float) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public float Value { get; set; } Property Value float Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::Single. GetValue() Gets the property value. public float GetValue() Returns float Returns the property value. SetValue(float) Sets the property value. public void SetValue(float value) Parameters value float (float) The value of the property."
  },
  "api/OSGeo.MapGuide.MgSite.html": {
    "href": "api/OSGeo.MapGuide.MgSite.html",
    "title": "Class MgSite | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSite Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgSite : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSite Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgSite() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Construct an MgSite object and open a connection to the Site Server. public MgSite() Methods AddGroup(string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Add a group to the Resource Repository. TODO: Determine what roles are initially assigned to these new groups. public void AddGroup(string group, string description) Parameters group string Name of the new group. description string Description of the new group. Exceptions MgException MgConnectionNotOpenException\"> MgException MgDuplicateGroupException\"> AddServer(string, string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Add server to the site. public void AddServer(string name, string description, string address) Parameters name string Server name. May be the same as the server DNS name. description string Server long description. May indicate the server&apos;s intended use. address string Server IP address or DNS name. Exceptions MgException MgConnectionNotOpenException\"> MgException MgServerAlreadyExistsException\"> MgException MgInvalidServerAddressException\"> AddUser(string, string, string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Add a user to the Resource Repository. public void AddUser(string userID, string userName, string password, string description) Parameters userID string ID of the new user. userName string Name of the new user. password string New user&apos;s password. description string Description of the new user. Exceptions MgException MgConnectionNotOpenException\"> MgException MgDuplicateUserException\"> MgException MgInvalidPasswordException\"> Close() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Closes the current Site Server connection. public void Close() Exceptions MgException MgConnectionNotOpenException\"> CreateSession() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string CreateSession() Returns string The session identifier, for example \"71b5d990-0000-1000-8000-005056c00008_eng\". <!-- Examples (PHP) --> DeleteGroups(MgStringCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Deletes a set of groups from the server. All users owned by the groups will have their membership revoked prior to deletion of the groups. public void DeleteGroups(MgStringCollection groups) Parameters groups MgStringCollection Names of the groups to be deleted. Exceptions MgException MgConnectionNotOpenException\"> MgException MgGroupNotFoundException\"> DeleteUsers(MgStringCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Deletes a set of users from the server. Prior to deletion, all of the users' group memberships are revoked. public void DeleteUsers(MgStringCollection users) Parameters users MgStringCollection IDs of the users to be deleted. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> DestroySession(string) Destroys the specified session and discards any resources stored in the session repository. public void DestroySession(string session) Parameters session string (String/string) Identifier returned from CreateSession. Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool EnumerateGroups() Gets a list of available groups. public MgByteReader EnumerateGroups() Returns MgByteReader Returns an MgByteReader object listing the groups in XML Exceptions MgException MgConnectionNotOpenException\"> EnumerateGroups(string) Gets the list of group memberships for a user. public MgByteReader EnumerateGroups(string user) Parameters user string Returns MgByteReader Result containing the appropriate list of groups. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> EnumerateGroups(string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets a list of available groups. Parameters specify the contents of the list: <ul> <li>If both user and role are NOT specified, return a list of all available groups. </li> <li>If user is specified, return a list of groups of which that user is a member. </li> <li>If role is specified, return a list of groups in that role. </li> <li>If both user and role are specified, throw exception. </li> </ul> public MgByteReader EnumerateGroups(string user, string role) Parameters user string ID of user, if returning a list of groups owning a particular user; empty, otherwise. role string Role, if returning a list of groups with a particular role; empty, otherwise. Returns MgByteReader Result containing the appropriate list of groups. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> MgException MgRoleNotFoundException\"> EnumerateRoles(string) Gets a list of roles for a user. public MgStringCollection EnumerateRoles(string user) Parameters user string Returns MgStringCollection Result containing the list of roles. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> EnumerateRoles(string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets a list of available roles. Parameters specify contents of the list: <ul> <li>If both user and group are NOT specified, return a list of all available roles. </li> <li>If group is specified, return a list of roles for that group. </li> <li>If user is specified, return a list of roles for that user. </li> <li>If both user and group are specified, throw an exception. </li> </ul> public MgStringCollection EnumerateRoles(string user, string group) Parameters user string ID of user, if returning list of roles for a particular user; empty, otherwise. group string Name of group, if returning list of roles for a particular group; empty, otherwise. Returns MgStringCollection Result containing the appropriate list of roles. Exceptions MgException MgConnectionNotOpenException\"> MgException MgGroupNotFoundException\"> MgException MgUserNotFoundException\"> EnumerateServers() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Return an XML document describing the server on the site. public MgByteReader EnumerateServers() Returns MgByteReader XML document describing the list of servers. Exceptions MgException MgConnectionNotOpenException\"> EnumerateUsers(string) Gets a list of users. public MgByteReader EnumerateUsers(string group) Parameters group string (String/string) The name of a group, for example &quot;Engineering\". Or, an empty string to return a list of all users. Returns MgByteReader Returns an MgByteReader object listing the users in XML format using the OSGeo.MapGuide.MgUserList schema. <!-- Examples (PHP) --> Exceptions MgException MgConnectionNotOpenException\"> MgException MgGroupNotFoundException\"> EnumerateUsers(string, string, bool) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets a list of available users. Parameters specify the contents of the list: <ul> <li>If both group and role are NOT specified return a list of all available users. </li> <li>If group is specified, return a list of users in that group. </li> <li>If role is specified and includeGroups is false, return a list of users that role. </li> <li>If role is specified and includeGroups is true, return a list of users and groups in that role (the list of users in each group is not expanded). </li> <li>If both group and role are specified, throw exception. </li> </ul> public MgByteReader EnumerateUsers(string group, string role, bool includeGroups) Parameters group string Name of group, if returning the list of users in a group; empty, otherwise. role string Role, if returning a list of users and plus, optionally, groups with a particular role; empty, otherwise. includeGroups bool Flag used when role is specified; True, indicates that groups with the specified role should be returned in the list along with the users; False, indicates that groups should not be included. Returns MgByteReader Result containing the appropriate list of users. Exceptions MgException MgConnectionNotOpenException\"> MgException MgGroupNotFoundException\"> MgException MgRoleNotFoundException\"> GetCurrentSession() Gets the current session identifier. public string GetCurrentSession() Returns string If a session repository has been created, it returns the unique session identifier, for example \"71b5d990-0000-1000-8000-005056c00008_eng\". If a session repository has not been created, it returns an empty string. GetCurrentSiteAddress() public string GetCurrentSiteAddress() Returns string GetSessionTimeout() Gets the session time out value. public int GetSessionTimeout() Returns int The timeout value of session measured in second, for example \"300\". GetSiteServerCount() public int GetSiteServerCount() Returns int GetSiteServerInfo(int) public MgSiteInfo GetSiteServerInfo(int index) Parameters index int Returns MgSiteInfo GetUserForSession() Gets the user for the current session identifier. An exception will be thrown if the session is invalid or does not exist. public string GetUserForSession() Returns string If a session has been created, it returns the userid for the user. Exceptions MgException MgInvalidArgumentException\"> GetWarning() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) GetWarning() method returns all the current warning. public MgWarnings GetWarning() Returns MgWarnings Returns a pointer to the MgWarnings object. Exceptions MgException MgConnectionNotOpenException\"> GrantGroupMembershipsToUsers(MgStringCollection, MgStringCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Grants membership in the specified groups to the specified users. public void GrantGroupMembershipsToUsers(MgStringCollection groups, MgStringCollection users) Parameters groups MgStringCollection Groups to receive the specified users. users MgStringCollection IDs of users to gain membership in the specified groups. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> MgException MgGroupNotFoundException\"> GrantRoleMembershipsToGroups(MgStringCollection, MgStringCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Grants the specified role memberships to the specified groups. public void GrantRoleMembershipsToGroups(MgStringCollection roles, MgStringCollection groups) Parameters roles MgStringCollection List of roles to be granted to the specified groups. groups MgStringCollection Groups to receive the specified roles. Exceptions MgException MgConnectionNotOpenException\"> MgException MgGroupNotFoundException\"> MgException MgRoleNotFoundException\"> GrantRoleMembershipsToUsers(MgStringCollection, MgStringCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Grants the specified roles to the specified users. public void GrantRoleMembershipsToUsers(MgStringCollection roles, MgStringCollection users) Parameters roles MgStringCollection List of roles to grant to the specified users. users MgStringCollection IDs of users to receive the specified roles. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> MgException MgRoleNotFoundException\"> HasWarning() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) HasWarning() method reports if there is a current warning. public bool HasWarning() Returns bool Returns true or false Exceptions MgException MgConnectionNotOpenException\"> Open(MgUserInformation) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Opens a connection to the Site Server. public void Open(MgUserInformation userInformation) Parameters userInformation MgUserInformation User information to authenticate against Exceptions MgException MgNullArgumentException\"> MgException MgAuthenticationFailedException\"> MgException MgConnectionFailedException\"> Open(MgUserInformation, MgSiteInfo) public void Open(MgUserInformation userInformation, MgSiteInfo siteInfo) Parameters userInformation MgUserInformation siteInfo MgSiteInfo RemoveServer(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Remove server from the site. public void RemoveServer(string name) Parameters name string Name of server to remove from site. Exceptions MgException MgConnectionNotOpenException\"> MgException MgServerNotFoundException\"> RevokeGroupMembershipsFromUsers(MgStringCollection, MgStringCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Revokes membership in the specified groups from the specified users. public void RevokeGroupMembershipsFromUsers(MgStringCollection groups, MgStringCollection users) Parameters groups MgStringCollection Groups to lose the specified users. users MgStringCollection IDs of users to lose membership in the specified groups. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> MgException MgGroupNotFoundException\"> RevokeRoleMembershipsFromGroups(MgStringCollection, MgStringCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Revokes the specified roles from the specified groups. public void RevokeRoleMembershipsFromGroups(MgStringCollection roles, MgStringCollection groups) Parameters roles MgStringCollection Roles to be revoked from the groups. groups MgStringCollection Groups to lose the specified roles. Exceptions MgException MgConnectionNotOpenException\"> MgException MgGroupNotFoundException\"> MgException MgRoleNotFoundException\"> RevokeRoleMembershipsFromUsers(MgStringCollection, MgStringCollection) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Revokes the specified roles from the specified users. public void RevokeRoleMembershipsFromUsers(MgStringCollection roles, MgStringCollection users) Parameters roles MgStringCollection List of roles to revoke from the specified users. Repository. users MgStringCollection IDs of users to lose the specified roles. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> MgException MgRoleNotFoundException\"> UpdateGroup(string, string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Update the information stored for a group. public void UpdateGroup(string group, string newGroup, string newDescription) Parameters group string Name of the group to be updated. newGroup string New group name. newDescription string New description. Exceptions MgException MgConnectionNotOpenException\"> MgException MgGroupNotFoundException\"> MgException MgDuplicateGroupException\"> UpdateServer(string, string, string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Update server information for the site. public void UpdateServer(string oldName, string newName, string newDescription, string newAddress) Parameters oldName string Current server name. newName string New server name. newDescription string New long description. newAddress string New server IP address or DNS name. Exceptions MgException MgConnectionNotOpenException\"> MgException MgServerNotFoundException\"> MgException MgServerAlreadyExistsException\"> MgException MgInvalidServerAddressException\"> UpdateUser(string, string, string, string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Updates the information stored for a user. public void UpdateUser(string userID, string newUserID, string newUserName, string newPassword, string newDescription) Parameters userID string ID of the user to be updated. newUserID string New user ID. newUserName string New user name. newPassword string New password. newDescription string New description. Exceptions MgException MgConnectionNotOpenException\"> MgException MgUserNotFoundException\"> MgException MgDuplicateUserException\"> MgException MgInvalidPasswordException\">"
  },
  "api/OSGeo.MapGuide.MgSiteConnection.html": {
    "href": "api/OSGeo.MapGuide.MgSiteConnection.html",
    "title": "Class MgSiteConnection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSiteConnection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Site connection. Provides basic authentication and Service access capabilities for the site. public class MgSiteConnection : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSiteConnection Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgSiteConnection() Creates a site connection. The local site defined for the web tier or server is used. public MgSiteConnection() Exceptions MgException MgConfigurationException\"> MgSiteConnection(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates a site at the given url. public MgSiteConnection(string url) Parameters url string HTTP url for a site. Methods CreateService(int) Returns a new instance of the specified service from the site. A connection to the machine hosting the service will be created if required. Configuration information determines whether the service is hosted locally or not. The configuration information is stored in a file named webconfig.ini which is located in the same folder as the map agent. The parameters in this file can be modified using the web administration application. public MgService CreateService(int serviceType) Parameters serviceType int (int) Type of service to create. See MgServiceType for valid service names. Returns MgService Returns the created service Exceptions MgException with code (MgServiceNotSupportedException) if service type is not supported MgException with code (MgConnectionNotOpenException) if connection has not been opened Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetSite() Returns an instance of the MgSite object. This object is responsible for user/group management and session management. MgSite exposes functionality to enumerate users and groups and to manage user sessions. The connection must already be open to obtain access to the site. public MgSite GetSite() Returns MgSite Returns a reference to the MgSite object. Exceptions MgException with code (MgConnectionNotOpenException) if connection has not been opened Open(MgUserInformation) Establishes a connection to a site public void Open(MgUserInformation userInformation) Parameters userInformation MgUserInformation (MgUserInformation) User information to authenticate against. Can either be username/password or session identifier. User information also contains client locale. See MgUserInformation for details. Exceptions MgException with code (MgAuthenticationFailedException) if user information was not supplied MgException with code (MgConfigurationException) if configuration information could not be loaded MgException with code (MgUnauthorizedAccessException) if user is not authorized for site MgException with code (MgConnectionFailedException) if site cannot be connected to"
  },
  "api/OSGeo.MapGuide.MgSiteInfo.MgPortType.html": {
    "href": "api/OSGeo.MapGuide.MgSiteInfo.MgPortType.html",
    "title": "Enum MgSiteInfo.MgPortType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Enum MgSiteInfo.MgPortType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll public enum MgSiteInfo.MgPortType Fields Admin = 2 Client = 0 Site = 1"
  },
  "api/OSGeo.MapGuide.MgSiteInfo.MgSiteStatus.html": {
    "href": "api/OSGeo.MapGuide.MgSiteInfo.MgSiteStatus.html",
    "title": "Enum MgSiteInfo.MgSiteStatus | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Enum MgSiteInfo.MgSiteStatus Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll public enum MgSiteInfo.MgSiteStatus Fields Ok = 0 TimedOut = 2 UnableToConnect = 1 Uninitialized = 3"
  },
  "api/OSGeo.MapGuide.MgSiteInfo.html": {
    "href": "api/OSGeo.MapGuide.MgSiteInfo.html",
    "title": "Class MgSiteInfo | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSiteInfo Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgSiteInfo : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgSiteInfo Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgSiteInfo() public MgSiteInfo() MgSiteInfo(string, int, int, int) public MgSiteInfo(string target, int sitePort, int clientPort, int adminPort) Parameters target string sitePort int clientPort int adminPort int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPort(MgPortType) public int GetPort(MgSiteInfo.MgPortType type) Parameters type MgSiteInfo.MgPortType Returns int GetStatus() public MgSiteInfo.MgSiteStatus GetStatus() Returns MgSiteInfo.MgSiteStatus GetTarget() public string GetTarget() Returns string SetStatus(MgSiteStatus) public void SetStatus(MgSiteInfo.MgSiteStatus arg0) Parameters arg0 MgSiteInfo.MgSiteStatus"
  },
  "api/OSGeo.MapGuide.MgSpatialContextExtentType.html": {
    "href": "api/OSGeo.MapGuide.MgSpatialContextExtentType.html",
    "title": "Class MgSpatialContextExtentType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSpatialContextExtentType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll The SpatialContextExtentType enumeration defines how the extent of a context should be handled by the provider. public class MgSpatialContextExtentType Inheritance object MgSpatialContextExtentType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields scDynamic The spatial extent of the context is dynamic and changes as data is added and removed from the context. public const int scDynamic = 1 Field Value int scStatic The spatial extent of the context is static and must be specified when the context is created. public const int scStatic = 0 Field Value int"
  },
  "api/OSGeo.MapGuide.MgSpatialContextReader.html": {
    "href": "api/OSGeo.MapGuide.MgSpatialContextReader.html",
    "title": "Class MgSpatialContextReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSpatialContextReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides forward-only, read-only functionality for enumerating spatial context information retrieved from a feature source. public class MgSpatialContextReader : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgSpatialContextReader Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CoordinateSystem public string CoordinateSystem { get; } Property Value string CoordinateSystemWkt public string CoordinateSystemWkt { get; } Property Value string Description public string Description { get; } Property Value string Extent public MgByteReader Extent { get; } Property Value MgByteReader ExtentType public int ExtentType { get; } Property Value int Name public string Name { get; } Property Value string XYTolerance public double XYTolerance { get; } Property Value double ZTolerance public double ZTolerance { get; } Property Value double Methods Close() Closes the SpatialContextReader object, freeing any resources it may be holding. public void Close() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCoordinateSystem() Gets the name of the coordinate system of the spatial context currently being read. If the result is a null string, the coordinate system is unknown to the spatial context. public string GetCoordinateSystem() Returns string Returns the coordinate system name or NULL if unknown. GetCoordinateSystemWkt() Gets the name of the coordinate system currently being read in well-known text format. public string GetCoordinateSystemWkt() Returns string Returns the coordinate system name in OGC WKT format or NULL if unknown. GetDescription() Gets the description of the spatial context currently being read. public string GetDescription() Returns string Returns the description of the spatial context. GetExtent() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgByteReader GetExtent() Returns MgByteReader Returns an MgByteReader object containing a geometry in AGF GetExtentType() Gets the extent type of the spatial context currently being read. public int GetExtentType() Returns int Returns the extent type as an MgSpatialContextExtentType value. GetName() Gets the name of the spatial context currently being read. public string GetName() Returns string Returns the name of the spatial context. GetXYTolerance() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetXYTolerance() Returns double Returns the tolerance value. GetZTolerance() Gets the tolerance value for Z ordinates for the spatial context currently being read. public double GetZTolerance() Returns double Returns the tolerance value. IsActive() Determines whether the spatial context currently being read is the active spatial context. [Obsolete(\"This method is deprecated\")] public bool IsActive() Returns bool Returns true if the current spatial context is the active one; otherwise returns false. ReadNext() Advances the reader to the next spatial context. public bool ReadNext() Returns bool Returns true if there is a next item; otherwise returns false. Reset() Resets the SpatialContextReader object to the beginning just public void Reset() ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Serializes the spatial context information to XML according public MgByteReader ToXml() Returns MgByteReader Returns an MgByteReader object containing the XML serialization of the spatial context information."
  },
  "api/OSGeo.MapGuide.MgSqlDataReader.html": {
    "href": "api/OSGeo.MapGuide.MgSqlDataReader.html",
    "title": "Class MgSqlDataReader | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgSqlDataReader Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Provides a forward-only, read-only iterator for reading data returned by a call to MgFeatureService::ExecuteSqlQuery. public class MgSqlDataReader : MgReader, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgReader MgSqlDataReader Implements IDisposable Inherited Members MgReader.ReadNext() MgReader.GetPropertyCount() MgReader.GetPropertyName(int) MgReader.GetPropertyType(string) MgReader.GetPropertyType(int) MgReader.IsNull(string) MgReader.GetBoolean(string) MgReader.GetByte(string) MgReader.GetDateTime(string) MgReader.GetSingle(string) MgReader.GetDouble(string) MgReader.GetInt16(string) MgReader.GetInt32(string) MgReader.GetInt64(string) MgReader.GetString(string) MgReader.GetBLOB(string) MgReader.GetCLOB(string) MgReader.GetGeometry(string) MgReader.GetRaster(string) MgReader.GetPropertyIndex(string) MgReader.IsNull(int) MgReader.GetBoolean(int) MgReader.GetByte(int) MgReader.GetDateTime(int) MgReader.GetSingle(int) MgReader.GetDouble(int) MgReader.GetInt16(int) MgReader.GetInt32(int) MgReader.GetInt64(int) MgReader.GetString(int) MgReader.GetBLOB(int) MgReader.GetCLOB(int) MgReader.GetGeometry(int) MgReader.GetRaster(int) MgReader.Close() MgReader.GetReaderType() MgReader.ToXml() MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgStringCollection.html": {
    "href": "api/OSGeo.MapGuide.MgStringCollection.html",
    "title": "Class MgStringCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgStringCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll This class represents a collection of strings. The collection maintains its own copy of strings. public class MgStringCollection : MgCollection, IDisposable, IList<string>, ICollection<string>, IEnumerable<string>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgStringCollection Implements IDisposable IList<string> ICollection<string> IEnumerable<string> IEnumerable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgStringCollection() Constructs a StringCollection. The collection is initially empty. public MgStringCollection() MgStringCollection(IEnumerable<string>) public MgStringCollection(IEnumerable<string> strings) Parameters strings IEnumerable<string> Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public string this[int index] { get; set; } Parameters index int Property Value string Methods Add(string) Adds the specified item to the end of the collection. public void Add(string value) Parameters value string (String/string) Input value Clear() Removes all items from the collection. public void Clear() Contains(string) Returns true if the collection contains the specified item, false otherwise. public bool Contains(string value) Parameters value string (String/string) Input value Returns bool Returns true if the collection contains the specified item, false otherwise. CopyTo(string[], int) public void CopyTo(string[] array, int arrayIndex) Parameters array string[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetEnumerator() public IEnumerator<string> GetEnumerator() Returns IEnumerator<string> GetItem(int) public virtual string GetItem(int index) Parameters index int Returns string IndexOf(string) Returns the index of the specified item in the collection or -1 if the item does not exist. public int IndexOf(string value) Parameters value string (String/string) Input value Returns int Returns the index of the specified item in the collection or -1 if the item does not exist. Insert(int, string) Inserts the specified item at the specified index position within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, string value) Parameters index int (int) Input index value string (String/string) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. Remove(string) Removes the specified item from the collection. public bool Remove(string value) Parameters value string (String/string) Input value Returns bool Returns true if removal was successful. RemoveAt(int) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int (int) Input index Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. SetItem(int, string) Sets the item in the collection at the specified index position to the specified value. public void SetItem(int index, string value) Parameters index int (int) Input index value string (String/string) Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. The order of the properties in the XML is the same as the order of properties in the collection. It starts with item zero to length of collection. TODO: Add a snippet of XML here? public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgStringProperty.html": {
    "href": "api/OSGeo.MapGuide.MgStringProperty.html",
    "title": "Class MgStringProperty | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgStringProperty Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll Stores string data with an associated key name. public class MgStringProperty : MgNullableProperty, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgProperty MgNullableProperty MgStringProperty Implements IDisposable Inherited Members MgNullableProperty.getCPtr(MgNullableProperty) MgNullableProperty.swigRelease(MgNullableProperty) MgNullableProperty.SetNull(bool) MgNullableProperty.IsNull() MgProperty.Name MgProperty.GetName() MgProperty.SetName(string) MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgStringProperty(string, string) Constructs an MgStringProperty object. public MgStringProperty(string name, string value) Parameters name string (String/string) The name of the property. value string (String/string) The value of the property. Properties PropertyType public short PropertyType { get; } Property Value short Value public string Value { get; } Property Value string Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPropertyType() Gets the property type. public short GetPropertyType() Returns short Returns the property type MgPropertyType::String. GetValue() Gets the property value. public string GetValue() Returns string Returns the property value. SetValue(string) Sets the property value. public void SetValue(string value) Parameters value string (String/string) The value of the property."
  },
  "api/OSGeo.MapGuide.MgStringPropertyCollection.html": {
    "href": "api/OSGeo.MapGuide.MgStringPropertyCollection.html",
    "title": "Class MgStringPropertyCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgStringPropertyCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll This class collects key-value pairs in Strings. The key name should be unique. public class MgStringPropertyCollection : MgCollection, IDisposable, IList<MgStringProperty>, ICollection<MgStringProperty>, IEnumerable<MgStringProperty>, IEnumerable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgCollection MgStringPropertyCollection Implements IDisposable IList<MgStringProperty> ICollection<MgStringProperty> IEnumerable<MgStringProperty> IEnumerable Inherited Members MgCollection.getCPtr(MgCollection) MgCollection.swigRelease(MgCollection) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgStringPropertyCollection() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Constructs a StringPropertyCollection. The collection is initially empty. public MgStringPropertyCollection() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public MgStringProperty this[int index] { get; set; } Parameters index int Property Value MgStringProperty Methods Add(MgStringProperty) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Adds item to the collection. public void Add(MgStringProperty value) Parameters value MgStringProperty Property to add Add(string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Adds the specified item to the end of the collection. public void Add(string keyname, string value) Parameters keyname string Name for input value value string Input value Exceptions MgException with code (MgInvalidArgumentException) if the key is empty. Clear() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Removes all items from the collection. public void Clear() Contains(MgStringProperty) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns true if the collection contains the specified item, false otherwise. public bool Contains(MgStringProperty value) Parameters value MgStringProperty Property to find Returns bool Returns true if the collection contains the specified item, false otherwise. Contains(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns true if the collection contains the specified item, false otherwise. public bool Contains(string keyname) Parameters keyname string Key for item to find Returns bool Returns true if the collection contains the specified item, false otherwise. CopyTo(MgStringProperty[], int) public void CopyTo(MgStringProperty[] array, int arrayIndex) Parameters array MgStringProperty[] arrayIndex int Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() public override int GetCount() Returns int GetEnumerator() public IEnumerator<MgStringProperty> GetEnumerator() Returns IEnumerator<MgStringProperty> GetItem(int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Gets the item in the collection at the specified index position. public MgStringProperty GetItem(int index) Parameters index int Input index Returns MgStringProperty Returns the item in the collection at the specified index position. Exceptions MgException MgInvalidArgumentException\"> GetName(int) public virtual string GetName(int index) Parameters index int Returns string GetValue(int) public virtual string GetValue(int index) Parameters index int Returns string GetValue(string) public virtual string GetValue(string keyname) Parameters keyname string Returns string IndexOf(MgStringProperty) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns the index of the specified item in the collection or -1 if the item does not exist. public int IndexOf(MgStringProperty value) Parameters value MgStringProperty Property to search for Returns int Returns the index of the specified item in the collection or -1 if the item does not exist. IndexOf(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Returns the index of the specified item in the collection or -1 if the item does not exist. public int IndexOf(string keyname) Parameters keyname string Key for item Returns int Returns the index of the specified item in the collection or -1 if the item does not exist. Insert(int, MgStringProperty) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Inserts the specified item at the specified index position within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, MgStringProperty value) Parameters index int Insertion point value MgStringProperty Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. Insert(int, string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Inserts the specified item at the specified index position within the collection. Items following the insertion point are moved down to accommodate the new item. public void Insert(int index, string keyname, string value) Parameters index int Insertion point keyname string Input key value string Input value Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. Remove(MgStringProperty) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Removes the specified item from the collection. public bool Remove(MgStringProperty value) Parameters value MgStringProperty Property to remove Returns bool Returns true if removal was successful. Remove(string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Removes the specified item from the collection. public bool Remove(string keyname) Parameters keyname string Key for item Returns bool Returns true if removal was successful. RemoveAt(int) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Removes the specified item from the collection. public void RemoveAt(int index) Parameters index int Input index Exceptions MgException with code (MgIndexOutOfRangeException) if the index is out of range. SetItem(int, MgStringProperty) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the item in the collection at the specified index position. public void SetItem(int index, MgStringProperty value) Parameters index int Input index value MgStringProperty Value to set SetValue(string, string) (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Sets the item in the collection with the specified key to the specified value. public void SetValue(string keyname, string value) Parameters keyname string Input key name value string Input value Exceptions MgException with code (MgObjectNotFoundException) if the key does not exist. ToXml() (NOTE: This API is not officially supported and may be subject to removal in a future release without warning. Use with caution.) Creates an XML document representing the collection. The order of the properties in the XML is the same as the order of the properties in the collection. It starts with item zero to length of collection. TODO: Add a snippet of XML here? public MgByteReader ToXml() Returns MgByteReader A pointer to an MgByteReader object."
  },
  "api/OSGeo.MapGuide.MgTileService.html": {
    "href": "api/OSGeo.MapGuide.MgTileService.html",
    "title": "Class MgTileService | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgTileService Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll This class provides services to render a map into an image public class MgTileService : MgService, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgService MgTileService Implements IDisposable Inherited Members MgService.HasWarnings() MgService.GetWarningsObject() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ClearCache(MgMap) Clears the entire tile cache for the given map. Tiles for all base map layer groups and finite scales will be removed. public void ClearCache(MgMap map) Parameters map MgMap Input Specifies the map whose tile cache will be cleared. ClearCache(MgResourceIdentifier) Clears the entire tile cache for the given tile set. Tiles for all base map layer groups and finite scales will be removed. public void ClearCache(MgResourceIdentifier tileSet) Parameters tileSet MgResourceIdentifier Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDefaultTileSizeX() Returns the default width of a tile. public int GetDefaultTileSizeX() Returns int Default width of a tile in pixels. GetDefaultTileSizeX(MgResourceIdentifier) Returns the default width of a tile. public int GetDefaultTileSizeX(MgResourceIdentifier tileSet) Parameters tileSet MgResourceIdentifier Input Specifies the resource id of the tile set Returns int Default width of a tile in pixels. GetDefaultTileSizeY() Returns the default height of a tile. public int GetDefaultTileSizeY() Returns int Default height of a tile in pixels. GetDefaultTileSizeY(MgResourceIdentifier) Returns the default height of a tile. public int GetDefaultTileSizeY(MgResourceIdentifier tileSet) Parameters tileSet MgResourceIdentifier Input Specifies the resource id of the tile set Returns int Default height of a tile in pixels. GetTile(MgMap, string, int, int) Returns the specified base map tile for the given map. If a cached tile image exists it will return it, otherwise the tile is rendered and added to the cache. public MgByteReader GetTile(MgMap map, string baseMapLayerGroupName, int tileColumn, int tileRow) Parameters map MgMap Input Map object containing current state of map. baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. tileColumn int Input Specifies the column index of the tile to return. tileRow int Input Specifies the row index of the tile to return. Returns MgByteReader A byte reader containing the rendered tile image. GetTile(MgResourceIdentifier, string, int, int, int) Returns the specified base map tile for the given map or tile set. If a cached tile image exists it will return it, otherwise the tile is rendered and added to the cache. public MgByteReader GetTile(MgResourceIdentifier resource, string baseMapLayerGroupName, int tileColumn, int tileRow, int scaleIndex) Parameters resource MgResourceIdentifier Input Resource identifier for the map definition or Tile Set Definition baseMapLayerGroupName string Input Specifies the name of the baseMapLayerGroup for which to render the tile. tileColumn int Input Specifies the column index of the tile to return. tileRow int Input Specifies the row index of the tile to return. scaleIndex int Input Scale index to render. Most detailed scale is index 0. Returns MgByteReader A byte reader containing the rendered tile image. GetTileProviders() Returns the XML description of available tile providers, along with supported connection parameters. This provides sufficient information for client applications to build rich editor user interfaces for editing Tile Set Definitions public MgByteReader GetTileProviders() Returns MgByteReader The XML description of available tile providers"
  },
  "api/OSGeo.MapGuide.MgTransaction.html": {
    "href": "api/OSGeo.MapGuide.MgTransaction.html",
    "title": "Class MgTransaction | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgTransaction Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll MgTransaction represents a transaction to be performed in a DataStore. If the transaction is time out, commit or rollback a transaction will result in one exception OSGeo.MapGuide.MgFeatureServiceException thrown. public class MgTransaction : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgTransaction Implements IDisposable Derived MgPortableTransaction Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddSavePoint(string) Create a save point in this transaction. public string AddSavePoint(string suggestName) Parameters suggestName string Suggested save point name. Returns string The actual name used Commit() Commit the transaction. public void Commit() Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetFeatureSource() Get the identifier of feature source associated with the transaction. public MgResourceIdentifier GetFeatureSource() Returns MgResourceIdentifier Returns the identifier of feature source associated with the transaction. ReleaseSavePoint(string) Release a specific save point. public void ReleaseSavePoint(string savePointName) Parameters savePointName string Save point name. Rollback() Rollback the transaction. public void Rollback() Rollback(string) Rollback the transaction to a specified save point. public void Rollback(string savePointName) Parameters savePointName string Save point name."
  },
  "api/OSGeo.MapGuide.MgTransform.html": {
    "href": "api/OSGeo.MapGuide.MgTransform.html",
    "title": "Class MgTransform | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgTransform Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll MgTransform is an abstract class that can be implemented to provide linear or projected coordinate transformations. There are currently no concrete classes. public class MgTransform : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgTransform Implements IDisposable Derived MgCoordinateSystemTransform Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Transform(MgCoordinate) Transforms the coordinate and returns a new coordinate. public MgCoordinate Transform(MgCoordinate coordinate) Parameters coordinate MgCoordinate (MgCoordinate) The input MgCoordinate to transform. Returns MgCoordinate A new MgCoordinate transformed from the specified coordinate. Transform(MgEnvelope) Transforms the envelope and returns a new envelope. public MgEnvelope Transform(MgEnvelope envelope) Parameters envelope MgEnvelope (MgEnvelope) The input MgEnvelope to transform. Returns MgEnvelope A new MgEnvelope transformed from the specified envelope. Transform(double, double) Transforms the X and Y ordinates and returns a new coordinate. public MgCoordinate Transform(double x, double y) Parameters x double (double) The X ordinate to transform. y double (double) The Y ordinate to transform. Returns MgCoordinate A new MgCoordinate defined by the transformed X and Y ordinates. Transform(double, double, double) Transforms the X, Y, and Z ordinates and returns a new coordinate. public MgCoordinate Transform(double x, double y, double z) Parameters x double (double) The X ordinate to transform. y double (double) The Y ordinate to transform. z double (double) The Z ordinate to transform. Returns MgCoordinate A new MgCoordinate defined by the transformed X, Y, and Z ordinates."
  },
  "api/OSGeo.MapGuide.MgUnitType.html": {
    "href": "api/OSGeo.MapGuide.MgUnitType.html",
    "title": "Class MgUnitType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgUnitType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll MgUnitType defines enumerated values used to determine the type of units for plot decorations (scale bar). public class MgUnitType Inheritance object MgUnitType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Metric Metric. public const string Metric = \"Metric\" Field Value string USEnglish US English. public const string USEnglish = \"US-English\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgUpdateFeatures.html": {
    "href": "api/OSGeo.MapGuide.MgUpdateFeatures.html",
    "title": "Class MgUpdateFeatures | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgUpdateFeatures Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Creates an update feature data command. You must add this command to an MgFeatureCommandCollection object and pass the latter in a call to MgFeatureService::UpdateFeatures. public class MgUpdateFeatures : MgFeatureCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgFeatureCommand MgUpdateFeatures Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgUpdateFeatures(string, MgPropertyCollection, string) Constructs an MgUpdateFeatures object. public MgUpdateFeatures(string className, MgPropertyCollection propertyValues, string filterText) Parameters className string (String/string) The name of class in the schema definition in the feature source whose feature instances are to be updated propertyValues MgPropertyCollection (MgPropertyCollection) The collection of properties to be updated. filterText string (String/string) The filter used to select the feature instances to be updated. Properties CommandType public int CommandType { get; } Property Value int FeatureClassName public string FeatureClassName { get; } Property Value string FilterText public string FilterText { get; } Property Value string PropertyValues public MgPropertyCollection PropertyValues { get; } Property Value MgPropertyCollection Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCommandType() public override int GetCommandType() Returns int GetFeatureClassName() public string GetFeatureClassName() Returns string GetFilterText() public string GetFilterText() Returns string GetPropertyValues() public MgPropertyCollection GetPropertyValues() Returns MgPropertyCollection"
  },
  "api/OSGeo.MapGuide.MgUser.html": {
    "href": "api/OSGeo.MapGuide.MgUser.html",
    "title": "Class MgUser | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgUser Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll MapGuide users. public class MgUser Inheritance object MgUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Administrator public const string Administrator = \"Administrator\" Field Value string Anonymous public const string Anonymous = \"Anonymous\" Field Value string Author public const string Author = \"Author\" Field Value string WfsUser public const string WfsUser = \"WfsUser\" Field Value string WmsUser public const string WmsUser = \"WmsUser\" Field Value string"
  },
  "api/OSGeo.MapGuide.MgUserInformation.html": {
    "href": "api/OSGeo.MapGuide.MgUserInformation.html",
    "title": "Class MgUserInformation | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgUserInformation Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.MapGuideCommon.dll Type of user information INTERNAL API: Do not document public class MgUserInformation : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgUserInformation Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgUserInformation() Constructs an unintialized information object public MgUserInformation() MgUserInformation(string) Constructs an information object from a session identifier public MgUserInformation(string sessionId) Parameters sessionId string (String/string) MapGuide session identifier MgUserInformation(string, string) Constructs information object with a MapGuide user name and password. public MgUserInformation(string userName, string password) Parameters userName string (String/string) MapGuide user name password string (String/string) user password Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetClientAgent() public string GetClientAgent() Returns string GetClientIp() public string GetClientIp() Returns string GetLocale() Retrieves the locale for the user. public string GetLocale() Returns string Locale code GetReader() Returns an encrypted MgByteReader for the given credentials. This byte reader can then be used to populate credentials into any resource which requires default credentials. Some feature sources (Oracle Databases) and some drawing sources (password protected DWFs) may require default credentials to access them. See MgResourceService::SetResourceData for more information. public MgByteReader GetReader() Returns MgByteReader Encrypted byte reader for credentials SetClientAgent(string) public void SetClientAgent(string agent) Parameters agent string SetClientIp(string) public void SetClientIp(string ip) Parameters ip string SetLocale(string) Sets the desired locale for the user. public void SetLocale(string locale) Parameters locale string (String/string) Input Locale code SetMgSessionId(string) Initializes user information with a MapGuide session identifier. A session identifier can be created for the current user via MgSite::CreateSession. In order to obtain a session identifier, MgSiteConnection must be opened with valid credentials. Once opened, GetSite can be called to obtain MgSite which can then be used to create a session identifier for the currently logged in user. Session identifiers contain internally recognized authentication and locale information. public void SetMgSessionId(string sessionId) Parameters sessionId string (String/string) MapGuide session identifier SetMgUsernamePassword(string, string) Initializes credentials with a MapGuide user name and password. public void SetMgUsernamePassword(string userName, string password) Parameters userName string (String/string) MapGuide user name password string (String/string) user password"
  },
  "api/OSGeo.MapGuide.MgWarnings.html": {
    "href": "api/OSGeo.MapGuide.MgWarnings.html",
    "title": "Class MgWarnings | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWarnings Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.PlatformBase.dll Exposes non-critical warning messages from services. public class MgWarnings : MgSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgWarnings Implements IDisposable Inherited Members MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() Returns the count of warning messages public int GetCount() Returns int Number of warning messages GetMessages() Retrieves collection of warning messages public MgStringCollection GetMessages() Returns MgStringCollection Collection of messages"
  },
  "api/OSGeo.MapGuide.MgWebActions.html": {
    "href": "api/OSGeo.MapGuide.MgWebActions.html",
    "title": "Class MgWebActions | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebActions Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgWebActions Inheritance object MgWebActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields About public const int About = 22 Field Value int Buffer public const int Buffer = 28 Field Value int Copy public const int Copy = 21 Field Value int FitWindow public const int FitWindow = 11 Field Value int GetPrintablePage public const int GetPrintablePage = 24 Field Value int Help public const int Help = 33 Field Value int InvokeScript public const int InvokeScript = 31 Field Value int InvokeUrl public const int InvokeUrl = 26 Field Value int MapTip public const int MapTip = 34 Field Value int Measure public const int Measure = 25 Field Value int Pan public const int Pan = 1 Field Value int PanDown public const int PanDown = 3 Field Value int PanLeft public const int PanLeft = 5 Field Value int PanRight public const int PanRight = 4 Field Value int PanUp public const int PanUp = 2 Field Value int PrintMap public const int PrintMap = 23 Field Value int Refresh public const int Refresh = 20 Field Value int Search public const int Search = 27 Field Value int Select public const int Select = 15 Field Value int SelectClear public const int SelectClear = 19 Field Value int SelectPolygon public const int SelectPolygon = 17 Field Value int SelectRadius public const int SelectRadius = 16 Field Value int SelectWithin public const int SelectWithin = 32 Field Value int ViewNext public const int ViewNext = 13 Field Value int ViewOptions public const int ViewOptions = 30 Field Value int ViewPrevious public const int ViewPrevious = 12 Field Value int ViewRestore public const int ViewRestore = 14 Field Value int Zoom public const int Zoom = 6 Field Value int ZoomIn public const int ZoomIn = 7 Field Value int ZoomOut public const int ZoomOut = 8 Field Value int ZoomRectangle public const int ZoomRectangle = 9 Field Value int ZoomSelection public const int ZoomSelection = 10 Field Value int"
  },
  "api/OSGeo.MapGuide.MgWebBufferCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebBufferCommand.html",
    "title": "Class MgWebBufferCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebBufferCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebBufferCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebBufferCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgWebCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebCommand.html",
    "title": "Class MgWebCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebCommand : MgNamedSerializable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand Implements IDisposable Derived MgWebPrintCommand MgWebUiTargetCommand Inherited Members MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAction() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetAction() Returns int GetDescription() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetDescription() Returns string GetDisabledIconUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetDisabledIconUrl() Returns string GetIconUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetIconUrl() Returns string GetLabel() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetLabel() Returns string GetName() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetName() Returns string GetTargetViewerType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetTargetViewerType() Returns int GetTooltip() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetTooltip() Returns string IsUsed() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsUsed() Returns bool"
  },
  "api/OSGeo.MapGuide.MgWebCommandCollection.html": {
    "href": "api/OSGeo.MapGuide.MgWebCommandCollection.html",
    "title": "Class MgWebCommandCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebCommandCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebCommandCollection : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebCommandCollection Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Contains(MgWebCommand) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool Contains(MgWebCommand value) Parameters value MgWebCommand Returns bool Contains(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool Contains(string name) Parameters name string Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetCount() Returns int GetItem(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebCommand GetItem(int index) Parameters index int Returns MgWebCommand GetItem(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebCommand GetItem(string name) Parameters name string Returns MgWebCommand IndexOf(MgWebCommand) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int IndexOf(MgWebCommand value) Parameters value MgWebCommand Returns int IndexOf(string) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int IndexOf(string name) Parameters name string Returns int"
  },
  "api/OSGeo.MapGuide.MgWebCommandWidget.html": {
    "href": "api/OSGeo.MapGuide.MgWebCommandWidget.html",
    "title": "Class MgWebCommandWidget | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebCommandWidget Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebCommandWidget : MgWebWidget, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebWidget MgWebCommandWidget Implements IDisposable Inherited Members MgWebWidget.GetType() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCommand() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebCommand GetCommand() Returns MgWebCommand"
  },
  "api/OSGeo.MapGuide.MgWebContextMenu.html": {
    "href": "api/OSGeo.MapGuide.MgWebContextMenu.html",
    "title": "Class MgWebContextMenu | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebContextMenu Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebContextMenu : MgWebWidgetCollection, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebWidgetCollection MgWebContextMenu Implements IDisposable Inherited Members MgWebWidgetCollection.GetCount() MgWebWidgetCollection.GetWidget(int) MgWebWidgetCollection.Contains(MgWebWidget) MgWebWidgetCollection.IndexOf(MgWebWidget) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool IsVisible() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsVisible() Returns bool"
  },
  "api/OSGeo.MapGuide.MgWebFlyoutWidget.html": {
    "href": "api/OSGeo.MapGuide.MgWebFlyoutWidget.html",
    "title": "Class MgWebFlyoutWidget | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebFlyoutWidget Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebFlyoutWidget : MgWebWidget, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebWidget MgWebFlyoutWidget Implements IDisposable Inherited Members MgWebWidget.GetType() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDescription() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetDescription() Returns string GetDisabledIconUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetDisabledIconUrl() Returns string GetIconUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetIconUrl() Returns string GetLabel() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetLabel() Returns string GetSubItems() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebWidgetCollection GetSubItems() Returns MgWebWidgetCollection GetTooltip() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetTooltip() Returns string"
  },
  "api/OSGeo.MapGuide.MgWebGetPrintablePageCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebGetPrintablePageCommand.html",
    "title": "Class MgWebGetPrintablePageCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebGetPrintablePageCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebGetPrintablePageCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebGetPrintablePageCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgWebHelpCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebHelpCommand.html",
    "title": "Class MgWebHelpCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebHelpCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebHelpCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebHelpCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetUrl() Returns string"
  },
  "api/OSGeo.MapGuide.MgWebInformationPane.html": {
    "href": "api/OSGeo.MapGuide.MgWebInformationPane.html",
    "title": "Class MgWebInformationPane | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebInformationPane Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebInformationPane : MgWebUiSizablePane, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebUiPane MgWebUiSizablePane MgWebInformationPane Implements IDisposable Inherited Members MgWebUiSizablePane.GetWidth() MgWebUiPane.IsVisible() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool IsLegendBandVisible() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsLegendBandVisible() Returns bool IsPropertiesBandVisible() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsPropertiesBandVisible() Returns bool"
  },
  "api/OSGeo.MapGuide.MgWebInvokeScriptCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebInvokeScriptCommand.html",
    "title": "Class MgWebInvokeScriptCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebInvokeScriptCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebInvokeScriptCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebInvokeScriptCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetScriptCode() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetScriptCode() Returns string"
  },
  "api/OSGeo.MapGuide.MgWebInvokeUrlCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebInvokeUrlCommand.html",
    "title": "Class MgWebInvokeUrlCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebInvokeUrlCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebInvokeUrlCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebInvokeUrlCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DisabledIfSelectionEmpty() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool DisabledIfSelectionEmpty() Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetLayerCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetLayerCount() Returns int GetLayerNameAt(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetLayerNameAt(int index) Parameters index int Returns string GetParameterCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetParameterCount() Returns int GetParameterNameAt(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetParameterNameAt(int index) Parameters index int Returns string GetParameterValueAt(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetParameterValueAt(int index) Parameters index int Returns string GetUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetUrl() Returns string"
  },
  "api/OSGeo.MapGuide.MgWebLayout.html": {
    "href": "api/OSGeo.MapGuide.MgWebLayout.html",
    "title": "Class MgWebLayout | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebLayout Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebLayout : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebLayout Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgWebLayout(MgResourceService, MgResourceIdentifier) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebLayout(MgResourceService resourceService, MgResourceIdentifier webLayoutId) Parameters resourceService MgResourceService webLayoutId MgResourceIdentifier Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetAjaxPreviewUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetAjaxPreviewUrl() Returns string GetCenter() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgPoint GetCenter() Returns MgPoint GetCommands() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebCommandCollection GetCommands() Returns MgWebCommandCollection GetContextMenu() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebContextMenu GetContextMenu() Returns MgWebContextMenu GetDwfPreviewUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetDwfPreviewUrl() Returns string GetEnablePingServer() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool GetEnablePingServer() Returns bool GetHyperlinkTarget() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetHyperlinkTarget() Returns int GetHyperlinkTargetFrame() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetHyperlinkTargetFrame() Returns string GetInformationPane() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebInformationPane GetInformationPane() Returns MgWebInformationPane GetMapDefinition() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetMapDefinition() Returns string GetMapImageFormat() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetMapImageFormat() Returns string GetPointSelectionBuffer() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetPointSelectionBuffer() Returns int GetScale() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public double GetScale() Returns double GetSelectionColor() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetSelectionColor() Returns string GetSelectionImageFormat() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetSelectionImageFormat() Returns string GetStartupScript() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetStartupScript() Returns string GetStatusBar() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebUiPane GetStatusBar() Returns MgWebUiPane GetTaskPane() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebTaskPane GetTaskPane() Returns MgWebTaskPane GetTitle() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetTitle() Returns string GetToolBar() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebToolBar GetToolBar() Returns MgWebToolBar IsZoomControlVisible() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsZoomControlVisible() Returns bool ProcessGettingStartedPage(MgByteReader, bool) public MgByteReader ProcessGettingStartedPage(MgByteReader htmlGettingStarted, bool forDwf) Parameters htmlGettingStarted MgByteReader forDwf bool Returns MgByteReader"
  },
  "api/OSGeo.MapGuide.MgWebMeasureCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebMeasureCommand.html",
    "title": "Class MgWebMeasureCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebMeasureCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebMeasureCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebMeasureCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgWebPrintCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebPrintCommand.html",
    "title": "Class MgWebPrintCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebPrintCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebPrintCommand : MgWebCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebPrintCommand Implements IDisposable Inherited Members MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetPrintLayoutAt(int) public string GetPrintLayoutAt(int index) Parameters index int Returns string GetPrintLayoutCount() public int GetPrintLayoutCount() Returns int"
  },
  "api/OSGeo.MapGuide.MgWebSearchCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebSearchCommand.html",
    "title": "Class MgWebSearchCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebSearchCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebSearchCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebSearchCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetColumnDisplayNameAt(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetColumnDisplayNameAt(int index) Parameters index int Returns string GetColumnPropertyNameAt(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetColumnPropertyNameAt(int index) Parameters index int Returns string GetFilter() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetFilter() Returns string GetLayer() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetLayer() Returns string GetMatchLimit() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetMatchLimit() Returns int GetPrompt() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetPrompt() Returns string GetResultColumnCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetResultColumnCount() Returns int"
  },
  "api/OSGeo.MapGuide.MgWebSelectWithinCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebSelectWithinCommand.html",
    "title": "Class MgWebSelectWithinCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebSelectWithinCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebSelectWithinCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebSelectWithinCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgWebSeparatorWidget.html": {
    "href": "api/OSGeo.MapGuide.MgWebSeparatorWidget.html",
    "title": "Class MgWebSeparatorWidget | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebSeparatorWidget Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebSeparatorWidget : MgWebWidget, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebWidget MgWebSeparatorWidget Implements IDisposable Inherited Members MgWebWidget.GetType() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgWebTargetType.html": {
    "href": "api/OSGeo.MapGuide.MgWebTargetType.html",
    "title": "Class MgWebTargetType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebTargetType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgWebTargetType Inheritance object MgWebTargetType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NewWindow public const int NewWindow = 2 Field Value int SpecifiedFrame public const int SpecifiedFrame = 3 Field Value int TaskPane public const int TaskPane = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgWebTargetViewerType.html": {
    "href": "api/OSGeo.MapGuide.MgWebTargetViewerType.html",
    "title": "Class MgWebTargetViewerType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebTargetViewerType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgWebTargetViewerType Inheritance object MgWebTargetViewerType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Ajax public const int Ajax = 2 Field Value int All public const int All = 3 Field Value int Dwf public const int Dwf = 1 Field Value int"
  },
  "api/OSGeo.MapGuide.MgWebTaskBar.html": {
    "href": "api/OSGeo.MapGuide.MgWebTaskBar.html",
    "title": "Class MgWebTaskBar | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebTaskBar Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebTaskBar : MgWebUiPane, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebUiPane MgWebTaskBar Implements IDisposable Inherited Members MgWebUiPane.IsVisible() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetTaskButtons() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebWidgetCollection GetTaskButtons() Returns MgWebWidgetCollection GetTaskList() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebWidgetCollection GetTaskList() Returns MgWebWidgetCollection"
  },
  "api/OSGeo.MapGuide.MgWebTaskBarWidget.html": {
    "href": "api/OSGeo.MapGuide.MgWebTaskBarWidget.html",
    "title": "Class MgWebTaskBarWidget | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebTaskBarWidget Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebTaskBarWidget : MgWebWidget, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebWidget MgWebTaskBarWidget Implements IDisposable Inherited Members MgWebWidget.GetType() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetDescription() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetDescription() Returns string GetDisabledIconUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetDisabledIconUrl() Returns string GetIconUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetIconUrl() Returns string GetName() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetName() Returns string GetTooltip() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetTooltip() Returns string"
  },
  "api/OSGeo.MapGuide.MgWebTaskButtonType.html": {
    "href": "api/OSGeo.MapGuide.MgWebTaskButtonType.html",
    "title": "Class MgWebTaskButtonType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebTaskButtonType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgWebTaskButtonType Inheritance object MgWebTaskButtonType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Back public const int Back = 1 Field Value int Forward public const int Forward = 2 Field Value int Home public const int Home = 0 Field Value int Tasks public const int Tasks = 3 Field Value int"
  },
  "api/OSGeo.MapGuide.MgWebTaskPane.html": {
    "href": "api/OSGeo.MapGuide.MgWebTaskPane.html",
    "title": "Class MgWebTaskPane | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebTaskPane Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebTaskPane : MgWebUiSizablePane, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebUiPane MgWebUiSizablePane MgWebTaskPane Implements IDisposable Inherited Members MgWebUiSizablePane.GetWidth() MgWebUiPane.IsVisible() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetInitialTaskUrl() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetInitialTaskUrl() Returns string GetTaskBar() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebTaskBar GetTaskBar() Returns MgWebTaskBar"
  },
  "api/OSGeo.MapGuide.MgWebToolBar.html": {
    "href": "api/OSGeo.MapGuide.MgWebToolBar.html",
    "title": "Class MgWebToolBar | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebToolBar Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebToolBar : MgWebUiPane, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebUiPane MgWebToolBar Implements IDisposable Inherited Members MgWebUiPane.IsVisible() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetWidgets() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebWidgetCollection GetWidgets() Returns MgWebWidgetCollection"
  },
  "api/OSGeo.MapGuide.MgWebUiPane.html": {
    "href": "api/OSGeo.MapGuide.MgWebUiPane.html",
    "title": "Class MgWebUiPane | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebUiPane Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebUiPane : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebUiPane Implements IDisposable Derived MgWebTaskBar MgWebToolBar MgWebUiSizablePane Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool IsVisible() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool IsVisible() Returns bool"
  },
  "api/OSGeo.MapGuide.MgWebUiSizablePane.html": {
    "href": "api/OSGeo.MapGuide.MgWebUiSizablePane.html",
    "title": "Class MgWebUiSizablePane | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebUiSizablePane Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebUiSizablePane : MgWebUiPane, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebUiPane MgWebUiSizablePane Implements IDisposable Derived MgWebInformationPane MgWebTaskPane Inherited Members MgWebUiPane.IsVisible() MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetWidth() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetWidth() Returns int"
  },
  "api/OSGeo.MapGuide.MgWebUiTargetCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebUiTargetCommand.html",
    "title": "Class MgWebUiTargetCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebUiTargetCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebUiTargetCommand : MgWebCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand Implements IDisposable Derived MgWebBufferCommand MgWebGetPrintablePageCommand MgWebHelpCommand MgWebInvokeScriptCommand MgWebInvokeUrlCommand MgWebMeasureCommand MgWebSearchCommand MgWebSelectWithinCommand MgWebViewOptionsCommand Inherited Members MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetTarget() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetTarget() Returns int GetTargetName() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public string GetTargetName() Returns string"
  },
  "api/OSGeo.MapGuide.MgWebViewOptionsCommand.html": {
    "href": "api/OSGeo.MapGuide.MgWebViewOptionsCommand.html",
    "title": "Class MgWebViewOptionsCommand | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebViewOptionsCommand Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebViewOptionsCommand : MgWebUiTargetCommand, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgSerializable MgNamedSerializable MgWebCommand MgWebUiTargetCommand MgWebViewOptionsCommand Implements IDisposable Inherited Members MgWebUiTargetCommand.GetTarget() MgWebUiTargetCommand.GetTargetName() MgWebCommand.GetName() MgWebCommand.GetLabel() MgWebCommand.GetAction() MgWebCommand.GetIconUrl() MgWebCommand.GetDisabledIconUrl() MgWebCommand.GetTooltip() MgWebCommand.GetDescription() MgWebCommand.GetTargetViewerType() MgWebCommand.IsUsed() MgNamedSerializable.getCPtr(MgNamedSerializable) MgNamedSerializable.swigRelease(MgNamedSerializable) MgSerializable.getCPtr(MgSerializable) MgSerializable.swigRelease(MgSerializable) MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/OSGeo.MapGuide.MgWebWidget.html": {
    "href": "api/OSGeo.MapGuide.MgWebWidget.html",
    "title": "Class MgWebWidget | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebWidget Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebWidget : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebWidget Implements IDisposable Derived MgWebCommandWidget MgWebFlyoutWidget MgWebSeparatorWidget MgWebTaskBarWidget Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetType() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetType() Returns int"
  },
  "api/OSGeo.MapGuide.MgWebWidgetCollection.html": {
    "href": "api/OSGeo.MapGuide.MgWebWidgetCollection.html",
    "title": "Class MgWebWidgetCollection | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebWidgetCollection Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: This class has no class documentation (message inserted by IMake.exe) public class MgWebWidgetCollection : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWebWidgetCollection Implements IDisposable Derived MgWebContextMenu Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Contains(MgWebWidget) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public bool Contains(MgWebWidget value) Parameters value MgWebWidget Returns bool Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetCount() TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int GetCount() Returns int GetWidget(int) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public MgWebWidget GetWidget(int index) Parameters index int Returns MgWebWidget IndexOf(MgWebWidget) TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public int IndexOf(MgWebWidget value) Parameters value MgWebWidget Returns int"
  },
  "api/OSGeo.MapGuide.MgWebWidgetType.html": {
    "href": "api/OSGeo.MapGuide.MgWebWidgetType.html",
    "title": "Class MgWebWidgetType | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWebWidgetType Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Web.dll TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) public class MgWebWidgetType Inheritance object MgWebWidgetType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Command public const int Command = 1 Field Value int Flyout public const int Flyout = 3 Field Value int Separator public const int Separator = 2 Field Value int TaskButton public const int TaskButton = 4 Field Value int"
  },
  "api/OSGeo.MapGuide.MgWktReaderWriter.html": {
    "href": "api/OSGeo.MapGuide.MgWktReaderWriter.html",
    "title": "Class MgWktReaderWriter | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class MgWktReaderWriter Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Geometry.dll Translates a string in AGF (Autodesk Geometry Format) Text public class MgWktReaderWriter : MgGuardDisposable, IDisposable Inheritance object MgObject MgDisposable MgGuardDisposable MgWktReaderWriter Implements IDisposable Inherited Members MgGuardDisposable.getCPtr(MgGuardDisposable) MgGuardDisposable.swigRelease(MgGuardDisposable) MgDisposable.getCPtr(MgDisposable) MgDisposable.swigRelease(MgDisposable) MgObject.swigCMemOwn MgObject.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MgWktReaderWriter() Constructor public MgWktReaderWriter() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Read(string) Reads a geometry object from an AGF Text format. public MgGeometry Read(string wkt) Parameters wkt string (String/string) A string that supplies the AGF Text representation. Returns MgGeometry An instance of MgGeometry that corresponds to the specified AGF Text. Read(string, MgTransform) Reads a geometry object from a string in WKT format applying the specified transform during the read. public MgGeometry Read(string wkt, MgTransform transform) Parameters wkt string (String/string) A string that supplies the WKT representation. transform MgTransform (MgTransform) An MgTransform that is used to transform each coordinate read from the WKT representation. Returns MgGeometry An instance of MgGeometry that corresponds to the specified WKT with the specified transform applied. Write(MgGeometry) Writes a geometry object to a string in AGF Text format. public string Write(MgGeometry geometry) Parameters geometry MgGeometry (MgGeometry) An MgGeometry object to write to AGF Text. Returns string A string that contains the AGF Text representation. Write(MgGeometry, MgTransform) Writes a geometry object to a string in WKT format applying the specified transform during the write. public string Write(MgGeometry geometry, MgTransform transform) Parameters geometry MgGeometry (MgGeometry) An MgGeometry object to write to WKT. transform MgTransform (MgTransform) An MgTransform that is used to transform each coordinate written to the WKT representation. Returns string A string that contains the transformed WKT representation."
  },
  "api/OSGeo.MapGuide.ReadOnlyRewindableStream.html": {
    "href": "api/OSGeo.MapGuide.ReadOnlyRewindableStream.html",
    "title": "Class ReadOnlyRewindableStream | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Class ReadOnlyRewindableStream Namespace OSGeo.MapGuide Assembly OSGeo.MapGuide.Foundation.dll A read-only, rewindable stream public abstract class ReadOnlyRewindableStream : Stream, IDisposable Inheritance object MarshalByRefObject Stream ReadOnlyRewindableStream Implements IDisposable Derived MgReadOnlyStream Inherited Members Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.Dispose(bool) Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.Flush() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.Read(byte[], int, int) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadByte() Stream.Synchronized(Stream) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteByte(byte) Stream.CanTimeout Stream.Length Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CanRead Gets whether this stream supports reading public override bool CanRead { get; } Property Value bool CanRewind Gets whether this stream is rewindable. If not, calls to Rewind() throw a InvalidOperationException public abstract bool CanRewind { get; } Property Value bool CanSeek Gets whether this stream supports seeking public override bool CanSeek { get; } Property Value bool CanWrite Gets whether this stream supports writing public override bool CanWrite { get; } Property Value bool Position Gets or sets the position (not implemented) public override long Position { get; set; } Property Value long Methods Rewind() Resets the internal position of the stream public abstract void Rewind() Seek(long, SeekOrigin) Seeks to the specified offset in the stream (not implemented) public override long Seek(long offset, SeekOrigin origin) Parameters offset long origin SeekOrigin Returns long SetLength(long) Sets the length of the stream (not implemented) public override void SetLength(long value) Parameters value long Write(byte[], int, int) Writes the specified buffer into the stream (not implemented) public override void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] offset int count int"
  },
  "api/OSGeo.MapGuide.html": {
    "href": "api/OSGeo.MapGuide.html",
    "title": "Namespace OSGeo.MapGuide | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Namespace OSGeo.MapGuide Classes ManagedException ManagedException is the exception class from which the root of unmanaged exception derive This class, deriving from .NET Exception, allows to use the most common properties of the Exception class on exceptions wrapping unmanaged MgException classes. The implementation of these properties relies on the equivalent MgException methods. Although this class does not wrap any unmanaged class, it still holds a C++ pointer to the MgException that derives from it. MapGuideApi This is the entry point of the MapGuide API MgAgfReaderWriter The MgAgfReaderWriter class is used to translate an MgGeometry object into into an MgByteReader object and to do the reverse translation. MgAggregateGeometry MgAggregateGeometry is an abstract base class for all of the geometry types that are composed of a set of aggregated geometry objects. MgArcSegment MgArcSegment is a curve segment defined in terms of a start point, end point, and a control point. MgBatchPropertyCollection MgBatchPropertyCollection represents a collection of properties. Properties are name/value pairs used for specifying the values of properties. MgBlobProperty Stores BLOB (Binary Large Object) data with an associated key name. MgBooleanProperty Stores boolean data with an associated key name. MgByteProperty Stores a single BYTE of data with an associated key name. MgByteReader Reads data from a byte source. Once read, the data in the reader cannot be reread. MgByteSink MgByteSink is a used to write the content of a MgByteReader object to a file. MgByteSink is, like MgByteReader, inherently read-only. MgByteSource Represents a source of byte data with a specific content type. MgClassDefinition Defines a feature class belonging to a schema. MgClassDefinitionCollection ClassDefinitionCollection represents a collection of class definitions in a feature schema. MgClobProperty Stores CLOB (Character Large Object) data with an associated key name. MgCollection MgCollection is an abstract class for defining standard collection access for all collection classes. MgColor This class stores Alpha, Red, Green and Blue component of a Color. MgConfigProperties Properties stored in an OSGeo.MapGuide.MgConfiguration object. Note that the properties are organized into Property Sections. These sections may be used in the API to set/get groups of configuration properties. INTERNAL_ONLY: MgCoordinate MgCoordinate is an abstract base class used to represent the Cartesian coordinates of a geometry. MgCoordinateCollection MgCoordinateCollection provides support for defining an ordered set of coordinates. MgCoordinateDimension MgCoordinateDimension defines a set of integer constants which can be OR'd together to specify the dimensionality of an MgCoordinate instance. MgCoordinateIterator The class MgCoordinateIterator supports iteration over the coordinates of a geometry or path instruction. MgCoordinateSpace Specifies the coordinate space for feature geometry returned from QueryFeatures. Can also specify that only non-geometric data should be returned by QueryFeature. MgCoordinateSystem TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgCoordinateSystemCatalog Defines and manages the physical location of coordinate system data files MgCoordinateSystemCategory Defines a category of coordinate systems MgCoordinateSystemCategoryDictionary Basic functionality for the coordinate system category dictionary MgCoordinateSystemCodeFormat Defines constants used to indicate the WKT flavor MgCoordinateSystemDatum TODO: This class has no class documentation (message inserted by IMake.exe) MgCoordinateSystemDatumDictionary Basic functionality for the datum dictionary MgCoordinateSystemDictionary Basic functionality for the coordinate system dictionary MgCoordinateSystemDictionaryBase Basic functionality for all kinds of dictionaries MgCoordinateSystemDictionaryUtility Basic functionality for all kinds of dictionaries MgCoordinateSystemEllipsoid Defines a coordinate system ellipsoid MgCoordinateSystemEllipsoidDictionary Basic functionality for the ellipsoid dictionary MgCoordinateSystemEnum TODO: This class has no class documentation (message inserted by IMake.exe) MgCoordinateSystemEnumInteger32 TODO: This class has no class documentation (message inserted by IMake.exe) MgCoordinateSystemErrorCode Defines various error codes returned by the Coordinate System API MgCoordinateSystemFactory Supports the creation of MgCoordinateSystem objects based on a OpenGIS Well-Known Text (WKT) definition of the coordinate system. This class is the main entry point for accessing assorted classes and functionalities of the Coordinate System API MgCoordinateSystemFilter TODO: This class has no class documentation (message inserted by IMake.exe) MgCoordinateSystemFilterInteger32 TODO: This class has no class documentation (message inserted by IMake.exe) MgCoordinateSystemFormatConverter TODO: This class has no class documentation (message inserted by IMake.exe) MgCoordinateSystemGeodeticAnalyticalTransformDefParams This class holds all parameters that are specific to analytical geodetic transformation methods, e.g. geocentric transformation, molodensky etc. MgCoordinateSystemGeodeticAnalyticalTransformationMethod This class defines the currently supported transformation methods for analytical geodetic transformations as they can be read via the MgCoordinateSystemGeodeticTransformDefDictionary. That is, the constants defined below are only valid for MgCoordinateSystemGeodeticTransformDef instances of type MgCoordinateSystemGeodeticTransformDefType.Analytical. MgCoordinateSystemGeodeticDirection This class contains the constants for all current transformation definition types. MgCoordinateSystemGeodeticInterpolationTransformDefParams This class holds all parameters that are specific to grid-file based transformation. That is, where the actual datum shift value for a coordinate is determined by interpolating between grid point values as defined in the respective grid file(s). MgCoordinateSystemGeodeticMultipleRegressionTransformDefParams This class holds all parameters that are specific to the multiple regression transformation method. MgCoordinateSystemGeodeticMultipleRegressionTransformationMethod This class defines the currently supported transformation methods for multiple regression geodetic transformations as they can be read via the MgCoordinateSystemGeodeticTransformDefDictionary. That is, the constants defined below are only valid for MgCoordinateSystemGeodeticTransformDef instances of type MgCoordinateSystemGeodeticTransformDefType.MultipleRegression. MgCoordinateSystemGeodeticPath A geodetic (transformation) path allows to concatenate multiple geodetic transformations. For example, converting between 2 datums cannot be achieved by doing 1 datum shift only but requires to do 1 or more datums shifts in between. MgCoordinateSystemGeodeticPathDictionary The MgCoordinateSystemGeodeticPathDictionary provides access to all geodetic transformation path definitions as defined in the dictionary file this instance reads from / writes to. MgCoordinateSystemGeodeticPathElement A geodetic transformation path element describes a single transformation step within a series of concatenated steps that eventually form a geodetic (transformation) path. MgCoordinateSystemGeodeticStandaloneTransformDefParams This class (indirectly) describes the parameters of a geodetic transformation method that's built into the transformation engine. Hence, it does not allow for setting any parameters. Only the well known code can be set/get via (Set/Get)TransformationMethod. MgCoordinateSystemGeodeticStandaloneTransformationMethod This class defines all transformation methods that are built into the transformation engine. That is, when creating such a geodetic transformation the API client cannot specify any parameters because they are well known and are available to the engine already. The constants defined below are only valid for MgCoordinateSystemGeodeticTransformDef instances of type MgCoordinateSystemGeodeticTransformDefType.Standalone. MgCoordinateSystemGeodeticTransformDef An instance of this class describes a geodetic transformation with all its parameters as it is defined in the dictionary file. The actual transformation operation is performed by the MgCoordinateSystemGeodeticTransformation objects that's being returned by the CreateTransformation method. MgCoordinateSystemGeodeticTransformDefDictionary The MgCoordinateSystemGeodeticTransformDefDictionary provides access to all geodetic transformation definitions as defined in the dictionary file this instance reads from / writes to. MgCoordinateSystemGeodeticTransformDefParams Common base class for all geodetic transformation parameters. MgCoordinateSystemGeodeticTransformDefType This class contains the constants for all current transformation definition types. MgCoordinateSystemGeodeticTransformGridFile The MgCoordinateSystemGeodeticInterpolationTransformDefParams parameter class requires instances of MgCoordinateSystemGeodeticTransformGridFile to be set via its SetGridFiles method. An MgCoordinateSystemGeodeticTransformGridFile object simply describes the grid file rather than containing the (grid file) information itself. MgCoordinateSystemGeodeticTransformGridFileFormat This class contains the constants for all currently supported grid file formats. MgCoordinateSystemGeodeticTransformation An instance of this class allow a caller do perform a geodetic transformation (datum shift). That is, this class does not operate on coordinate system level, but rather on datum level. MgCoordinateSystemGeodeticTransformationMethod Defines the type of a geodetic transformation method MgCoordinateSystemGridBase MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemGridBoundary MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemGridLine MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemGridLineCollection MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemGridOrientation An enumeration of the supported values for the m_Orientation member of several objects related to grids and graticules. This value is used to qualify objects which are of the \"iso\" type. I.e. a grid line is referred to as an isoline as it is the locus of points which have a specific value for either the easting or the northing. It is this value which indicates which. Thus, a grid line which is classified as having an \"EastWest\" orientation will be a isoline which is the locus of points which share a common easting value, and the \"m_Value\" element of that object will be an easting value. Note that in this example, the line is typically a vertical line. MgCoordinateSystemGridRegion MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemGridRegionCollection MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemGridSpecializationType An enumeration of the various types of specialized grids/graticules currently supported. A specialized grid is one for which specific standards exist to which the results of this feature are compliant with. A generic grid is a simple non-standardized grid of a coordinate system drawn in a viewport based on another coordinate system. The values assigned are intended to support grouping standardized grids with similar features and is currently entirely arbitrary. Using a numeric literal instead of thes names of the defined constants is a sure way to write code that will get broken in the future. MgCoordinateSystemGridSpecification MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemGridTick MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemGridTickCollection MgCoordinateSystemGridSpecification is an object that is used to convey all the parameters necessary for the generation of a grid/graticule lumped into a single object for convenience. Thus, adding a parameter determined to be necessary at a later time does not alter a lot of calling sequences. Note that this interface is an abstract interface. There is code associated with the implementation of this interface which is used to handle the conversion of parameters between the various unit systems. Thus, one obtains a MgCoordinateSystemGridSpecification from the MgCoordinateSystemFactory object. Note that all values are provided in the units specified within the object. The units used in this object do not need to be the same as any coordinate system involved in the generation of a grid, although the type of unit must be consistent with the type of grid being drawn. That is, specifying a Angular unit type when drawing a UTM grid will cause an exception at the time the request for (say) grid lines is issued. MgCoordinateSystemMathComparator A mathematical comparator used to detemerine equality between two different coordinate systems, datums or ellipsoids MgCoordinateSystemMeasure Provides operations for measuring the distance between 2 coordinates and the azimuth of 2 coordinates as well as calculating a coordinate position given an initial coordinate, an azimuth, and a distance. MgCoordinateSystemMgrs This object carries most, if not all, intelligence specific to the MGRS (Military Grid Reference System) grid standard. It can be used at two distinct levels, depending upon how it is manufactured. When manufactured with an ellipsoid/datum specification, this object is suitable only for conversion of geographic coordinates to MGRS strings and vice-versa. WHen manufactured with a frame coordinate system with a grid boundary subsequently supplied, the resulting object is capable of NGRS string conversions AND the generation of MGRS grids. When manufactured using a frame coordinate system and subsequent provision of a frame boundary (see base class MgCoordinateSystemGridBase) the members derived from the MgCoordinateSystemGridBase base class can be used for MGRS grid drawing purposes. MgCoordinateSystemMgrsGridLevel Defines constants used to indicate the MGRS grid level MgCoordinateSystemMgrsGridSquarePosition MgCoordinateSystemMgrsGridSquarePosition defines enumerated values used to specify the the location desired relative to the subject MGRS grid sqaure when evaluating an MGRS string. Note that the values used in this enumeration match those used by the CS-MAP interface. MgCoordinateSystemMgrsLetteringScheme Defines constants used to indicate the MGRS lettering scheme MgCoordinateSystemProjectionCode Defines coordinate system projection codes MgCoordinateSystemProjectionFormatType Defines the type of projection format MgCoordinateSystemProjectionInformation Represents information about a coordinate system projection MgCoordinateSystemProjectionLogicalType Defines the logical types of a coordinate system projection MgCoordinateSystemProjectionParameterType Defines the types of coordinate system projection parameters MgCoordinateSystemTransform Provides operations for transforming coordinates from one coordinate system to another. MgCoordinateSystemType Defines constants used to indicate the type of a coordinate system. MgCoordinateSystemUnitCode Defines the various coordinate system unit codes MgCoordinateSystemUnitInformation Represents information about a coordinate system unit MgCoordinateSystemUnitType Defines the types of coordinate system units MgCoordinateSystemWktFlavor Defines constants used to indicate the WKT flavor MgCoordinateXY MgCoordinateXY is a concrete class derived from the abstract class MgCoordinate. MgCoordinateXYM MgCoordinateXYM is a concrete class derived from the abstract class MgCoordinate. MgCoordinateXYZ MgCoordinateXYZ is a concrete class derived from the abstract class MgCoordinate. MgCoordinateXYZM MgCoordinateXYZM is a concrete class derived from the abstract class MgCoordinate. MgCurve MgCurve is an abstract base class. MgCurveString and MgLineString are concrete classes derived from MgCurve. MgCurvePolygon An MgCurvePolygon is a region, defined by 1 exterior boundary and 0 or more interior boundaries. MgCurvePolygonCollection MgCurvePolygonCollection provides support for defining an ordered set of curve polygons. MgCurveRing MgCurveRing is a geometry component used in the construction of MgCurvePolygon objects. MgCurveRingCollection MgCurveRingCollection provides support for defining an ordered set of curve rings. MgCurveSegment MgCurveSegment is an abstract base class. MgCurveSegmentCollection MgCurveSegmentCollection provides support for defining an ordered set of curve segments. MgCurveString An MgCurveString is composed of one or more curve segments. MgCurveStringCollection MgCurveStringCollection provides support for defining an ordered set of curve strings. MgDataPropertyDefinition Defines a data property belonging to a feature class. MgDataReader Provides a forward-only, read-only iterator for reading computed data retrieved from a datastore. MgDateTime MgDateTime is used to store dates, times, or both. MgDateTimeProperty Stores MgDateTime data with an associated key name. MgDeleteFeatures A feature command that features from a datastore. The feature class name and filter text define feature(s) to delete. This class is added to an MgFeatureCommandCollection object, which is then passed in a call to the MgFeatureService::UpdateFeatures method. MgDisposable MgDisposable is the base interface for all classes that implement this standard interface for reference counting and object destruction. MgDisposableCollection This class represents a collection of MgDisposable objects. The objects are owned and managed by the collection. MgDoubleProperty Stores double precision floating point data with an associated key name. An instance of this class can be stored in an MgPropertyCollection object. The key name can be used to retrieve the instance from the property collection. MgDrawingService TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgDwfVersion TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgEnvelope MgEnvelope represents a bounding box defined in terms of a lower left coordinate and an upper right coordinate. MgException Base class for exceptions. MgExceptionCodes MgFeatureAggregateOptions Use this class to set the filter criteria used to select groups of features from a datastore or for restricting the values returned to be unique. MgFeatureCommand Is the abstract base class for feature command classes: MgDeleteFeatures, MgInsertFeatures, and MgUpdateFeatures. MgFeatureCommandCollection Represents a collection of feature commands. MgFeatureCommandType Is a set of constants used to specify the type of an MgFeatureCommand object. MgFeatureGeometricType Is a set of constants specifying the dimensions of geometries which can be stored in a geometry property. MgFeatureInformation Information about features. MgFeatureProperty Stores MgFeatureReader data with an associated key name. MgFeaturePropertyType Defines names for the different types of property definitions. See MgPropertyDefinition::GetPropertyType. MgFeatureQueryOptions Use this class to set filter criteria for selecting features MgFeatureReader Provides a forward-only, read-only iterator for reading features selected from the FDO Provider by the MgFeatureService::SelectFeatures() method call. MgFeatureSchema Contains one or more feature class definitions, which specify the structure of feature data in a datastore. MgFeatureSchemaCollection FeatureSchemaCollection represents a collection of feature schemas. MgFeatureService Provides an abstraction layer for the storage and retrieval of feature data in a technology-independent way. The API lets you determine what storage technologies are available and what capabilities they have. Access to the storage technology is modeled as a connection. For example, you can connect to a file and do simple insertions or connect to a relational database and do transaction-based operations. MgFeatureSourceParams Is a virtual base class for feature source parameters used with OSGeo.MapGuide.MgFeatureSource::CreateFeatureSource. This class cannot be instantiated directly. MgFeatureSpatialOperations Is a set of constants used to type spatial operations. MgFileFeatureSourceParams Contains the parameters used to create a file-based feature source. MgGeoJsonWriter A helper class to output GeoJSON from feature readers MgGeometricEntity MgGeometricEntity is an abstract base class that is the root of all geometry and geometry component classes. MgGeometricPathInstructionType MgGeometricPathInstructionType defines enumerated values used to specify the instructions contained in a geometric path. See OSGeo.MapGuide.MgGeometricPathIterator for a definition of a geometric path. MgGeometricPropertyDefinition Defines a geometric property belonging to a feature class. MgGeometry MgGeometry is an abstract base class for all of the geometry types. MgGeometryCollection MgGeometryCollection provides support for defining an ordered set of geometry objects. MgGeometryComponent MgGeometryComponent is the base class for all of the geometry component types, namely, MgArcSegment, MgCurveRing, MgLinearRing, and MgLinearSegment. MgGeometryComponentType MgGeometryComponentType defines a set of integer constants used to signify the type of a geometry component instance. MgGeometryEntityType MgGeometryEntityType defines two integer constants which signify whether an MgGeometricEntity is a geometry or a geometry component. MgGeometryFactory The MgGeometryFactory class is used to construct objects whose classes are derived from MgGeometry. MgGeometryProperty Stores MgByteReader data with an associated key name. MgGeometrySimplificationAlgorithmType MgGeometrySimplificationAlgorithmType defines constants indicating the various simplification algorithms available for simplifying geometry instances MgGeometrySimplifier The MgGeometrySimplifier class provides the ability to simplify MgGeometry instances. MgGeometryType MgGeometryType defines integer constants used to signify the derived type of an MgGeometry instance. MgGeometryTypeInfo Defines a list of geometric types. This is typically used for geometric property description. MgGroup MapGuide groups. MgGuardDisposable MgGuardDisposable is the base interface for all classes that implement this standard interface for thread-safe reference counting and object destruction. MgGwsFeatureReader Provides a forward-only, read-only iterator for reading data returned by a call to GwsQueryEngine. MgHttpHeader TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgHttpPrimitiveValue TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgHttpRequest TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgHttpRequestMetadata TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgHttpRequestParam TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgHttpResponse TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgHttpResult TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgImageFormats Image formats supported by the rendering service. MgInsertFeatures Creates an insert feature data command. You must add this command to an MgFeatureCommandCollection object and pass the latter in a call to MgFeatureService::UpdateFeatures. MgInt16Property Stores Int16 data with an associated key name. MgInt32Property Stores Int32 data with an associated key name. MgInt64Property Stores Int64 data with an associated key name. MgIntCollection This class represents a collection of integers. The integers are owned and managed by the collection. MgKmlService This class provides services to retrieve KML documents MgLayer Gets and sets properties of a layer. MgLayerBase Gets and sets properties of a layer. MgLayerCollection Manipulates collections of MgLayerBase objects. MgLayerGroup Manipulates the properties of a layer group. MgLayerGroupCollection Manipulates collections of MgLayerGroup objects. MgLayerGroupType MgLayerGroupType defines integer constants used to identify the type of a layer group. MgLayerType MgLayerType defines integer constants used to identify the type of a layer. MgLayout Specifies the ResourceId of the PrintLayout to use for a particular map, the title and the type of units to use in the layout. MgLineString An MgLineString is a curve with linear interpolation between points. MgLineStringCollection MgLineStringCollection provides support for defining an ordered set of line strings. MgLinearRing An MgLinearRing is a geometry component. MgLinearRingCollection MgLinearRingCollection provides support for defining an ordered set of linear rings. MgLinearSegment MgLinearSegment is a geometry component used in the construction of MgCurveString geometries and MgCurveRing geometry components. MgLocalizer MgLogFileType Types of log files MgLongTransactionReader Provides forward-only, read-only functionality for describing a set of long transactions that exist in the feature source. MgMap Defines the runtime state of a map. MgMapBase Defines the runtime state of a map. MgMapCollection Manipulates collections of MgMapBase objects. MgMapPlot The MgMapPlot class allows the developer to specify the map, the view of the map, the plot specification, and the layout for one sheet within a call to GenerateMultiPlot. MgMapPlotCollection Manipulates collections of MgMapPlot objects. MgMapPlotInstruction MgMapPlotInstruction defines enumerated values used to indicate whether the plot should be based on the center and scale of the map, an overridden center and scale, or an overridden extent. MgMappingService Performs map related operations such as getting an eMap DWF representing a map or updates to a map, or querying features from maps or layers of a map. MgMeasure MgMeasure is an abstract class that can be implemented to provide non-linear measurement for geometry operations. MgMetatile Defines a raw image frame buffer from the result of a meta-tile rendering operation MgMimeType Mime types for data to be sent to clients. MgMultiCurvePolygon An MgMultiCurvePolygon is a two-dimensional aggregate geometry whose elements are MgCurvePolygon geometries. MgMultiCurveString An MgMultiCurveString is a one-dimensional aggregate geometry whose elements are MgCurveString geometries. MgMultiGeometry An MgMultiGeometry is a heterogeneous aggregate of one or more MgGeometry objects. MgMultiLineString An MgMultiLineString is a one-dimensional aggregate geometry whose elements are MgLineString geometries. MgMultiPoint An MgMultiPoint is a 0 dimensional aggregate geometry whose elements are MgPoint geometries. MgMultiPolygon An MgMultiPolygon is a two-dimensional aggregate geometry whose elements are MgPolygon geometries. MgNamedSerializable Root class for all named serializable objects. MgNullableProperty This is the base class for all properties which can have NULL values. If a property value is NULL, there is no value, and a call to the GetValue() method throws an exception. MgObject Root class of all non-exception objects MgObjectPropertyDefinition Defines a feature property which contains one or more objects whose type is a feature class. If there is more than one object, an identity property is defined that is used to select an object from the collection. MgObjectPropertyType TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgOrderingOption Defines a type used to specify the order in which features are returned by MgFeatureService::SelectFeatures. This type is used as an argument to the MgFeatureQueryOptions::SetOrderingFilter. MgPackageStatusInformation This class manages resource package status information. MgPageUnitsType Defines page size units for the Mapping Service. MgParameter The MgParameter class specifies a value for a particular parameter. Instances of this class are used to specify a value to bind to a parameter when a command is executed. Typically, it is used to bind parameters to the SQL command. MgParameterCollection MgParameterCollection represents a collection of parameters. All parameters contained in an instance of a parameter collection are objects whose base class is MgParameter. A call to a parameter object's GetType() method returns one of the integer constants defined in class MgPropertyType. This collection does not allow duplicate key names. MgParameterDirection The MgParameterDirection defines integer constants used to signify the direction in which a parameter value will be used within the context of a FDO Command. MgPlotSpecification TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPoint An MgPoint is a 0-dimensional geometry and represents a single location in coordinate space. MgPointCollection MgPointCollection provides support for defining an ordered set of points. MgPolygon An MgPolygon is a region, defined by 1 exterior boundary and 0 or more interior boundaries. MgPolygonCollection MgPolygonCollection provides support for defining an ordered set of polygons. MgPortableDrawingService TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableDwfVersion TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableExceptionCodes MgPortableFeatureInformation Information about features. MgPortableFeatureService TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableImageFormats TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableLayer TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableLayout Specifies the ResourceId of the PrintLayout to use for a particular map, the title and the type of units to use in the layout. MgPortableMap TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableMapPlot The MgPortableMapPlot class allows the developer to specify the map, the view of the map, the plot specification, and the layout for one sheet within a call to GenerateMultiPlot. MgPortableMapPlotCollection Manipulates collections of MgPortableMapPlot objects. MgPortableMapPlotInstruction MgPortableMapPlotInstruction defines enumerated values used to indicate whether the plot should be based on the center and scale of the map, an overridden center and scale, or an overridden extent. MgPortableMappingService Performs map related operations such as getting an eMap DWF representing a map or updates to a map, or querying features from maps or layers of a map. MgPortablePageUnitsType Defines page size units for the Mapping Service. MgPortablePlatform A static utility class that provides the means for initializing and tearing down the MapGuide Platform. You must initialize the platform before you can use any service classes or the Coordinate System API. MgPortablePlotSpecification TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableProfilingService This class provides services to profile existing MapGuide APIs MgPortableRdbmsFeatureSourceParams Contains the parameters used to create a relational feature source. This is the relational analogue to the MgFileFeatureSourceParams class MgPortableRenderingOptions Options for Rendering Service. MgPortableRenderingService This class provides services to render a map into an image MgPortableResourceService TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableScrollableFeatureReader TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableSelection TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableServiceFactory The MgPortableServiceFactory class allows you to create instances of service classes MgPortableTileService TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableTransaction TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgPortableUnitType MgPortableUnitType defines enumerated values used to determine the type of units for plot decorations (scale bar). MgPreparedGeometry MgPreparedGeometry is an prepared form of MgGeometry optimized for the case of repeated evaluation of spatial predicates against it and any other geometry MgProfilingService This class provides services to profile exsiting MapGuide APIs MgProperty A base class for MgNullableProperty, which is the base class for all of the concrete property classes, for example, OSGeo.MapGuide.MgBooleanProperty and a base class for MgPropertyDefinition, which is the base class for all of the concrete property definition classes, for example, OSGeo.MapGuide.MgDataPropertyDefinition. MgPropertyCollection MgPropertyCollection represents a collection of properties. All properties contained in an instance of a property collection are objects whose base class is MgProperty and whose derived class is one of the classes referenced in the MgPropertyDefinition Defines the base class for the concrete property definition classes which are used to create data, geometric, object, and raster property definitions. MgPropertyDefinitionCollection This class contains property definitions for a feature class and makes up a portion of the complete feature class definition. MgPropertyType Defines the names for the various property types. MgRaster TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgRasterDataModelType Enumerated values used to determine the type of units for plot decorations (scale bar). MgRasterProperty Stores MgRaster data with an associated key name. MgRasterPropertyDefinition Defines a feature property which contains a raster image. MgReadOnlyLayerCollection Provides read only access to a collection of MgLayerBase objects. MgReadOnlyStream A read-only Stream adapter for the MgByteReader class. MgReader Provides a forward-only, read-only iterator for reading data. You must call ReadNext before you can access any data. This is a base class for MgDataReader, MgFeatureReader, and MgSqlDataReader. MgReaderType Type of reader represented by an MgReader MgRegion MgRegion is an abstract base class The concrete classes are MgPolygon and MgCurvePolygon. MgRenderingOptions Options for Rendering Service. MgRenderingService This class provides services to render a map into an image MgRepositoryType Defines names for the different types of repositories. MgResource The abstract base class for all resource types. MgResourceDataName Defines reserved names for resource data. MgResourceDataType TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgResourceHeaderProperties Properties of the resource header. INTERNAL - Do not document. MgResourceIdentifier Creates and manipulates resource identifiers. MgResourcePermission Types of resource permissions. MgResourceService Enables you to manipulate repositories and resources. MgResourceTag Substitution tags used within the XML file for a resource. MgResourceType Defines names for the different types of resources. MgRing TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgRole MapGuide roles. MgSelection TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgSelectionBase TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgSerializable Root class of all serializable objects. MgServerAdmin This class contains methods to allow MapGuide clients to perform administration related operations: Server Configuration Logging Online/Offline Server Health MgServerInformationProperties ServerAdmin properties. Note that this is not a complete list of the properties which may be set for a server. Values stored in the server's config file are also properties of the server. These properties are defined in MgConfigProperties.h. MgService class Service Base class for all services APIs MgServiceType Service types for Platform services. MgSingleProperty Stores single precision floating point data with an associated key name. MgSite TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgSiteConnection Site connection. Provides basic authentication and Service access capabilities for the site. MgSiteInfo TODO: This class has no class documentation (message inserted by IMake.exe) MgSpatialContextExtentType The SpatialContextExtentType enumeration defines how the extent of a context should be handled by the provider. MgSpatialContextReader Provides forward-only, read-only functionality for enumerating spatial context information retrieved from a feature source. MgSqlDataReader Provides a forward-only, read-only iterator for reading data returned by a call to MgFeatureService::ExecuteSqlQuery. MgStringCollection This class represents a collection of strings. The collection maintains its own copy of strings. MgStringProperty Stores string data with an associated key name. MgStringPropertyCollection This class collects key-value pairs in Strings. The key name should be unique. MgTileService This class provides services to render a map into an image MgTransaction MgTransaction represents a transaction to be performed in a DataStore. If the transaction is time out, commit or rollback a transaction will result in one exception OSGeo.MapGuide.MgFeatureServiceException thrown. MgTransform MgTransform is an abstract class that can be implemented to provide linear or projected coordinate transformations. There are currently no concrete classes. MgUnitType MgUnitType defines enumerated values used to determine the type of units for plot decorations (scale bar). MgUpdateFeatures Creates an update feature data command. You must add this command to an MgFeatureCommandCollection object and pass the latter in a call to MgFeatureService::UpdateFeatures. MgUser MapGuide users. MgUserInformation Type of user information INTERNAL API: Do not document MgWarnings Exposes non-critical warning messages from services. MgWebActions TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgWebBufferCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebCommandCollection TODO: This class has no class documentation (message inserted by IMake.exe) MgWebCommandWidget TODO: This class has no class documentation (message inserted by IMake.exe) MgWebContextMenu TODO: This class has no class documentation (message inserted by IMake.exe) MgWebFlyoutWidget TODO: This class has no class documentation (message inserted by IMake.exe) MgWebGetPrintablePageCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebHelpCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebInformationPane TODO: This class has no class documentation (message inserted by IMake.exe) MgWebInvokeScriptCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebInvokeUrlCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebLayout TODO: This class has no class documentation (message inserted by IMake.exe) MgWebMeasureCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebPrintCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebSearchCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebSelectWithinCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebSeparatorWidget TODO: This class has no class documentation (message inserted by IMake.exe) MgWebTargetType TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgWebTargetViewerType TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgWebTaskBar TODO: This class has no class documentation (message inserted by IMake.exe) MgWebTaskBarWidget TODO: This class has no class documentation (message inserted by IMake.exe) MgWebTaskButtonType TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgWebTaskPane TODO: This class has no class documentation (message inserted by IMake.exe) MgWebToolBar TODO: This class has no class documentation (message inserted by IMake.exe) MgWebUiPane TODO: This class has no class documentation (message inserted by IMake.exe) MgWebUiSizablePane TODO: This class has no class documentation (message inserted by IMake.exe) MgWebUiTargetCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebViewOptionsCommand TODO: This class has no class documentation (message inserted by IMake.exe) MgWebWidget TODO: This class has no class documentation (message inserted by IMake.exe) MgWebWidgetCollection TODO: This class has no class documentation (message inserted by IMake.exe) MgWebWidgetType TODO: API Documentation is missing or failed to translate doxygen brief directive (message inserted by IMake.exe) MgWktReaderWriter Translates a string in AGF (Autodesk Geometry Format) Text ReadOnlyRewindableStream A read-only, rewindable stream Enums MgMap.WatermarkUsageType MgPortableMap.WatermarkUsageType MgSiteInfo.MgPortType MgSiteInfo.MgSiteStatus Delegates GetByteReaderMethod Represents a method that returns a MgByteReader instance"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Getting Started To get started, your application needs to reference the MapGuide API for .net assemblies. You can do this in one of 2 ways below. NuGet Packages (recommended) The MapGuide API for .net is available as packages from nuget.org. New versions of these packages are published with each release of MapGuide. Simply install the following packges: OSGeo.MapGuide.Foundation OSGeo.MapGuide.Geometry OSGeo.MapGuide.PlatformBase OSGeo.MapGuide.MapGuideCommon OSGeo.MapGuide.Web Local Packages Local copies of these nuget packages are also included with a normal MapGuide web tier installation, to use these local nuget packages, either copy/upload these .nupkg files to your local nuget registry or set up a package source in your nuget.config that points to the directory containing these files"
  },
  "docs/unique-features.html": {
    "href": "docs/unique-features.html",
    "title": "Unique features of the .net API | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Unique features of the .net API The MapGuide API for .net provides the following unique features on-top of the standard C++ API surface that is exposed and wrapped by proxy classes in .net. Property support Most Get and Set pairs of methods are encapsulated as standard .net properties MgReadOnlyStream The MgByteReader class models a read-only stream of data. However, when interoperating in the .net world such streams are generally represented in the form of System.IO.Stream. Thus, one would have to write stream conversion code to transfer the underlying stream contents from a MgByteReader to a System.IO.Stream. The .net API includes a MgReadOnlyStream class to eliminate such boilerplate by provided a System.IO.Stream adapter over the existing MgByteReader. .net collection interface support All collection proxy classes implement the IList<T> interface allowing for instances of your MapGuide collection classes to be passed to anything expecting IList<T>. The only exception is MgReadOnlyCollection, which only implements IReadOnlyList<T> given its read-only nature Library-specific initialization When using the MapGuide API, you must call MapGuideApi.MgInitializeWebTier(<path to webconfig.ini>) to initialize the API before using it. If you are building an application only using the OSGeo.MapGuide.Foundation, OSGeo.MapGuide.Geometry and OSGeo.MapGuide.PlatformBase subsets of the MapGuide API, the MgInitializeWebTier method is not available for you to call, as that is part of the OSGeo.MapGuide.Web module. For such cases, the OSGeo.MapGuide.Foundation provides the following methods to initalize only this subset: FoundationApi.MgInitializeLibrary(string stringResourcesPath, string locale) FoundationApi.MgUninitializeLibrary()"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction | MapGuide .net API reference (4.0 RC1)",
    "keywords": "Introduction This is the home of the reference document for the MapGuide API for .net"
  }
}